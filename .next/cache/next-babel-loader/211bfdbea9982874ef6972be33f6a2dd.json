{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, memo, useEffect } from \"react\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Paper } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { words } from \"./words\";\nconst DraggableTodo = SortableElement(({\n  _id,\n  description,\n  completed,\n  updatedAt,\n  sorted,\n  tasksDBIdx\n}) => {\n  const dispatch = useContext(DispatchContext);\n  const {\n    language\n  } = useContext(LanguageContext);\n  const [isEditing, toggle] = useToggleState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    lastUpdated\n  } = words[language];\n\n  const handleDeleteClick = () => {\n    enqueueSnackbar(`❌ Deleted Task: \"${description}\"`);\n  };\n\n  const handleToggleClick = () => {\n    enqueueSnackbar(`Good work! 💪 Task: \"${description}\" completed!`);\n  };\n\n  const formatedDate = () => {\n    moment.locale(language);\n    return moment(updatedAt).format(\"lll\");\n  };\n\n  return __jsx(Paper, {\n    elevation: 3\n  }, __jsx(ListItem, {\n    style: {\n      height: \"65px\"\n    },\n    divider: true\n  }, isEditing ? __jsx(EditTodoForm, {\n    _id: _id,\n    tasksDBIdx: tasksDBIdx,\n    sorted: sorted,\n    description: description,\n    toggleEditForm: toggle\n  }) : __jsx(React.Fragment, null, __jsx(Switch, {\n    tabIndex: -1,\n    onChange: () => {\n      sorted({\n        type: \"TOGGLE\",\n        id: _id,\n        completed: completed\n      });\n\n      if (tasksDBIdx !== undefined) {\n        dispatch({\n          type: \"TOGGLE\",\n          id: tasksDBIdx._id,\n          completed: completed\n        });\n      }\n\n      console.log(completed);\n      completed ? null : handleToggleClick();\n    },\n    checked: completed\n  }), __jsx(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    },\n    primary: description,\n    secondary: `${lastUpdated}: ${formatedDate()}`\n  }), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => {\n      sorted({\n        type: \"REMOVE\",\n        id: _id\n      });\n\n      if (tasksDBIdx !== undefined) {\n        dispatch({\n          type: \"REMOVE\",\n          id: tasksDBIdx._id\n        });\n      }\n\n      handleDeleteClick();\n    }\n  }, __jsx(DeleteIcon, null)), __jsx(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle\n  }, __jsx(EditIcon, null))), \" \")));\n});\nexport default memo(DraggableTodo);","map":null,"metadata":{},"sourceType":"module"}