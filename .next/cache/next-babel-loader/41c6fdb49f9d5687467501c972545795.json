{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport axios from 'axios'; //token , starter tasks?, reducer\n\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let val;\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    async function getData() {\n      try {\n        const response = await axios.get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token.token\n          }\n        });\n        console.log(response);\n        val = response.data;\n      } catch (e) {\n        console.error('Error:', e);\n        val = defaultVal;\n      }\n    }\n\n    return val;\n  });\n  console.log('state inside dbreducer:', state);\n  return [state, dispatch];\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","axios","useDBReducer","token","defaultVal","todoReducer","state","dispatch","val","proxyUrl","targetUrl","getData","response","get","headers","Authorization","console","log","data","e","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;AACpD;AACA;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,UAAU,CAACM,WAAD,EAAcD,UAAd,EAA0B,MAAM;AAClE;AACA,QAAII,GAAJ;AACA,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,SAAS,GAAG,gDAAlB;;AAEA,mBAAeC,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUJ,QAAQ,GAAGC,SAArB,EAAgC;AACrDI,UAAAA,OAAO,EAAE;AAAEC,YAAAA,aAAa,EAAE,YAAYZ,KAAK,CAACA;AAAnC;AAD4C,SAAhC,CAAvB;AAGAa,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAJ,QAAAA,GAAG,GAAGI,QAAQ,CAACM,IAAf;AACD,OAND,CAME,OAAOC,CAAP,EAAU;AACVH,QAAAA,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAX,QAAAA,GAAG,GAAGJ,UAAN;AACD;AACF;;AAED,WAAOI,GAAP;AACD,GApBmC,CAApC;AAsBAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCX,KAAvC;AACA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAASL,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n//token , starter tasks?, reducer\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let val;\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    async function getData() {\n      try {\n        const response = await axios.get(proxyUrl + targetUrl, {\n          headers: { Authorization: 'Bearer ' + token.token }\n        });\n        console.log(response);\n        val = response.data;\n      } catch (e) {\n        console.error('Error:', e);\n        val = defaultVal;\n      }\n    }\n\n    return val;\n  });\n\n  console.log('state inside dbreducer:', state);\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}