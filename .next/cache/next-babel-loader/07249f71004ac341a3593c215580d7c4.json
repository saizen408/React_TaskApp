{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { UserContext, AuthenticateContext } from \"./contexts/user.context\";\nimport useInputState from \"./hooks/useInputState\";\nimport cubeSpinner from \"./styles/cubeSpinner\";\nimport { useSnackbar } from \"notistack\";\nexport const words = {\n  en: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\",\n    errorMessage: \"Email and/or Password incorrect\",\n    demoMessage: \"Welcome to Task App Demo! Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\",\n    errorMessage: \"E-mail et / ou mot de passe incorrect\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 128834567\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\",\n    errorMessage: \"Correo electrónico y / o contraseña incorrectos\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 123458867\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    signIn: \"anmelden\",\n    email: \"E-Mail-Addresse\",\n    password: \"Passwort\",\n    remember: \"Behalte mich in Erinnerung\",\n    errorMessage: \"E-Mail und / oder Passwort falsch\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 123456887\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n  ja: {\n    signIn: \"サインイン\",\n    email: \"電子メールアドレス\",\n    password: \"パスワード\",\n    remember: \"私を覚えている\",\n    errorMessage: \"メールアドレスまたはパスワードが正しくありません\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 12345678\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\n\nfunction Form(props) {\n  const {\n    language,\n    changeLanguage\n  } = useContext(LanguageContext);\n  const token = useContext(UserContext);\n  const authenticate = useContext(AuthenticateContext);\n  const {\n    classes\n  } = props;\n  const {\n    email,\n    signIn,\n    password,\n    remember,\n    errorMessage,\n    demoMessage\n  } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState(\"\");\n  const [passVal, handlePassChange, passReset] = useInputState(\"\");\n  const [loading, setLoader] = React.useState(false);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleErrorMessage = () => {\n    const message = errorMessage;\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  };\n\n  const handleDemoMessage = () => {\n    const message = demoMessage;\n    enqueueSnackbar(message, {\n      onEnter: closeSnackbar(),\n      preventDuplicate: true,\n      variant: \"info\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      persist: true\n    });\n  };\n\n  const handleSubmit = e => {\n    closeSnackbar();\n    e.preventDefault();\n    setLoader(true);\n    authenticate({\n      type: \"LOGIN\",\n      email: emailVal,\n      password: passVal\n    });\n    setTimeout(() => {\n      if (token.error == true) {\n        setLoader(false);\n        handleErrorMessage();\n        setTimeout(() => {\n          handleDemoMessage();\n        }, 3000);\n      }\n    }, 2000);\n    emailReset();\n    passReset();\n  };\n\n  useEffect(() => {\n    handleDemoMessage();\n  }, [language]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: classes.loader\n    }, cubeSpinner());\n  }\n\n  return __jsx(\"main\", {\n    className: classes.main\n  }, __jsx(Paper, {\n    elevation: 3,\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    variant: \"h5\"\n  }, signIn), __jsx(Select, {\n    value: language,\n    onChange: changeLanguage\n  }, __jsx(MenuItem, {\n    value: \"en\"\n  }, \"English\"), __jsx(MenuItem, {\n    value: \"fr\"\n  }, \"French\"), __jsx(MenuItem, {\n    value: \"es\"\n  }, \"Spanish\"), __jsx(MenuItem, {\n    value: \"de\"\n  }, \"German\"), __jsx(MenuItem, {\n    value: \"ja\"\n  }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit\n  }, __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, email), __jsx(Input, {\n    id: \"email\",\n    name: \"email\",\n    value: emailVal,\n    onChange: handleEmailChange,\n    autoFocus: true\n  })), __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, password), __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    value: passVal,\n    onChange: handlePassChange,\n    autoFocus: true\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\"\n    }),\n    label: remember\n  }), __jsx(Button, {\n    variant: \"contained\",\n    onClick: closeSnackbar(handleDemoMessage),\n    type: \"submit\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submit\n  }, signIn))));\n}\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Form.js"],"names":["React","useContext","useEffect","Avatar","Button","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","withStyles","styles","LanguageContext","UserContext","AuthenticateContext","useInputState","cubeSpinner","useSnackbar","words","en","signIn","email","password","remember","errorMessage","demoMessage","lastUpdated","fr","es","de","ja","Form","props","language","changeLanguage","token","authenticate","classes","emailVal","handleEmailChange","emailReset","passVal","handlePassChange","passReset","loading","setLoader","useState","enqueueSnackbar","closeSnackbar","handleErrorMessage","message","variant","handleDemoMessage","onEnter","preventDuplicate","anchorOrigin","vertical","horizontal","persist","handleSubmit","e","preventDefault","type","setTimeout","error","loader","main","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { UserContext, AuthenticateContext } from \"./contexts/user.context\";\nimport useInputState from \"./hooks/useInputState\";\nimport cubeSpinner from \"./styles/cubeSpinner\";\nimport { useSnackbar } from \"notistack\";\n\nexport const words = {\n  en: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\",\n    errorMessage: \"Email and/or Password incorrect\",\n    demoMessage:\n      \"Welcome to Task App Demo! Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\",\n    errorMessage: \"E-mail et / ou mot de passe incorrect\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 128834567\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\",\n    errorMessage: \"Correo electrónico y / o contraseña incorrectos\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 123458867\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    signIn: \"anmelden\",\n    email: \"E-Mail-Addresse\",\n    password: \"Passwort\",\n    remember: \"Behalte mich in Erinnerung\",\n    errorMessage: \"E-Mail und / oder Passwort falsch\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 123456887\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n\n  ja: {\n    signIn: \"サインイン\",\n    email: \"電子メールアドレス\",\n    password: \"パスワード\",\n    remember: \"私を覚えている\",\n    errorMessage: \"メールアドレスまたはパスワードが正しくありません\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 12345678\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\n\nfunction Form(props) {\n  const { language, changeLanguage } = useContext(LanguageContext);\n  const token = useContext(UserContext);\n  const authenticate = useContext(AuthenticateContext);\n  const { classes } = props;\n  const {\n    email,\n    signIn,\n    password,\n    remember,\n    errorMessage,\n    demoMessage\n  } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState(\"\");\n  const [passVal, handlePassChange, passReset] = useInputState(\"\");\n  const [loading, setLoader] = React.useState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleErrorMessage = () => {\n    const message = errorMessage;\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  };\n\n  const handleDemoMessage = () => {\n    const message = demoMessage;\n\n    enqueueSnackbar(message, {\n      onEnter: closeSnackbar(),\n      preventDuplicate: true,\n      variant: \"info\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      persist: true\n    });\n  };\n\n  const handleSubmit = e => {\n    closeSnackbar();\n    e.preventDefault();\n    setLoader(true);\n    authenticate({ type: \"LOGIN\", email: emailVal, password: passVal });\n    setTimeout(() => {\n      if (token.error == true) {\n        setLoader(false);\n        handleErrorMessage();\n        setTimeout(() => {\n          handleDemoMessage();\n        }, 3000);\n      }\n    }, 2000);\n    emailReset();\n    passReset();\n  };\n\n  useEffect(() => {\n    handleDemoMessage();\n  }, [language]);\n\n  if (loading) {\n    return <div className={classes.loader}>{cubeSpinner()}</div>;\n  }\n\n  return (\n    <main className={classes.main}>\n      <Paper elevation={3} className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{signIn}</Typography>\n        <Select value={language} onChange={changeLanguage}>\n          <MenuItem value=\"en\">English</MenuItem>\n          <MenuItem value=\"fr\">French</MenuItem>\n          <MenuItem value=\"es\">Spanish</MenuItem>\n          <MenuItem value=\"de\">German</MenuItem>\n          <MenuItem value=\"ja\">日本語</MenuItem>\n        </Select>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">{email}</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              value={emailVal}\n              onChange={handleEmailChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">{password}</InputLabel>\n            <Input\n              id=\"password\"\n              name=\"password\"\n              value={passVal}\n              onChange={handlePassChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox color=\"primary\" />}\n            label={remember}\n          />\n          <Button\n            variant=\"contained\"\n            onClick={closeSnackbar(handleDemoMessage)}\n            type=\"submit\"\n            fullWidth\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {signIn}\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nexport default withStyles(styles)(Form);\n"]},"metadata":{},"sourceType":"module"}