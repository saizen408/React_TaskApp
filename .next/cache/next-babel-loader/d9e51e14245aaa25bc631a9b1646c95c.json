{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\n\nfunction Todo(_ref) {\n  var _id = _ref._id,\n      description = _ref.description,\n      completed = _ref.completed;\n  var dispatch = useContext(DispatchContext);\n\n  var _useToggleState = useToggleState(false),\n      _useToggleState2 = _slicedToArray(_useToggleState, 2),\n      isEditing = _useToggleState2[0],\n      toggle = _useToggleState2[1];\n\n  var _useToggleState3 = useToggleState(false),\n      _useToggleState4 = _slicedToArray(_useToggleState3, 2),\n      isDeleting = _useToggleState4[0],\n      toggleDelete = _useToggleState4[1];\n\n  return __jsx(ListItem, {\n    style: {\n      height: \"64px\"\n    }\n  }, isEditing ? __jsx(EditTodoForm, {\n    id: _id,\n    task: description,\n    toggleEditForm: toggle\n  }) : __jsx(React.Fragment, null, __jsx(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: function onClick() {\n      return dispatch({\n        type: \"TOGGLE\",\n        id: _id\n      });\n    }\n  }), __jsx(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    }\n  }, description), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: function onClick() {\n      dispatch({\n        type: \"REMOVE\",\n        id: _id\n      });\n      {\n        toggleDelete;\n      }\n    },\n    disabled: isDeleting ? toggleDelete : false\n  }, __jsx(DeleteIcon, null)), __jsx(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle\n  }, __jsx(EditIcon, null))), \" \"));\n}\n\nexport default memo(Todo);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Todo.js"],"names":["React","useContext","memo","useToggleState","EditTodoForm","ListItemText","ListItem","Checkbox","IconButton","DeleteIcon","EditIcon","ListItemSecondaryAction","DispatchContext","Todo","_id","description","completed","dispatch","isEditing","toggle","isDeleting","toggleDelete","height","type","id","textDecoration"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,SAASC,IAAT,OAA+C;AAAA,MAA/BC,GAA+B,QAA/BA,GAA+B;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAC7C,MAAMC,QAAQ,GAAGhB,UAAU,CAACW,eAAD,CAA3B;;AAD6C,wBAEjBT,cAAc,CAAC,KAAD,CAFG;AAAA;AAAA,MAEtCe,SAFsC;AAAA,MAE3BC,MAF2B;;AAAA,yBAGVhB,cAAc,CAAC,KAAD,CAHJ;AAAA;AAAA,MAGtCiB,UAHsC;AAAA,MAG1BC,YAH0B;;AAI7C,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAjB,KACGJ,SAAS,GACR,MAAC,YAAD;AAAc,IAAA,EAAE,EAAEJ,GAAlB;AAAuB,IAAA,IAAI,EAAEC,WAA7B;AAA0C,IAAA,cAAc,EAAEI;AAA1D,IADQ,GAGR,4BACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CADb;AAEE,IAAA,OAAO,EAAEH,SAFX;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAEV;AAAtB,OAAD,CAAd;AAAA;AAHX,IADF,EAME,MAAC,YAAD;AACE,IAAA,KAAK,EAAE;AAAEW,MAAAA,cAAc,EAAET,SAAS,GAAG,cAAH,GAAoB;AAA/C;AADT,KAGGD,WAHH,CANF,EAWE,MAAC,uBAAD,QACE,MAAC,UAAD;AACE,kBAAW,QADb;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbE,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,EAAE,EAAEV;AAAtB,OAAD,CAAR;AACA;AACEO,QAAAA,YAAY;AACb;AACF,KAPH;AAQE,IAAA,QAAQ,EAAED,UAAU,GAAGC,YAAH,GAAkB;AARxC,KAUE,MAAC,UAAD,OAVF,CADF,EAaE,MAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,OAAO,EAAEF;AAAvC,KACE,MAAC,QAAD,OADF,CAbF,CAXF,EA2B6B,GA3B7B,CAJJ,CADF;AAqCD;;AAED,eAAejB,IAAI,CAACW,IAAD,CAAnB","sourcesContent":["import React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\n\nfunction Todo({ _id, description, completed }) {\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n  const [isDeleting, toggleDelete] = useToggleState(false);\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? (\n        <EditTodoForm id={_id} task={description} toggleEditForm={toggle} />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => dispatch({ type: \"TOGGLE\", id: _id })}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {description}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={() => {\n                dispatch({ type: \"REMOVE\", id: _id });\n                {\n                  toggleDelete;\n                }\n              }}\n              disabled={isDeleting ? toggleDelete : false}\n            >\n              <DeleteIcon></DeleteIcon>\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon></EditIcon>\n            </IconButton>\n          </ListItemSecondaryAction>{\" \"}\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n"]},"metadata":{},"sourceType":"module"}