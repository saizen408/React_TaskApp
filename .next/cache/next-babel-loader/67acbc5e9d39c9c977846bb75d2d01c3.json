{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext } from 'react';\nimport { useLocalStorageReducer } from '../hooks/useLocalStorageReducer';\nimport { useAuthReducer } from '../hooks/useAuthReducer';\nimport todoReducer from '../reducers/todo.reducer';\nimport authReducer from '../reducers/auth.reducer';\nconst defaultTodos = [{\n  id: 1,\n  task: 'Mow the lawn using goats',\n  completed: false\n}, {\n  id: 2,\n  task: 'Release lady bugs into garden',\n  completed: true\n}];\nconst defaultToken = {\n  token: 'hi'\n};\nexport const UserContext = createContext();\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\nexport function TodosProvider(props) {\n  //check for token value\n  // if (!token) {\n  //   let token = '';\n  //   const [token, authenticate] = useAuthReducer(authReducer, token);\n  //   return (\n  //     <UserContext.Provider value={authenticate}>\n  //       <TodosContext.Provider value={todos}>\n  //         <DispatchContext.Provider value={dispatch}>\n  //           {props.children}\n  //         </DispatchContext.Provider>\n  //       </TodosContext.Provider>\n  //     </UserContext.Provider>\n  //   );\n  // }\n  const [token, authenticate] = useAuthReducer(authReducer, defaultToken);\n  const [todos, dispatch] = useLocalStorageReducer('todos', defaultTodos, todoReducer);\n  return __jsx(TodosContext.Provider, {\n    value: todos\n  }, __jsx(DispatchContext.Provider, {\n    value: dispatch\n  }, __jsx(UserContext.Provider, {\n    value: {\n      token,\n      authenticate\n    }\n  }, props.children)));\n}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/contexts/todos.context.js"],"names":["React","createContext","useLocalStorageReducer","useAuthReducer","todoReducer","authReducer","defaultTodos","id","task","completed","defaultToken","token","UserContext","TodosContext","DispatchContext","TodosProvider","props","authenticate","todos","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,sBAAT,QAAuC,iCAAvC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,0BAAf;AAA2CC,EAAAA,SAAS,EAAE;AAAtD,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,+BAAf;AAAgDC,EAAAA,SAAS,EAAE;AAA3D,CAFmB,CAArB;AAIA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;AAEA,OAAO,MAAMC,WAAW,GAAGX,aAAa,EAAjC;AACP,OAAO,MAAMY,YAAY,GAAGZ,aAAa,EAAlC;AACP,OAAO,MAAMa,eAAe,GAAGb,aAAa,EAArC;AAEP,OAAO,SAASc,aAAT,CAAuBC,KAAvB,EAA8B;AACnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACL,KAAD,EAAQM,YAAR,IAAwBd,cAAc,CAACE,WAAD,EAAcK,YAAd,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBjB,sBAAsB,CAC9C,OAD8C,EAE9CI,YAF8C,EAG9CF,WAH8C,CAAhD;AAKA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEc;AAA9B,KACE,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEC;AAAjC,KACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAER,MAAAA,KAAF;AAASM,MAAAA;AAAT;AAA7B,KACGD,KAAK,CAACI,QADT,CADF,CADF,CADF;AASD","sourcesContent":["import React, { createContext } from 'react';\nimport { useLocalStorageReducer } from '../hooks/useLocalStorageReducer';\nimport { useAuthReducer } from '../hooks/useAuthReducer';\nimport todoReducer from '../reducers/todo.reducer';\nimport authReducer from '../reducers/auth.reducer';\n\nconst defaultTodos = [\n  { id: 1, task: 'Mow the lawn using goats', completed: false },\n  { id: 2, task: 'Release lady bugs into garden', completed: true }\n];\nconst defaultToken = { token: 'hi' };\n\nexport const UserContext = createContext();\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n  //check for token value\n\n  // if (!token) {\n  //   let token = '';\n  //   const [token, authenticate] = useAuthReducer(authReducer, token);\n  //   return (\n  //     <UserContext.Provider value={authenticate}>\n  //       <TodosContext.Provider value={todos}>\n  //         <DispatchContext.Provider value={dispatch}>\n  //           {props.children}\n  //         </DispatchContext.Provider>\n  //       </TodosContext.Provider>\n  //     </UserContext.Provider>\n  //   );\n  // }\n  const [token, authenticate] = useAuthReducer(authReducer, defaultToken);\n  const [todos, dispatch] = useLocalStorageReducer(\n    'todos',\n    defaultTodos,\n    todoReducer\n  );\n  return (\n    <TodosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        <UserContext.Provider value={{ token, authenticate }}>\n          {props.children}\n        </UserContext.Provider>\n      </DispatchContext.Provider>\n    </TodosContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}