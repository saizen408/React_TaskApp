{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nvar cookies = new Cookies();\nvar token = cookies.get(\"token\");\n\nvar todoReducer = function todoReducer(state, action) {\n  console.log(\"state before switch/case executes: \", state);\n\n  switch (action.type) {\n    case \"ADD\":\n      var addTasks = function addTasks() {\n        var description, body, proxyUrl, targetUrl, res, data;\n        return _regeneratorRuntime.async(function addTasks$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                description = action.task;\n                body = {\n                  description: description\n                };\n                _context.prev = 2;\n                proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n                targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(axios({\n                  url: proxyUrl + targetUrl,\n                  method: \"post\",\n                  data: body,\n                  headers: {\n                    Authorization: \"Bearer \" + token\n                  }\n                }));\n\n              case 7:\n                res = _context.sent;\n                data = res.data;\n                return _context.abrupt(\"return\", [].concat(_toConsumableArray(state), [{\n                  _id: data._id,\n                  description: data.description,\n                  completed: false,\n                  updatedAt: data.updatedAt\n                }]));\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 15:\n                addTasks();\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 12]]);\n      };\n\n    // case \"REMOVE\":\n    //   console.log(\"remove clicked!\");\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"delete\",\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     console.log(\"removing task from state: \", state);\n    //     // return state.filter(todo => todo._id !== action._id);\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n    // case \"TOGGLE\":\n    //   console.log(\"toggle clicked!\");\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const isDone = !action.completed;\n    //     const updateData = { completed: isDone };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: updateData,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n    // case \"EDIT\":\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const description = action.newTask;\n    //     const body = { description };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: body,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Router","Cookies","cookies","token","get","todoReducer","state","action","console","log","type","addTasks","description","task","body","proxyUrl","targetUrl","url","method","data","headers","Authorization","res","_id","completed","updatedAt"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,IAAME,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,KAAnD;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,KAAL;AACE,UAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,gBAAAA,WADS,GACKL,MAAM,CAACM,IADZ;AAETC,gBAAAA,IAFS,GAEF;AAAEF,kBAAAA,WAAW,EAAXA;AAAF,iBAFE;AAAA;AAIPG,gBAAAA,QAJO,GAII,sCAJJ;AAKPC,gBAAAA,SALO,GAKK,gDALL;AAAA;AAAA,iDAMKjB,KAAK,CAAC;AACtBkB,kBAAAA,GAAG,EAAEF,QAAQ,GAAGC,SADM;AAEtBE,kBAAAA,MAAM,EAAE,MAFc;AAGtBC,kBAAAA,IAAI,EAAEL,IAHgB;AAItBM,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,aAAa,EAAE,YAAYlB;AADpB;AAJa,iBAAD,CANV;;AAAA;AAMPmB,gBAAAA,GANO;AAcPH,gBAAAA,IAdO,GAcAG,GAAG,CAACH,IAdJ;AAAA,8EAgBRb,KAhBQ,IAiBX;AACEiB,kBAAAA,GAAG,EAAEJ,IAAI,CAACI,GADZ;AAEEX,kBAAAA,WAAW,EAAEO,IAAI,CAACP,WAFpB;AAGEY,kBAAAA,SAAS,EAAE,KAHb;AAIEC,kBAAAA,SAAS,EAAEN,IAAI,CAACM;AAJlB,iBAjBW;;AAAA;AAAA;AAAA;AA0BbjB,gBAAAA,OAAO,CAACC,GAAR;;AA1Ba;AA4BfE,gBAAAA,QAAQ;;AA5BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;;AA+BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE,aAAOL,KAAP;AA/FJ;AAiGD,CAnGD;;AAqGA,eAAeD,WAAf","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = (state, action) => {\n  console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const addTasks = async () => {\n        const description = action.task;\n        const body = { description };\n        try {\n          const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n          const res = await axios({\n            url: proxyUrl + targetUrl,\n            method: \"post\",\n            data: body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          });\n          const data = res.data;\n          return [\n            ...state,\n            {\n              _id: data._id,\n              description: data.description,\n              completed: false,\n              updatedAt: data.updatedAt\n            }\n          ];\n          // Router.push(\"/TodoAppPage\");\n        } catch (e) {\n          console.log(e);\n        }\n        addTasks();\n      };\n\n    // case \"REMOVE\":\n    //   console.log(\"remove clicked!\");\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"delete\",\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     console.log(\"removing task from state: \", state);\n    //     // return state.filter(todo => todo._id !== action._id);\n\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n    // case \"TOGGLE\":\n    //   console.log(\"toggle clicked!\");\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const isDone = !action.completed;\n    //     const updateData = { completed: isDone };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: updateData,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    // case \"EDIT\":\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const description = action.newTask;\n    //     const body = { description };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: body,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}