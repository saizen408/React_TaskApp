{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Form from '../components/Form';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      // const { posts } = this.props;\n      return __jsx(\"div\", null, __jsx(Form, null));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var proxyUrl, targetUrl;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n              targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n              try {\n                axios.get(proxyUrl + targetUrl, {\n                  headers: {\n                    Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n\n                  }\n                }).then(function (response) {\n                  console.log(response.data); // val = response.data;\n                })[\"catch\"](function (e) {\n                  console.log(e);\n                });\n              } catch (e) {\n                console.error('Error:', e); // val = defaultVal;\n              } //   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n              //   const { data } = res; // const data = res.data\n              //   return { posts: data }; // res.data is now saved to props.posts\n\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Index;\n}(Component); // const Index = ({ posts }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// Index.getInitialProps = async () => {\n//   // https://jsonplaceholder.typicode.com/posts\n//   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n//   const { data } = res; // const data = res.data\n//   return {\n//     posts: data\n//   };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/pages/index.js"],"names":["Link","axios","React","Component","Form","Index","props","proxyUrl","targetUrl","get","headers","Authorization","token","then","response","console","log","data","e","error"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8EACXA,KADW;AAElB;;;;6BA6BQ;AACP;AACA,aACE,mBACE,MAAC,IAAD,OADF,CADF;AAeD;;;;;;;;;AA3COC,cAAAA,Q,GAAW,sC;AACXC,cAAAA,S,GAAY,gD;;AAElB,kBAAI;AACFP,gBAAAA,KAAK,CACFQ,GADH,CACOF,QAAQ,GAAGC,SADlB,EAC6B;AACzBE,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,aAAa,EAAE,YAAYC,KAAK,CAACA,KAD1B,CACgC;;AADhC;AADgB,iBAD7B,EAMGC,IANH,CAMQ,UAAAC,QAAQ,EAAI;AAChBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADgB,CAEhB;AACD,iBATH,WAUS,UAAAC,CAAC,EAAI;AACVH,kBAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD,iBAZH;AAaD,eAdD,CAcE,OAAOA,CAAP,EAAU;AACVH,gBAAAA,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,CAAxB,EADU,CAEV;AACD,e,CACD;AACA;AACA;;;;;;;;;;;;;EA7BgBf,S,GAoDpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,eAAeE,KAAf","sourcesContent":["import Link from 'next/link';\nimport axios from 'axios';\n\nimport React, { Component } from 'react';\nimport Form from '../components/Form';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps() {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios\n        .get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n          }\n        })\n        .then(response => {\n          console.log(response.data);\n          // val = response.data;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } catch (e) {\n      console.error('Error:', e);\n      // val = defaultVal;\n    }\n    //   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n    //   const { data } = res; // const data = res.data\n    //   return { posts: data }; // res.data is now saved to props.posts\n  }\n\n  render() {\n    // const { posts } = this.props;\n    return (\n      <div>\n        <Form />\n        {/* <h1>Our Index Page!!!</h1>\n        <ul>\n          {posts.map(post => (\n            <li key={post.id}>\n              <Link href={`/post?id=${post.id}`} as={`/p/${post.id}`}>\n                <a>{post.title}</a>\n              </Link>\n            </li>\n          ))}\n        </ul> */}\n      </div>\n    );\n  }\n}\n\n// const Index = ({ posts }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// Index.getInitialProps = async () => {\n//   // https://jsonplaceholder.typicode.com/posts\n//   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n//   const { data } = res; // const data = res.data\n\n//   return {\n//     posts: data\n//   };\n// };\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}