{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport uuid from 'uuid/v4';\n\nconst todoReducer = (state, action) => {\n  console.log('test ran');\n\n  switch (action.type) {\n    case 'ADD':\n      return [...state, {\n        id: uuid(),\n        task: action.task,\n        completed: false\n      }];\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        completed: !todo.completed\n      }) : todo);\n\n    case 'EDIT':\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        task: action.newTask\n      }) : todo);\n\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\n\nexport default todoReducer; // {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["uuid","todoReducer","state","action","console","log","type","id","task","completed","filter","todo","map","newTask"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,KAAL;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAW;AAAEK,QAAAA,EAAE,EAAEP,IAAI,EAAV;AAAcQ,QAAAA,IAAI,EAAEL,MAAM,CAACK,IAA3B;AAAiCC,QAAAA,SAAS,EAAE;AAA5C,OAAX,CAAP;;AACF,SAAK,QAAL;AACE,aAAOP,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAxC,CAAP;;AACF,SAAK,QAAL;AACE,aAAOL,KAAK,CAACU,GAAN,CAAUD,IAAI,IACnBA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAnB,qBAA6BI,IAA7B;AAAmCF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAApD,WAAkEE,IAD7D,CAAP;;AAGF,SAAK,MAAL;AACE,aAAOT,KAAK,CAACU,GAAN,CAAUD,IAAI,IACnBA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAnB,qBAA6BI,IAA7B;AAAmCH,QAAAA,IAAI,EAAEL,MAAM,CAACU;AAAhD,WAA4DF,IADvD,CAAP;;AAGF;AACEP,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,aAAOH,KAAP;AAfJ;AAiBD,CAnBD;;AAqBA,eAAeD,WAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import uuid from 'uuid/v4';\nconst todoReducer = (state, action) => {\n  console.log('test ran');\n  switch (action.type) {\n    case 'ADD':\n      return [...state, { id: uuid(), task: action.task, completed: false }];\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case 'EDIT':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\n      );\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\n\nexport default todoReducer;\n\n// {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}\n"]},"metadata":{},"sourceType":"module"}