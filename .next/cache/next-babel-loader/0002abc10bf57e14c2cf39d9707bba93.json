{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport axios from 'axios'; //token , starter tasks?, reducer\n\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  console.log('token:', token);\n\n  if (token !== '') {\n    //make piece of state, based off of value in localstorage (or default)\n    //in case of a DB the key will equal the collection name\n    var _useReducer = useReducer(todoReducer, defaultVal, function () {\n      //this function checks database for existing tasks for the user\n      var val;\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      var targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n      try {\n        axios.get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token //the token is a variable which holds the token\n\n          }\n        }).then(function (response) {\n          console.log(response);\n          val = response.data;\n        });\n      } catch (e) {\n        console.error('Error:', e);\n        val = defaultVal;\n      }\n\n      return val;\n    }),\n        state = _useReducer[0],\n        dispatch = _useReducer[1]; //   useEffect(() => {\n    //   })\n\n\n    console.log('state inside dbreducer:', state);\n    return [state, dispatch];\n  } else {\n    return null;\n  }\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","axios","useDBReducer","token","defaultVal","todoReducer","console","log","val","proxyUrl","targetUrl","get","headers","Authorization","then","response","data","e","error","state","dispatch"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB;;AACA,MAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB;AACA;AAFgB,sBAGUJ,UAAU,CAACM,WAAD,EAAcD,UAAd,EAA0B,YAAM;AAClE;AACA,UAAII,GAAJ;AAEA,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,SAAS,GAAG,gDAAlB;;AACA,UAAI;AACFT,QAAAA,KAAK,CACFU,GADH,CACOF,QAAQ,GAAGC,SADlB,EAC6B;AACzBE,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE,YAAYV,KADpB,CAC0B;;AAD1B;AADgB,SAD7B,EAMGW,IANH,CAMQ,UAAAC,QAAQ,EAAI;AAChBT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACAP,UAAAA,GAAG,GAAGO,QAAQ,CAACC,IAAf;AACD,SATH;AAUD,OAXD,CAWE,OAAOC,CAAP,EAAU;AACVX,QAAAA,OAAO,CAACY,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAT,QAAAA,GAAG,GAAGJ,UAAN;AACD;;AACD,aAAOI,GAAP;AACD,KAtBmC,CAHpB;AAAA,QAGTW,KAHS;AAAA,QAGFC,QAHE,mBA0BhB;AAEA;;;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCY,KAAvC;AACA,WAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD,GA/BD,MA+BO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASlB,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n//token , starter tasks?, reducer\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  console.log('token:', token);\n  if (token !== '') {\n    //make piece of state, based off of value in localstorage (or default)\n    //in case of a DB the key will equal the collection name\n    const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n      //this function checks database for existing tasks for the user\n      let val;\n\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n      try {\n        axios\n          .get(proxyUrl + targetUrl, {\n            headers: {\n              Authorization: 'Bearer ' + token //the token is a variable which holds the token\n            }\n          })\n          .then(response => {\n            console.log(response);\n            val = response.data;\n          });\n      } catch (e) {\n        console.error('Error:', e);\n        val = defaultVal;\n      }\n      return val;\n    });\n    //   useEffect(() => {\n\n    //   })\n    console.log('state inside dbreducer:', state);\n    return [state, dispatch];\n  } else {\n    return null;\n  }\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}