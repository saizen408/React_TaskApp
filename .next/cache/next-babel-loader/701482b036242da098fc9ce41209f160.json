{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Todo from \"./Todo\";\nimport { TodosContext } from \"./contexts/todos.context\";\nimport { handleAuthSSR } from \"../components/handleAuthSSR\";\n\nfunction TodoList(props) {\n  var todos = useContext(TodosContext);\n  useEffect(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(handleAuthSSR());\n\n          case 2:\n            res = _context.sent;\n            data = res.data; // const data = res.data\n\n            return _context.abrupt(\"return\", {\n              posts: data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }, [todos]);\n  console.log(props);\n  if (props.posts.length) return __jsx(Paper, null, __jsx(List, null, props.posts.map(function (todo, i) {\n    return (// To add a key to a fragment, we have to use the long-hand version\n      __jsx(React.Fragment, {\n        key: i\n      }, __jsx(Todo, _extends({}, todo, {\n        key: todo._id\n      })), i < props.posts.length - 1 && __jsx(Divider, null))\n    );\n  })));\n  return null;\n} // export default TodoList;\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n// $.ajax({\n//     url: proxyUrl + targetUrl,\n//     type: 'GET',\n//     dataType: 'json',\n//     beforeSend: setHeader\n//   }).then(addTasks);\n//   function setHeader(xhr) {\n//     xhr.setRequestHeader('Authorization', 'Bearer ' + userInfo.token);\n//   }\n// const Index = ({ todos }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","useEffect","Paper","List","Divider","Todo","TodosContext","handleAuthSSR","TodoList","props","todos","res","data","posts","console","log","length","map","todo","i","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAMC,KAAK,GAAGV,UAAU,CAACM,YAAD,CAAxB;AAEAL,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUM,aAAa,EADvB;;AAAA;AACFI,YAAAA,GADE;AAEAC,YAAAA,IAFA,GAESD,GAFT,CAEAC,IAFA,EAEc;;AAFd,6CAID;AACLC,cAAAA,KAAK,EAAED;AADF,aAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAON,CAACF,KAAD,CAPM,CAAT;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,MAAIA,KAAK,CAACI,KAAN,CAAYG,MAAhB,EACE,OACE,MAAC,KAAD,QACE,MAAC,IAAD,QACGP,KAAK,CAACI,KAAN,CAAYI,GAAZ,CAAgB,UAACC,IAAD,EAAOC,CAAP;AAAA,WACf;AACA,YAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA;AAArB,SACE,MAAC,IAAD,eAAUD,IAAV;AAAgB,QAAA,GAAG,EAAEA,IAAI,CAACE;AAA1B,SADF,EAEGD,CAAC,GAAGV,KAAK,CAACI,KAAN,CAAYG,MAAZ,GAAqB,CAAzB,IAA8B,MAAC,OAAD,OAFjC;AAFe;AAAA,GAAhB,CADH,CADF,CADF;AAaF,SAAO,IAAP;AACD,C,CAED;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeR,QAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Todo from \"./Todo\";\nimport { TodosContext } from \"./contexts/todos.context\";\nimport { handleAuthSSR } from \"../components/handleAuthSSR\";\n\nfunction TodoList(props) {\n  const todos = useContext(TodosContext);\n\n  useEffect(async () => {\n    const res = await handleAuthSSR();\n    const { data } = res; // const data = res.data\n\n    return {\n      posts: data\n    };\n  }, [todos]);\n\n  console.log(props);\n  if (props.posts.length)\n    return (\n      <Paper>\n        <List>\n          {props.posts.map((todo, i) => (\n            // To add a key to a fragment, we have to use the long-hand version\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n}\n\n// export default TodoList;\n\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n// $.ajax({\n//     url: proxyUrl + targetUrl,\n//     type: 'GET',\n//     dataType: 'json',\n//     beforeSend: setHeader\n//   }).then(addTasks);\n\n//   function setHeader(xhr) {\n//     xhr.setRequestHeader('Authorization', 'Bearer ' + userInfo.token);\n//   }\n\n// const Index = ({ todos }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}