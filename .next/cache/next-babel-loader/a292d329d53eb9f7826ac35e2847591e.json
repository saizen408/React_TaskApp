{"ast":null,"code":"import uuid from \"uuid/v4\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = {\n        description\n      };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        const newTask = res.data;\n        state.push({\n          _id: newTask._id,\n          description: action.task,\n          completed: false\n        }); // return [\n        //   ...state,\n        //   {\n        //     _id: newTask._id,\n        //     description: action.task,\n        //     completed: false\n        //   }\n        // ];\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        console.log(\"removing task from state: \", state);\n        return state.filter(todo => todo._id !== action._id);\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"TOGGLE\":\n      console.log(\"toggle clicked!\");\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = {\n          completed: isDone\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = {\n          description\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["uuid","axios","Router","Cookies","cookies","token","get","todoReducer","state","action","type","description","task","body","proxyUrl","targetUrl","res","url","method","data","headers","Authorization","newTask","push","_id","completed","e","console","log","id","filter","todo","isDone","updateData"],"mappings":"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","sourcesContent":["import uuid from \"uuid/v4\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = { description };\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        const newTask = res.data;\n        state.push({\n          _id: newTask._id,\n          description: action.task,\n          completed: false\n        });\n        // return [\n        //   ...state,\n        //   {\n        //     _id: newTask._id,\n        //     description: action.task,\n        //     completed: false\n        //   }\n        // ];\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        console.log(\"removing task from state: \", state);\n        return state.filter(todo => todo._id !== action._id);\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    case \"TOGGLE\":\n      console.log(\"toggle clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = { completed: isDone };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = { description };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}