{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Link from 'next/link'; // const Navbar = () => {\n//   const styles = {\n//     display: 'flex',\n//     background: 'grey',\n//     justifyContent: 'space-between',\n//     padding: '1rem'\n//   };\n//   return (\n//     <div style={styles}>\n//       <Link href=\"/\">\n//         <a>Home</a>\n//       </Link>\n//       <Link href=\"/about\">\n//         <a>About</a>\n//       </Link>\n//       <Link href=\"/contact\">\n//         <a>Contact Page</a>\n//       </Link>\n//     </div>\n//   );\n// };\n// export default Navbar;\n\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/NavBarStyles';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { withLanguageContext } from './contexts/LanguageContext';\nconst content = {\n  english: {\n    appTitle: 'App Title',\n    search: 'Search',\n    flag: '🇬🇧'\n  },\n  french: {\n    appTitle: \"Titre de l'application\",\n    search: 'Chercher',\n    flag: '🇫🇷'\n  },\n  spanish: {\n    appTitle: 'Título de la aplicación',\n    search: 'Buscar',\n    flag: '🇪🇸'\n  },\n  german: {\n    appTitle: 'App-Titel',\n    search: 'Suche',\n    flag: '🇩🇪'\n  },\n  日本語: {\n    appTitle: 'アプリのタイトル',\n    search: '探す',\n    flag: '🇯🇵'\n  }\n};\n\nclass Navbar extends Component {\n  render() {\n    const {\n      isDarkMode,\n      toggleTheme\n    } = this.context;\n    const {\n      classes\n    } = this.props;\n    const {\n      language\n    } = this.props.languageContext;\n    const {\n      appTitle,\n      search,\n      flag\n    } = content[language];\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(CssBaseline, null), __jsx(AppBar, {\n      position: \"static\",\n      color: isDarkMode ? 'default' : 'primary'\n    }, __jsx(Toolbar, null, __jsx(IconButton, {\n      className: classes.menuButton,\n      color: \"inherit\"\n    }, __jsx(\"span\", null, flag)), __jsx(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      color: \"inherit\"\n    }, appTitle), __jsx(Switch, {\n      onChange: toggleTheme\n    }), __jsx(\"div\", {\n      className: classes.grow\n    }), __jsx(\"div\", {\n      className: classes.search\n    }, __jsx(\"div\", {\n      className: classes.searchIcon\n    }, __jsx(SearchIcon, null)), __jsx(InputBase, {\n      placeholder: `${search}...`,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      }\n    })))));\n  }\n\n}\n\n_defineProperty(Navbar, \"contextType\", ThemeContext);\n\nexport default withLanguageContext(withStyles(styles)(Navbar));","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Navbar.js"],"names":["Link","React","Component","AppBar","Toolbar","IconButton","CssBaseline","Typography","InputBase","SearchIcon","Switch","withStyles","styles","ThemeContext","withLanguageContext","content","english","appTitle","search","flag","french","spanish","german","日本語","Navbar","render","isDarkMode","toggleTheme","context","classes","props","language","languageContext","root","menuButton","title","grow","searchIcon","inputRoot","input","inputInput"],"mappings":"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","sourcesContent":["import Link from 'next/link';\n// const Navbar = () => {\n//   const styles = {\n//     display: 'flex',\n//     background: 'grey',\n//     justifyContent: 'space-between',\n//     padding: '1rem'\n//   };\n//   return (\n//     <div style={styles}>\n//       <Link href=\"/\">\n//         <a>Home</a>\n//       </Link>\n//       <Link href=\"/about\">\n//         <a>About</a>\n//       </Link>\n//       <Link href=\"/contact\">\n//         <a>Contact Page</a>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default Navbar;\n\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles/NavBarStyles';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { withLanguageContext } from './contexts/LanguageContext';\n\nconst content = {\n  english: {\n    appTitle: 'App Title',\n    search: 'Search',\n    flag: '🇬🇧'\n  },\n  french: {\n    appTitle: \"Titre de l'application\",\n    search: 'Chercher',\n    flag: '🇫🇷'\n  },\n  spanish: {\n    appTitle: 'Título de la aplicación',\n    search: 'Buscar',\n    flag: '🇪🇸'\n  },\n  german: {\n    appTitle: 'App-Titel',\n    search: 'Suche',\n    flag: '🇩🇪'\n  },\n  日本語: {\n    appTitle: 'アプリのタイトル',\n    search: '探す',\n    flag: '🇯🇵'\n  }\n};\n\nclass Navbar extends Component {\n  static contextType = ThemeContext;\n\n  render() {\n    const { isDarkMode, toggleTheme } = this.context;\n    const { classes } = this.props;\n    const { language } = this.props.languageContext;\n    const { appTitle, search, flag } = content[language];\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"static\" color={isDarkMode ? 'default' : 'primary'}>\n          <Toolbar>\n            <IconButton className={classes.menuButton} color=\"inherit\">\n              <span>{flag}</span>\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\n              {appTitle}\n            </Typography>\n            <Switch onChange={toggleTheme} />\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder={`${search}...`}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withLanguageContext(withStyles(styles)(Navbar));\n"]},"metadata":{},"sourceType":"module"}