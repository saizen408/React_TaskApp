{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { withRouter } from 'next/router';\n// const Post = props => <h1>You are looking at Post #{props.router.query.id}</h1>;\nimport axios from 'axios';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, \"Looking at post #\", props.id);\n};\n\nPost.getInitialProps = function _callee(_ref2) {\n  var query, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/comments?postId=1'));\n\n        case 3:\n          res = _context.sent;\n          data = res.data;\n          return _context.abrupt(\"return\", _objectSpread({}, query, {\n            comments: data\n          }));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post; // export default withRouter(Post);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/pages/post.js"],"names":["axios","Post","id","comments","props","getInitialProps","query","get","res","data"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,QAAP,QAAOA,QAAP;AAAA,SAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBC,KAAK,CAACF,EAA5B,CAAtB;AAAA,CAAb;;AAEAD,IAAI,CAACI,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,2CACHN,KAAK,CAACO,GAAN,CAChB,wDADgB,CADG;;AAAA;AACfC,UAAAA,GADe;AAIbC,UAAAA,IAJa,GAIJD,GAJI,CAIbC,IAJa;AAAA,6DAMTH,KANS;AAMFH,YAAAA,QAAQ,EAAEM;AANR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeR,IAAf,C,CACA","sourcesContent":["// import { withRouter } from 'next/router';\n// const Post = props => <h1>You are looking at Post #{props.router.query.id}</h1>;\nimport axios from 'axios';\nconst Post = ({ id, comments }) => <h1>Looking at post #{props.id}</h1>;\n\nPost.getInitialProps = async ({ query }) => {\n  const res = await axios.get(\n    'https://jsonplaceholder.typicode.com/comments?postId=1'\n  );\n  const { data } = res;\n\n  return { ...query, comments: data };\n};\n\nexport default Post;\n// export default withRouter(Post);\n"]},"metadata":{},"sourceType":"module"}