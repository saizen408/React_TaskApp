{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nfunction Todo(_ref) {\n  var _id = _ref._id,\n      description = _ref.description,\n      completed = _ref.completed,\n      updatedAt = _ref.updatedAt;\n  var dispatch = useContext(DispatchContext);\n\n  var _useToggleState = useToggleState(false),\n      _useToggleState2 = _slicedToArray(_useToggleState, 2),\n      isEditing = _useToggleState2[0],\n      toggle = _useToggleState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar,\n      closeSnackbar = _useSnackbar.closeSnackbar;\n\n  var handleDeleteClick = function handleDeleteClick() {\n    enqueueSnackbar(\"Deleted Task: \\\"\".concat(description, \"\\\"\"));\n  };\n\n  var handleEditClick = function handleEditClick() {\n    enqueueSnackbar(\"Edited Task: \\\"\".concat(description, \"\\\"\"));\n  };\n\n  var formatedDate = function formatedDate() {\n    moment.locale(\"ja\");\n    moment(updatedAt).format(\"lll\");\n  };\n\n  return __jsx(ListItem, {\n    style: {\n      height: \"65px\"\n    }\n  }, isEditing ? __jsx(EditTodoForm, {\n    _id: _id,\n    description: description,\n    toggleEditForm: toggle\n  }) : __jsx(React.Fragment, null, __jsx(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: function onClick() {\n      dispatch({\n        type: \"TOGGLE\",\n        id: _id,\n        completed: completed\n      });\n    }\n  }), __jsx(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    }\n  }, description, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, \"last updated: \", formatedDate)), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: function onClick() {\n      dispatch({\n        type: \"REMOVE\",\n        id: _id\n      });\n      handleDeleteClick();\n    }\n  }, __jsx(DeleteIcon, null)), __jsx(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle\n  }, __jsx(EditIcon, null))), \" \"));\n}\n\nexport default memo(Todo);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Todo.js"],"names":["React","useContext","memo","useToggleState","EditTodoForm","ListItemText","ListItem","Checkbox","IconButton","DeleteIcon","EditIcon","SnackbarProvider","useSnackbar","ListItemSecondaryAction","DispatchContext","Typography","moment","Todo","_id","description","completed","updatedAt","dispatch","isEditing","toggle","enqueueSnackbar","closeSnackbar","handleDeleteClick","handleEditClick","formatedDate","locale","format","height","type","id","textDecoration"],"mappings":"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","sourcesContent":["import React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nfunction Todo({ _id, description, completed, updatedAt }) {\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleDeleteClick = () => {\n    enqueueSnackbar(`Deleted Task: \"${description}\"`);\n  };\n\n  const handleEditClick = () => {\n    enqueueSnackbar(`Edited Task: \"${description}\"`);\n  };\n\n  const formatedDate = () => {\n    moment.locale(\"ja\");\n    moment(updatedAt).format(\"lll\");\n  };\n\n  return (\n    <ListItem style={{ height: \"65px\" }}>\n      {isEditing ? (\n        <EditTodoForm\n          _id={_id}\n          description={description}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => {\n              dispatch({ type: \"TOGGLE\", id: _id, completed: completed });\n            }}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {description}\n            <Typography variant=\"subtitle2\">\n              last updated: {formatedDate}\n            </Typography>\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={() => {\n                dispatch({ type: \"REMOVE\", id: _id });\n                handleDeleteClick();\n              }}\n            >\n              <DeleteIcon></DeleteIcon>\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon></EditIcon>\n            </IconButton>\n          </ListItemSecondaryAction>{\" \"}\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n"]},"metadata":{},"sourceType":"module"}