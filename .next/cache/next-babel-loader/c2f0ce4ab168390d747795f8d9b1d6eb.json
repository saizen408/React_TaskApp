{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { useSnackbar } from \"notistack\";\n\nfunction EditTodoForm(_ref) {\n  var _id = _ref._id,\n      description = _ref.description,\n      toggleEditForm = _ref.toggleEditForm,\n      sorted = _ref.sorted,\n      tasksDBIdx = _ref.tasksDBIdx;\n  var dispatch = useContext(DispatchContext);\n\n  var _useInputState = useInputState(description),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      value = _useInputState2[0],\n      handleChange = _useInputState2[1],\n      reset = _useInputState2[2];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var handleEditClick = function handleEditClick() {\n    enqueueSnackbar(\"\\u270F\\uFE0F Edited Task: \\\"\".concat(description, \"\\\"\"));\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      handleEditClick();\n      sorted({\n        type: \"EDIT\",\n        id: _id,\n        todo: value\n      });\n\n      if (tasksDBIdx === undefined) {\n        dispatch({\n          type: \"EDIT\",\n          id: tasksDBIdx._id,\n          newTask: value\n        });\n      }\n\n      reset();\n      toggleEditForm();\n    },\n    style: {\n      marginLeft: \"1rem\",\n      width: \"75%\"\n    }\n  }, __jsx(TextField, {\n    margin: \"normal\",\n    value: value,\n    onChange: handleChange,\n    fullWidth: true,\n    autoFocus: true\n  }));\n}\n\nexport default EditTodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/EditTodoForm.js"],"names":["React","useContext","useInputState","TextField","DispatchContext","useSnackbar","EditTodoForm","_id","description","toggleEditForm","sorted","tasksDBIdx","dispatch","value","handleChange","reset","enqueueSnackbar","handleEditClick","e","preventDefault","type","id","todo","undefined","newTask","marginLeft","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,SAASC,YAAT,OAMG;AAAA,MALDC,GAKC,QALDA,GAKC;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,cAGC,QAHDA,cAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,UACC,QADDA,UACC;AACD,MAAMC,QAAQ,GAAGX,UAAU,CAACG,eAAD,CAA3B;;AADC,uBAEoCF,aAAa,CAACM,WAAD,CAFjD;AAAA;AAAA,MAEMK,KAFN;AAAA,MAEaC,YAFb;AAAA,MAE2BC,KAF3B;;AAAA,qBAG2BV,WAAW,EAHtC;AAAA,MAGOW,eAHP,gBAGOA,eAHP;;AAKD,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BD,IAAAA,eAAe,uCAAqBR,WAArB,QAAf;AACD,GAFD;;AAIA,SACE;AACE,IAAA,QAAQ,EAAE,kBAAAU,CAAC,EAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAF,MAAAA,eAAe;AACfP,MAAAA,MAAM,CAAC;AAAEU,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAEd,GAApB;AAAyBe,QAAAA,IAAI,EAAET;AAA/B,OAAD,CAAN;;AACA,UAAIF,UAAU,KAAKY,SAAnB,EAA8B;AAC5BX,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAEV,UAAU,CAACJ,GAA/B;AAAoCiB,UAAAA,OAAO,EAAEX;AAA7C,SAAD,CAAR;AACD;;AACDE,MAAAA,KAAK;AACLN,MAAAA,cAAc;AACf,KAVH;AAWE,IAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B;AAXT,KAaE,MAAC,SAAD;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,KAAK,EAAEb,KAFT;AAGE,IAAA,QAAQ,EAAEC,YAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS;AALX,IAbF,CADF;AAuBD;;AACD,eAAeR,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { useSnackbar } from \"notistack\";\n\nfunction EditTodoForm({\n  _id,\n  description,\n  toggleEditForm,\n  sorted,\n  tasksDBIdx\n}) {\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, reset] = useInputState(description);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleEditClick = () => {\n    enqueueSnackbar(`✏️ Edited Task: \"${description}\"`);\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        handleEditClick();\n        sorted({ type: \"EDIT\", id: _id, todo: value });\n        if (tasksDBIdx === undefined) {\n          dispatch({ type: \"EDIT\", id: tasksDBIdx._id, newTask: value });\n        }\n        reset();\n        toggleEditForm();\n      }}\n      style={{ marginLeft: \"1rem\", width: \"75%\" }}\n    >\n      <TextField\n        margin=\"normal\"\n        value={value}\n        onChange={handleChange}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\nexport default EditTodoForm;\n"]},"metadata":{},"sourceType":"module"}