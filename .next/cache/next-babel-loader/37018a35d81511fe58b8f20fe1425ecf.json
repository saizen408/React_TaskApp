{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { content } from \"./words\";\nimport IOSSwitch from \"./IOSSwitch\"; // const content = {\n//   en: {\n//     appTitle: \"App Title\",\n//     search: \"Search\",\n//     flag: \"🇬🇧\"\n//   },\n//   fr: {\n//     appTitle: \"Titre de l'application\",\n//     search: \"Chercher\",\n//     flag: \"🇫🇷\"\n//   },\n//   es: {\n//     appTitle: \"Título de la aplicación\",\n//     search: \"Buscar\",\n//     flag: \"🇪🇸\"\n//   },\n//   de: {\n//     appTitle: \"App-Titel\",\n//     search: \"Suche\",\n//     flag: \"🇩🇪\"\n//   },\n//   ja: {\n//     appTitle: \"アプリのタイトル\",\n//     search: \"探す\",\n//     flag: \"🇯🇵\"\n//   }\n// };\n// const IOSSwitch = withStyles(theme => ({\n//   root: {\n//     width: 42,\n//     height: 26,\n//     padding: 0,\n//     margin: theme.spacing(1)\n//   },\n//   switchBase: {\n//     padding: 1,\n//     \"&$checked\": {\n//       transform: \"translateX(16px)\",\n//       color: theme.palette.common.white,\n//       \"& + $track\": {\n//         backgroundColor: \"#52d869\",\n//         opacity: 1,\n//         border: \"none\"\n//       }\n//     },\n//     \"&$focusVisible $thumb\": {\n//       color: \"#52d869\",\n//       border: \"6px solid #fff\"\n//     }\n//   },\n//   thumb: {\n//     width: 24,\n//     height: 24\n//   },\n//   track: {\n//     borderRadius: 26 / 2,\n//     border: `1px solid ${theme.palette.grey[400]}`,\n//     backgroundColor: theme.palette.grey[50],\n//     opacity: 1,\n//     transition: theme.transitions.create([\"background-color\", \"border\"])\n//   },\n//   checked: {},\n//   focusVisible: {}\n// }))(({ classes, ...props }) => {\n//   return (\n//     <Switch\n//       focusVisibleClassName={classes.focusVisible}\n//       disableRipple\n//       classes={{\n//         root: classes.root,\n//         switchBase: classes.switchBase,\n//         thumb: classes.thumb,\n//         track: classes.track,\n//         checked: classes.checked\n//       }}\n//       {...props}\n//     />\n//   );\n// });\n\nfunction Navbar(props) {\n  var _useContext = useContext(ThemeContext),\n      isDarkMode = _useContext.isDarkMode,\n      toggleTheme = _useContext.toggleTheme;\n\n  var _useContext2 = useContext(LanguageContext),\n      language = _useContext2.language;\n\n  var classes = props.classes;\n  var _content$language = content[language],\n      appTitle = _content$language.appTitle,\n      search = _content$language.search,\n      flag = _content$language.flag;\n\n  var _React$useState = React.useState({\n    checkedB: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread({}, state, _defineProperty({}, name, event.target.checked)));\n      toggleTheme();\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(CssBaseline, null), __jsx(AppBar, {\n    position: \"static\",\n    color: isDarkMode ? \"default\" : \"primary\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    className: classes.menuButton,\n    color: \"inherit\"\n  }, __jsx(\"span\", null, flag)), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    color: \"inherit\"\n  }, appTitle), __jsx(IOSSwitch, {\n    checked: state.checkedB,\n    onChange: handleChange(\"checkedB\"),\n    value: \"checkedB\"\n  }), __jsx(\"div\", {\n    className: classes.grow\n  }), __jsx(\"div\", {\n    className: classes.search\n  }, __jsx(\"div\", {\n    className: classes.searchIcon\n  }, __jsx(SearchIcon, null)), __jsx(InputBase, {\n    placeholder: \"\".concat(search, \"...\"),\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    }\n  })))));\n}\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Navbar.js"],"names":["React","useContext","AppBar","Toolbar","IconButton","Typography","InputBase","SearchIcon","Switch","CssBaseline","withStyles","styles","ThemeContext","LanguageContext","content","IOSSwitch","Navbar","props","isDarkMode","toggleTheme","language","classes","appTitle","search","flag","useState","checkedB","state","setState","handleChange","name","event","target","checked","root","menuButton","title","grow","searchIcon","inputRoot","input","inputInput"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACehB,UAAU,CAACW,YAAD,CADzB;AAAA,MACbM,UADa,eACbA,UADa;AAAA,MACDC,WADC,eACDA,WADC;;AAAA,qBAEAlB,UAAU,CAACY,eAAD,CAFV;AAAA,MAEbO,QAFa,gBAEbA,QAFa;;AAAA,MAGbC,OAHa,GAGDJ,KAHC,CAGbI,OAHa;AAAA,0BAIcP,OAAO,CAACM,QAAD,CAJrB;AAAA,MAIbE,QAJa,qBAIbA,QAJa;AAAA,MAIHC,MAJG,qBAIHA,MAJG;AAAA,MAIKC,IAJL,qBAIKA,IAJL;;AAAA,wBAMKxB,KAAK,CAACyB,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE;AAD6B,GAAf,CANL;AAAA;AAAA,MAMdC,KANc;AAAA,MAMPC,QANO;;AAUrB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,WAAI,UAAAC,KAAK,EAAI;AACpCH,MAAAA,QAAQ,mBAAMD,KAAN,sBAAcG,IAAd,EAAqBC,KAAK,CAACC,MAAN,CAAaC,OAAlC,GAAR;AACAd,MAAAA,WAAW;AACZ,KAHwB;AAAA,GAAzB;;AAKA,SACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACa;AAAxB,KACE,MAAC,WAAD,OADF,EAEE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAEhB,UAAU,GAAG,SAAH,GAAe;AAA1D,KACE,MAAC,OAAD,QACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEG,OAAO,CAACc,UAA/B;AAA2C,IAAA,KAAK,EAAC;AAAjD,KACE,oBAAOX,IAAP,CADF,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,OAAO,CAACe,KAA/B;AAAsC,IAAA,OAAO,EAAC,IAA9C;AAAmD,IAAA,KAAK,EAAC;AAAzD,KACGd,QADH,CAJF,EAQE,MAAC,SAAD;AACE,IAAA,OAAO,EAAEK,KAAK,CAACD,QADjB;AAEE,IAAA,QAAQ,EAAEG,YAAY,CAAC,UAAD,CAFxB;AAGE,IAAA,KAAK,EAAC;AAHR,IARF,EAaE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACgB;AAAxB,IAbF,EAcE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACE;AAAxB,KACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACiB;AAAxB,KACE,MAAC,UAAD,OADF,CADF,EAIE,MAAC,SAAD;AACE,IAAA,WAAW,YAAKf,MAAL,QADb;AAEE,IAAA,OAAO,EAAE;AACPW,MAAAA,IAAI,EAAEb,OAAO,CAACkB,SADP;AAEPC,MAAAA,KAAK,EAAEnB,OAAO,CAACoB;AAFR;AAFX,IAJF,CAdF,CADF,CAFF,CADF;AAkCD;;AAED,eAAe/B,UAAU,CAACC,MAAD,CAAV,CAAmBK,MAAnB,CAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Switch from \"@material-ui/core/Switch\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/NavBarStyles\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { content } from \"./words\";\nimport IOSSwitch from \"./IOSSwitch\";\n\n// const content = {\n//   en: {\n//     appTitle: \"App Title\",\n//     search: \"Search\",\n//     flag: \"🇬🇧\"\n//   },\n//   fr: {\n//     appTitle: \"Titre de l'application\",\n//     search: \"Chercher\",\n//     flag: \"🇫🇷\"\n//   },\n//   es: {\n//     appTitle: \"Título de la aplicación\",\n//     search: \"Buscar\",\n//     flag: \"🇪🇸\"\n//   },\n//   de: {\n//     appTitle: \"App-Titel\",\n//     search: \"Suche\",\n//     flag: \"🇩🇪\"\n//   },\n//   ja: {\n//     appTitle: \"アプリのタイトル\",\n//     search: \"探す\",\n//     flag: \"🇯🇵\"\n//   }\n// };\n\n// const IOSSwitch = withStyles(theme => ({\n//   root: {\n//     width: 42,\n//     height: 26,\n//     padding: 0,\n//     margin: theme.spacing(1)\n//   },\n//   switchBase: {\n//     padding: 1,\n//     \"&$checked\": {\n//       transform: \"translateX(16px)\",\n//       color: theme.palette.common.white,\n//       \"& + $track\": {\n//         backgroundColor: \"#52d869\",\n//         opacity: 1,\n//         border: \"none\"\n//       }\n//     },\n//     \"&$focusVisible $thumb\": {\n//       color: \"#52d869\",\n//       border: \"6px solid #fff\"\n//     }\n//   },\n//   thumb: {\n//     width: 24,\n//     height: 24\n//   },\n//   track: {\n//     borderRadius: 26 / 2,\n//     border: `1px solid ${theme.palette.grey[400]}`,\n//     backgroundColor: theme.palette.grey[50],\n//     opacity: 1,\n//     transition: theme.transitions.create([\"background-color\", \"border\"])\n//   },\n//   checked: {},\n//   focusVisible: {}\n// }))(({ classes, ...props }) => {\n//   return (\n//     <Switch\n//       focusVisibleClassName={classes.focusVisible}\n//       disableRipple\n//       classes={{\n//         root: classes.root,\n//         switchBase: classes.switchBase,\n//         thumb: classes.thumb,\n//         track: classes.track,\n//         checked: classes.checked\n//       }}\n//       {...props}\n//     />\n//   );\n// });\n\nfunction Navbar(props) {\n  const { isDarkMode, toggleTheme } = useContext(ThemeContext);\n  const { language } = useContext(LanguageContext);\n  const { classes } = props;\n  const { appTitle, search, flag } = content[language];\n\n  const [state, setState] = React.useState({\n    checkedB: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n    toggleTheme();\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"static\" color={isDarkMode ? \"default\" : \"primary\"}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\">\n            <span>{flag}</span>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\n            {appTitle}\n          </Typography>\n\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n          />\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder={`${search}...`}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}