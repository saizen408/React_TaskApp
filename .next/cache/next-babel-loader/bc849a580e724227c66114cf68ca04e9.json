{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, memo } from \"react\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport moment from \"moment\";\nconst words = {\n  en: {\n    addTodo: \"Add New Todo\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    addTodo: \"Ajouter un nouveau Todo\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    addTodo: \"Añadir nuevo Todo\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    addTodo: \"Neuen Todo hinzufügen\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n  ja: {\n    addTodo: \"新しいTodoを追加\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\nconst DraggableTodo = SortableElement(({\n  _id,\n  description,\n  completed,\n  updatedAt\n}) => {\n  const dispatch = useContext(DispatchContext);\n  const {\n    language\n  } = useContext(LanguageContext);\n  const [isEditing, toggle] = useToggleState(false);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  const {\n    lastUpdated\n  } = words[language];\n\n  const handleDeleteClick = () => {\n    enqueueSnackbar(`Deleted Task: \"${description}\"`);\n  };\n\n  const handleEditClick = () => {\n    enqueueSnackbar(`Edited Task: \"${description}\"`);\n  };\n\n  const formatedDate = () => {\n    moment.locale(language);\n    return moment(updatedAt).format(\"lll\");\n  };\n\n  return __jsx(Paper, {\n    elevation: 3\n  }, __jsx(ListItem, {\n    style: {\n      height: \"65px\",\n      border: \"1px solid black\"\n    }\n  }, isEditing ? __jsx(EditTodoForm, {\n    _id: _id,\n    description: description,\n    toggleEditForm: toggle\n  }) : __jsx(React.Fragment, null, __jsx(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => {\n      dispatch({\n        type: \"TOGGLE\",\n        id: _id,\n        completed: completed\n      });\n    }\n  }), __jsx(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    },\n    primary: description,\n    secondary: `lastUpdated: ${formatedDate()}`\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  })), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => {\n      dispatch({\n        type: \"REMOVE\",\n        id: _id\n      });\n      handleDeleteClick();\n    }\n  }, __jsx(DeleteIcon, null)), __jsx(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle\n  }, __jsx(EditIcon, null))), \" \")));\n});\nexport default memo(DraggableTodo);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/DraggableTodo.js"],"names":["React","useContext","memo","SortableElement","useToggleState","EditTodoForm","ListItemText","ListItem","Checkbox","IconButton","DeleteIcon","EditIcon","SnackbarProvider","useSnackbar","ListItemSecondaryAction","DispatchContext","LanguageContext","Typography","Paper","moment","words","en","addTodo","lastUpdated","fr","es","de","ja","DraggableTodo","_id","description","completed","updatedAt","dispatch","language","isEditing","toggle","enqueueSnackbar","closeSnackbar","handleDeleteClick","handleEditClick","formatedDate","locale","format","height","border","type","id","textDecoration"],"mappings":"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","sourcesContent":["import React, { useContext, memo } from \"react\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nconst words = {\n  en: {\n    addTodo: \"Add New Todo\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    addTodo: \"Ajouter un nouveau Todo\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    addTodo: \"Añadir nuevo Todo\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    addTodo: \"Neuen Todo hinzufügen\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n\n  ja: { addTodo: \"新しいTodoを追加\", lastUpdated: \"最新の更新: \" }\n};\n\nconst DraggableTodo = SortableElement(\n  ({ _id, description, completed, updatedAt }) => {\n    const dispatch = useContext(DispatchContext);\n    const { language } = useContext(LanguageContext);\n    const [isEditing, toggle] = useToggleState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const { lastUpdated } = words[language];\n\n    const handleDeleteClick = () => {\n      enqueueSnackbar(`Deleted Task: \"${description}\"`);\n    };\n\n    const handleEditClick = () => {\n      enqueueSnackbar(`Edited Task: \"${description}\"`);\n    };\n\n    const formatedDate = () => {\n      moment.locale(language);\n      return moment(updatedAt).format(\"lll\");\n    };\n\n    return (\n      <Paper elevation={3}>\n        <ListItem style={{ height: \"65px\", border: \"1px solid black\" }}>\n          {isEditing ? (\n            <EditTodoForm\n              _id={_id}\n              description={description}\n              toggleEditForm={toggle}\n            />\n          ) : (\n            <>\n              <Checkbox\n                tabIndex={-1}\n                checked={completed}\n                onClick={() => {\n                  dispatch({ type: \"TOGGLE\", id: _id, completed: completed });\n                }}\n              />\n              <ListItemText\n                style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n                primary={description}\n                secondary={`lastUpdated: ${formatedDate()}`}\n              >\n                {/* {description} */}\n                <Typography variant=\"subtitle2\">\n                  {/* {lastUpdated}: {formatedDate()} */}\n                </Typography>\n              </ListItemText>\n              <ListItemSecondaryAction>\n                <IconButton\n                  aria-label=\"Delete\"\n                  onClick={() => {\n                    dispatch({ type: \"REMOVE\", id: _id });\n                    handleDeleteClick();\n                  }}\n                >\n                  <DeleteIcon></DeleteIcon>\n                </IconButton>\n                <IconButton aria-label=\"Edit\" onClick={toggle}>\n                  <EditIcon></EditIcon>\n                </IconButton>\n              </ListItemSecondaryAction>{\" \"}\n            </>\n          )}\n        </ListItem>\n      </Paper>\n    );\n  }\n);\n\nexport default memo(DraggableTodo);\n"]},"metadata":{},"sourceType":"module"}