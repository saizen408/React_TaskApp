{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport { $, jQuery } from 'jquery'; //token , starter tasks?, reducer\n\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let data;\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n      $.ajax({\n        url: proxyUrl + targetUrl,\n        type: 'GET',\n        dataType: 'json',\n        beforeSend: setHeader\n      }).then(console.log(data));\n\n      function setHeader(xhr) {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      }\n    } catch (e) {\n      console.error('Error:', e);\n      data = defaultVal;\n    }\n\n    return data;\n  });\n  return [state, dispatch];\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","$","jQuery","useDBReducer","token","defaultVal","todoReducer","state","dispatch","data","proxyUrl","targetUrl","ajax","url","type","dataType","beforeSend","setHeader","then","console","log","xhr","setRequestHeader","e","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,CAAT,EAAYC,MAAZ,QAA0B,QAA1B,C,CAEA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;AACpD;AACA;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,UAAU,CAACO,WAAD,EAAcD,UAAd,EAA0B,MAAM;AAClE;AACA,QAAII,IAAJ;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,sCAAjB;AACA,YAAMC,SAAS,GAAG,gDAAlB;AAEAV,MAAAA,CAAC,CAACW,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAEH,QAAQ,GAAGC,SADX;AAELG,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,UAAU,EAAEC;AAJP,OAAP,EAKGC,IALH,CAKQC,OAAO,CAACC,GAAR,CAAYX,IAAZ,CALR;;AAMA,eAASQ,SAAT,CAAmBI,GAAnB,EAAwB;AACtBA,QAAAA,GAAG,CAACC,gBAAJ,CAAqB,eAArB,EAAsC,YAAYlB,KAAlD;AACD;AACF,KAbD,CAaE,OAAOmB,CAAP,EAAU;AACVJ,MAAAA,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAd,MAAAA,IAAI,GAAGJ,UAAP;AACD;;AACD,WAAOI,IAAP;AACD,GArBmC,CAApC;AAuBA,SAAO,CAACF,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAASL,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport { $, jQuery } from 'jquery';\n\n//token , starter tasks?, reducer\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let data;\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n      $.ajax({\n        url: proxyUrl + targetUrl,\n        type: 'GET',\n        dataType: 'json',\n        beforeSend: setHeader\n      }).then(console.log(data));\n      function setHeader(xhr) {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      }\n    } catch (e) {\n      console.error('Error:', e);\n      data = defaultVal;\n    }\n    return data;\n  });\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}