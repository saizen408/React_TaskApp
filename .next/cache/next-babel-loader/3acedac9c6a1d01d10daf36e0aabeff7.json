{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nfunction EditTodoForm(_ref) {\n  var _id = _ref._id,\n      description = _ref.description,\n      toggleEditForm = _ref.toggleEditForm,\n      sorted = _ref.sorted;\n  var dispatch = useContext(DispatchContext);\n\n  var _useInputState = useInputState(description),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      value = _useInputState2[0],\n      handleChange = _useInputState2[1],\n      reset = _useInputState2[2];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar,\n      closeSnackbar = _useSnackbar.closeSnackbar;\n\n  var handleEditClick = function handleEditClick() {\n    enqueueSnackbar(\"Edited Task: \\\"\".concat(description, \"\\\"\"));\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      handleEditClick();\n      dispatch({\n        type: \"EDIT\",\n        id: _id,\n        newTask: value\n      });\n      reset();\n      toggleEditForm();\n    },\n    style: {\n      marginLeft: \"1rem\",\n      width: \"75%\"\n    },\n    handleSorted: false\n  }, __jsx(TextField, {\n    margin: \"normal\",\n    value: value,\n    onChange: handleChange,\n    fullWidth: true,\n    autoFocus: true\n  }));\n}\n\nexport default EditTodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/EditTodoForm.js"],"names":["React","useContext","useInputState","TextField","DispatchContext","SnackbarProvider","useSnackbar","EditTodoForm","_id","description","toggleEditForm","sorted","dispatch","value","handleChange","reset","enqueueSnackbar","closeSnackbar","handleEditClick","e","preventDefault","type","id","newTask","marginLeft","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;;AAEA,SAASC,YAAT,OAAoE;AAAA,MAA5CC,GAA4C,QAA5CA,GAA4C;AAAA,MAAvCC,WAAuC,QAAvCA,WAAuC;AAAA,MAA1BC,cAA0B,QAA1BA,cAA0B;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAClE,MAAMC,QAAQ,GAAGX,UAAU,CAACG,eAAD,CAA3B;;AADkE,uBAE7BF,aAAa,CAACO,WAAD,CAFgB;AAAA;AAAA,MAE3DI,KAF2D;AAAA,MAEpDC,YAFoD;AAAA,MAEtCC,KAFsC;;AAAA,qBAGvBT,WAAW,EAHY;AAAA,MAG1DU,eAH0D,gBAG1DA,eAH0D;AAAA,MAGzCC,aAHyC,gBAGzCA,aAHyC;;AAKlE,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BF,IAAAA,eAAe,0BAAkBP,WAAlB,QAAf;AACD,GAFD;;AAIA,SACE;AACE,IAAA,QAAQ,EAAE,kBAAAU,CAAC,EAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAF,MAAAA,eAAe;AACfN,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAEd,GAApB;AAAyBe,QAAAA,OAAO,EAAEV;AAAlC,OAAD,CAAR;AACAE,MAAAA,KAAK;AACLL,MAAAA,cAAc;AACf,KAPH;AAQE,IAAA,KAAK,EAAE;AAAEc,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KART;AASE,IAAA,YAAY,EAAE;AAThB,KAWE,MAAC,SAAD;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,KAAK,EAAEZ,KAFT;AAGE,IAAA,QAAQ,EAAEC,YAHZ;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS;AALX,IAXF,CADF;AAqBD;;AACD,eAAeP,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport useInputState from \"./hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nfunction EditTodoForm({ _id, description, toggleEditForm, sorted }) {\n  const dispatch = useContext(DispatchContext);\n  const [value, handleChange, reset] = useInputState(description);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleEditClick = () => {\n    enqueueSnackbar(`Edited Task: \"${description}\"`);\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        handleEditClick();\n        dispatch({ type: \"EDIT\", id: _id, newTask: value });\n        reset();\n        toggleEditForm();\n      }}\n      style={{ marginLeft: \"1rem\", width: \"75%\" }}\n      handleSorted={false}\n    >\n      <TextField\n        margin=\"normal\"\n        value={value}\n        onChange={handleChange}\n        fullWidth\n        autoFocus\n      />\n    </form>\n  );\n}\nexport default EditTodoForm;\n"]},"metadata":{},"sourceType":"module"}