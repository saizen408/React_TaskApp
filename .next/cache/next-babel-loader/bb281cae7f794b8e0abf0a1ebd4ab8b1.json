{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, useContext } from 'react';\nimport Router from 'next/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport cubeSpinner from './styles/cubeSpinner';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { TodosContext } from './contexts/todos.context';\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    emailLang: 'Email Address',\n    passwordLang: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    emailLang: 'Adresse Électronique',\n    passwordLang: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    emailLang: 'Correo Electrónico',\n    passwordLang: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    emailLang: 'E-Mail-Addresse',\n    passwordLang: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n  日本語: {\n    signIn: 'サインイン',\n    emailLang: '電子メールアドレス',\n    passwordLang: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      open: false,\n      snackMessage: '',\n      loading: false,\n      token: ''\n    };\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(evt) {\n    evt.preventDefault();\n    this.setState(() => ({\n      loading: true\n    }));\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n      const response = await fetch(proxyUrl + url, {\n        method: 'POST',\n        body: _JSON$stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const userInfo = await response.json();\n      this.setState(() => ({\n        loading: false,\n        token: userInfo.token\n      }));\n      console.log(userInfo);\n      Router.push('/TodoAppPage');\n    } catch (error) {\n      console.error('Error:', error);\n      Router.push('/');\n      this.setState({\n        loading: false,\n        open: true,\n        snackMessage: 'Email/Password incorrect'\n      });\n    }\n\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  closeSnackbar() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const todos = useContext(TodosContext);\n    const {\n      language,\n      changeLanguage\n    } = this.context;\n    const {\n      classes\n    } = this.props;\n    const {\n      email,\n      password,\n      snackMessage,\n      open,\n      loading\n    } = this.state;\n    const {\n      emailLang,\n      signIn,\n      passwordLang,\n      remember\n    } = words[language];\n\n    if (loading) {\n      return __jsx(\"div\", {\n        className: classes.loader\n      }, cubeSpinner());\n    }\n\n    return __jsx(\"main\", {\n      className: classes.main\n    }, __jsx(Paper, {\n      className: classes.paper\n    }, __jsx(Avatar, {\n      className: classes.avatar\n    }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n      variant: \"h5\"\n    }, signIn), __jsx(Select, {\n      value: language,\n      onChange: changeLanguage\n    }, __jsx(MenuItem, {\n      value: \"english\"\n    }, \"English\"), __jsx(MenuItem, {\n      value: \"french\"\n    }, \"French\"), __jsx(MenuItem, {\n      value: \"spanish\"\n    }, \"Spanish\"), __jsx(MenuItem, {\n      value: \"german\"\n    }, \"German\"), __jsx(MenuItem, {\n      value: \"\\u65E5\\u672C\\u8A9E\"\n    }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n      className: classes.form,\n      onSubmit: this.handleSubmit\n    }, __jsx(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, __jsx(InputLabel, {\n      htmlFor: \"email\"\n    }, emailLang), __jsx(Input, {\n      id: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      autoFocus: true\n    })), __jsx(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, __jsx(InputLabel, {\n      htmlFor: \"password\"\n    }, passwordLang), __jsx(Input, {\n      id: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      autoFocus: true\n    })), __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        color: \"primary\"\n      }),\n      label: remember\n    }), __jsx(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      fullWidth: true,\n      color: \"primary\",\n      className: classes.submit\n    }, signIn))), __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: open,\n      autoHideDuration: 3000,\n      message: __jsx(\"span\", {\n        id: \"mesage-id\"\n      }, snackMessage, \" \"),\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      onClose: this.closeSnackbar,\n      variant: \"error\",\n      action: [__jsx(IconButton, {\n        onClick: this.closeSnackbar,\n        color: \"inherit\",\n        key: \"close\",\n        \"aria-label\": \"close\"\n      }, __jsx(CloseIcon, null))]\n    }));\n  }\n\n}\n\n_defineProperty(Form, \"contextType\", LanguageContext);\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Form.js"],"names":["React","Component","useContext","Router","Avatar","Button","Snackbar","IconButton","CloseIcon","CssBaseline","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","withStyles","styles","cubeSpinner","LanguageContext","TodosContext","words","english","signIn","emailLang","passwordLang","remember","french","spanish","german","日本語","Form","constructor","props","state","email","password","open","snackMessage","loading","token","closeSnackbar","bind","handleChange","handleSubmit","evt","preventDefault","setState","proxyUrl","url","response","fetch","method","body","headers","userInfo","json","console","log","push","error","target","name","value","render","todos","language","changeLanguage","context","classes","loader","main","paper","avatar","form","submit","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport Router from 'next/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport cubeSpinner from './styles/cubeSpinner';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { TodosContext } from './contexts/todos.context';\n\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    emailLang: 'Email Address',\n    passwordLang: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    emailLang: 'Adresse Électronique',\n    passwordLang: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    emailLang: 'Correo Electrónico',\n    passwordLang: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    emailLang: 'E-Mail-Addresse',\n    passwordLang: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n\n  日本語: {\n    signIn: 'サインイン',\n    emailLang: '電子メールアドレス',\n    passwordLang: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nclass Form extends Component {\n  static contextType = LanguageContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      open: false,\n      snackMessage: '',\n      loading: false,\n      token: ''\n    };\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(evt) {\n    evt.preventDefault();\n\n    this.setState(() => ({ loading: true }));\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n      const response = await fetch(proxyUrl + url, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const userInfo = await response.json();\n      this.setState(() => ({ loading: false, token: userInfo.token }));\n\n      console.log(userInfo);\n      Router.push('/TodoAppPage');\n    } catch (error) {\n      console.error('Error:', error);\n      Router.push('/');\n      this.setState({\n        loading: false,\n        open: true,\n        snackMessage: 'Email/Password incorrect'\n      });\n    }\n    this.setState({ email: '', password: '' });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  closeSnackbar() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const todos = useContext(TodosContext);\n    const { language, changeLanguage } = this.context;\n    const { classes } = this.props;\n    const { email, password, snackMessage, open, loading } = this.state;\n    const { emailLang, signIn, passwordLang, remember } = words[language];\n\n    if (loading) {\n      return <div className={classes.loader}>{cubeSpinner()}</div>;\n    }\n\n    return (\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography variant=\"h5\">{signIn}</Typography>\n          <Select value={language} onChange={changeLanguage}>\n            <MenuItem value=\"english\">English</MenuItem>\n            <MenuItem value=\"french\">French</MenuItem>\n            <MenuItem value=\"spanish\">Spanish</MenuItem>\n            <MenuItem value=\"german\">German</MenuItem>\n            <MenuItem value=\"日本語\">日本語</MenuItem>\n          </Select>\n          <form className={classes.form} onSubmit={this.handleSubmit}>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"email\">{emailLang}</InputLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n                autoFocus\n              ></Input>\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"password\">{passwordLang}</InputLabel>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n                autoFocus\n              ></Input>\n            </FormControl>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" />}\n              label={remember}\n            />\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {signIn}\n            </Button>\n          </form>\n        </Paper>\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={open}\n          autoHideDuration={3000}\n          message={<span id=\"mesage-id\">{snackMessage} </span>}\n          ContentProps={{ 'aria-describedby': 'message-id' }}\n          onClose={this.closeSnackbar}\n          variant=\"error\"\n          action={[\n            <IconButton\n              onClick={this.closeSnackbar}\n              color=\"inherit\"\n              key=\"close\"\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </main>\n    );\n  }\n}\n\nexport default withStyles(styles)(Form);\n"]},"metadata":{},"sourceType":"module"}