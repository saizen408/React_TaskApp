{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"react-sortable-hoc\"; // const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\nfunction TodoList(props) {\n  console.log(props);\n  console.log(props.posts); // const { tasks } = props.posts;\n\n  const {\n    0: tasks,\n    1: setState\n  } = useState([]);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    setState(() => ({\n      tasks: arrayMove(props, oldIndex, newIndex)\n    }));\n  };\n\n  if (props.posts.length) return __jsx(DraggableTodoList, _extends({\n    axis: \"y\",\n    onSortEnd: onSortEnd\n  }, props));\n  return null;\n}\n\nexport default TodoList;\n{\n  /* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List> */\n}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","useEffect","useState","Paper","List","Divider","DraggableTodoList","arrayMove","TodoList","props","console","log","posts","tasks","setState","onSortEnd","oldIndex","newIndex","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CAEA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB,EAFuB,CAGvB;;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMa,SAAS,GAAG,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,KAA4B;AAC5CH,IAAAA,QAAQ,CAAC,OAAO;AACdD,MAAAA,KAAK,EAAEN,SAAS,CAACE,KAAD,EAAQO,QAAR,EAAkBC,QAAlB;AADF,KAAP,CAAD,CAAR;AAGD,GAJD;;AAMA,MAAIR,KAAK,CAACG,KAAN,CAAYM,MAAhB,EACE,OACE,MAAC,iBAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAEH;AAFb,KAGMN,KAHN,EADF;AAOF,SAAO,IAAP;AACD;;AAED,eAAeD,QAAf;AAEA;AACE;;;;;;;;AAQD","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"react-sortable-hoc\";\n\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\nfunction TodoList(props) {\n  console.log(props);\n  console.log(props.posts);\n  // const { tasks } = props.posts;\n  const [tasks, setState] = useState([]);\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setState(() => ({\n      tasks: arrayMove(props, oldIndex, newIndex)\n    }));\n  };\n\n  if (props.posts.length)\n    return (\n      <DraggableTodoList\n        axis=\"y\"\n        onSortEnd={onSortEnd}\n        {...props}\n      ></DraggableTodoList>\n    );\n  return null;\n}\n\nexport default TodoList;\n\n{\n  /* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List> */\n}\n"]},"metadata":{},"sourceType":"module"}