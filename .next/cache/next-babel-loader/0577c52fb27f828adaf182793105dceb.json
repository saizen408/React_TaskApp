{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nvar words = {\n  en: {\n    addTodo: \"Add New Todo\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    addTodo: \"Ajouter un nouveau Todo\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    addTodo: \"Añadir nuevo Todo\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    addTodo: \"Neuen Todo hinzufügen\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n  ja: {\n    addTodo: \"新しいTodoを追加\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\nvar styles = {\n  input1: {\n    height: 26\n  },\n  input2: {\n    height: 200,\n    fontSize: \"3em\"\n  }\n};\n\nfunction TodoForm(props) {\n  var classes = props.classes;\n\n  var _useInputState = useInputState(\"\"),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      value = _useInputState2[0],\n      handleChange = _useInputState2[1],\n      reset = _useInputState2[2];\n\n  var dispatch = useContext(DispatchContext);\n\n  var _useContext = useContext(LanguageContext),\n      language = _useContext.language;\n\n  var addTodo = words[language].addTodo;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar,\n      closeSnackbar = _useSnackbar.closeSnackbar;\n\n  var handleAddClick = function handleAddClick() {\n    var message = \"New Task: \\\"\".concat(value, \"\\\"\");\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  return __jsx(Paper, {\n    elevation: 3,\n    style: {\n      margin: \"1rem 0\",\n      padding: \"0\"\n    }\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      handleAddClick();\n      dispatch({\n        type: \"ADD\",\n        task: value\n      });\n      reset();\n      Router.push(\"/TodoAppPage\");\n    },\n    style: {\n      height: \"65px\"\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    InputProps: {\n      classes: {\n        input: props.classes.input1\n      }\n    },\n    value: value,\n    onChange: handleChange,\n    margin: \"normal\",\n    label: addTodo,\n    fullWidth: true\n  })));\n}\n\nexport default withStyles(styles)(TodoForm);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoForm.js"],"names":["React","useContext","Router","TextField","Paper","useInputState","DispatchContext","LanguageContext","withStyles","SnackbarProvider","useSnackbar","words","en","addTodo","lastUpdated","fr","es","de","ja","styles","input1","height","input2","fontSize","TodoForm","props","classes","value","handleChange","reset","dispatch","language","enqueueSnackbar","closeSnackbar","handleAddClick","message","variant","margin","padding","e","preventDefault","type","task","push","input"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nconst words = {\n  en: {\n    addTodo: \"Add New Todo\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    addTodo: \"Ajouter un nouveau Todo\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    addTodo: \"Añadir nuevo Todo\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    addTodo: \"Neuen Todo hinzufügen\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n\n  ja: { addTodo: \"新しいTodoを追加\", lastUpdated: \"最新の更新: \" }\n};\n\nconst styles = {\n  input1: {\n    height: 26\n  },\n  input2: {\n    height: 200,\n    fontSize: \"3em\"\n  }\n};\n\nfunction TodoForm(props) {\n  const { classes } = props;\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const { language } = useContext(LanguageContext);\n  const { addTodo } = words[language];\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  return (\n    <Paper elevation={3} style={{ margin: \"1rem 0\", padding: \"0\" }}>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          handleAddClick();\n          dispatch({ type: \"ADD\", task: value });\n          reset();\n          Router.push(\"/TodoAppPage\");\n        }}\n        style={{ height: \"65px\" }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          InputProps={{ classes: { input: props.classes.input1 } }}\n          value={value}\n          onChange={handleChange}\n          margin=\"normal\"\n          label={addTodo}\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\n\nexport default withStyles(styles)(TodoForm);\n"]},"metadata":{},"sourceType":"module"}