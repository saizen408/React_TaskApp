{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { withSortedContext } from \"./contexts/SortedContext\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSortEnd\", ({\n      oldIndex,\n      newIndex\n    }) => {\n      console.log(\"before sort: \", this.state.prevArr);\n\n      if (this.state.prevArr.length === 0) {\n        var arr = this.props.posts;\n      } else {\n        var arr = this.state.prevArr;\n      }\n\n      arr = arr.slice();\n      arr.splice(newIndex < 0 ? arr.length + newIndex : newIndex, 0, arr.splice(oldIndex, 1)[0]);\n      console.log(\"after sort: \", arr);\n      this.setState({\n        tasks: arr,\n        prevArr: arr,\n        sorted: true\n      });\n    });\n\n    this.state = {\n      tasks: props.posts,\n      prevArr: [],\n      sorted: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //consider component did update\n    if (!state.sorted || props.sortedContext.isSorted) {\n      if (props.posts.length !== state.tasks.length) {\n        return {\n          tasks: props.posts\n        };\n      }\n\n      for (let i = 0; i < state.tasks.length; i++) {\n        if (props.posts[i].completed === !state.tasks[i].completed) {\n          return {\n            tasks: props.posts\n          };\n        }\n\n        if (props.posts[i].description !== state.tasks[i].description) {\n          return {\n            tasks: props.posts\n          };\n        }\n      }\n\n      return null;\n    } else return null;\n  }\n\n  render() {\n    console.log(\"this.state.sorted: \", this.state.sorted);\n    const {\n      posts,\n      resetSort\n    } = this.props.sortedContext;\n    const {\n      tasks\n    } = this.state;\n    if (tasks.length) return __jsx(DraggableTodoList, {\n      axis: \"y\",\n      distance: 20,\n      onSortEnd: this.onSortEnd,\n      posts: tasks,\n      sorted: resetSort\n    });\n    return null;\n  }\n\n}\n\nexport default withSortedContext(TodoList);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","Component","DraggableTodoList","withSortedContext","TodoList","constructor","props","oldIndex","newIndex","console","log","state","prevArr","length","arr","posts","slice","splice","setState","tasks","sorted","getDerivedStateFromProps","sortedContext","isSorted","i","completed","description","render","resetSort","onSortEnd"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { withSortedContext } from \"./contexts/SortedContext\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: props.posts,\n      prevArr: [],\n      sorted: false\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    console.log(\"before sort: \", this.state.prevArr);\n    if (this.state.prevArr.length === 0) {\n      var arr = this.props.posts;\n    } else {\n      var arr = this.state.prevArr;\n    }\n\n    arr = arr.slice();\n    arr.splice(\n      newIndex < 0 ? arr.length + newIndex : newIndex,\n      0,\n      arr.splice(oldIndex, 1)[0]\n    );\n    console.log(\"after sort: \", arr);\n    this.setState({\n      tasks: arr,\n      prevArr: arr,\n      sorted: true\n    });\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    //consider component did update\n\n    if (!state.sorted || props.sortedContext.isSorted) {\n      if (props.posts.length !== state.tasks.length) {\n        return { tasks: props.posts };\n      }\n\n      for (let i = 0; i < state.tasks.length; i++) {\n        if (props.posts[i].completed === !state.tasks[i].completed) {\n          return { tasks: props.posts };\n        }\n        if (props.posts[i].description !== state.tasks[i].description) {\n          return { tasks: props.posts };\n        }\n      }\n      return null;\n    } else return null;\n  }\n\n  render() {\n    console.log(\"this.state.sorted: \", this.state.sorted);\n    const { posts, resetSort } = this.props.sortedContext;\n    const { tasks } = this.state;\n    if (tasks.length)\n      return (\n        <DraggableTodoList\n          axis=\"y\"\n          distance={20}\n          onSortEnd={this.onSortEnd}\n          posts={tasks}\n          sorted={resetSort}\n        ></DraggableTodoList>\n      );\n    return null;\n  }\n}\n\nexport default withSortedContext(TodoList);\n"]},"metadata":{},"sourceType":"module"}