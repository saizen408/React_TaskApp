{"ast":null,"code":"import axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\"; // set up cookies\n\nconst cookies = new Cookies();\nexport async function handleAuthSSR(ctx) {\n  let token = null; // // if context has request info aka Server Side\n  // if (ctx.req) {\n  //   // ugly way to get cookie value from a string of values\n  //   // good enough for demostration\n  //   token = ctx.req.headers.cookie.replace(\n  //     /(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/,\n  //     '$1'\n  //   );\n  // } else {\n  // we dont have request info aka Client Side\n\n  token = cookies.get(\"token\");\n  console.log(\"got the token from authssr:\", token); // }\n\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n\n  try {\n    const res = await axios.get(proxyUrl + targetUrl, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    console.log(res);\n    return res;\n  } catch (e) {\n    console.error(\"Error:\", e); // if (ctx.res) {\n    //   ctx.res.writeHead(302, {\n    //     Location: \"/\"\n    //   });\n    //   ctx.res.end();\n    // } else {\n    //   Router.push(\"/\");\n    // }\n  }\n}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/handleAuthSSR.js"],"names":["axios","Router","Cookies","cookies","handleAuthSSR","ctx","token","get","console","log","proxyUrl","targetUrl","res","headers","Authorization","e","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CACA;;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,OAAO,eAAeE,aAAf,CAA6BC,GAA7B,EAAkC;AACvC,MAAIC,KAAK,GAAG,IAAZ,CADuC,CAGvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,EAAAA,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAY,OAAZ,CAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CH,KAA3C,EAduC,CAevC;;AACA,QAAMI,QAAQ,GAAG,sCAAjB;AACA,QAAMC,SAAS,GAAG,gDAAlB;;AAEA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACO,GAAN,CAAUG,QAAQ,GAAGC,SAArB,EAAgC;AAChDE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYR;AADpB;AADuC,KAAhC,CAAlB;AAMAE,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WAAOA,GAAP;AACD,GATD,CASE,OAAOG,CAAP,EAAU;AACVP,IAAAA,OAAO,CAACQ,KAAR,CAAc,QAAd,EAAwBD,CAAxB,EADU,CAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\n// set up cookies\nconst cookies = new Cookies();\n\nexport async function handleAuthSSR(ctx) {\n  let token = null;\n\n  // // if context has request info aka Server Side\n  // if (ctx.req) {\n  //   // ugly way to get cookie value from a string of values\n  //   // good enough for demostration\n  //   token = ctx.req.headers.cookie.replace(\n  //     /(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/,\n  //     '$1'\n  //   );\n  // } else {\n  // we dont have request info aka Client Side\n  token = cookies.get(\"token\");\n  console.log(\"got the token from authssr:\", token);\n  // }\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n\n  try {\n    const res = await axios.get(proxyUrl + targetUrl, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n\n    console.log(res);\n    return res;\n  } catch (e) {\n    console.error(\"Error:\", e);\n    // if (ctx.res) {\n    //   ctx.res.writeHead(302, {\n    //     Location: \"/\"\n    //   });\n    //   ctx.res.end();\n    // } else {\n    //   Router.push(\"/\");\n    // }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}