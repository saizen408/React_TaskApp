{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState, Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"array-move\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSortEnd\", ({\n      oldIndex,\n      newIndex\n    }) => {\n      this.setState(({\n        tasks\n      }) => ({\n        tasks: arrayMove(test, oldIndex, newIndex)\n      }));\n    });\n\n    this.state = {\n      tasks: props.posts\n    };\n    this.onSortEnd = this.onSortEnd.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      tasks: this.props.posts\n    });\n  } // componentWillReceiveProps(nextProps, prevState) {\n  //   this.setState({\n  //     stateValue: nextProps.VALUE,\n  //   })\n  // }\n\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    if (tasks.length) return __jsx(DraggableTodoList, {\n      axis: \"y\",\n      distance: 20,\n      onSortEnd: this.onSortEnd,\n      tasks: tasks\n    });\n    return null;\n  }\n\n}\n\nexport default TodoList; // function TodoList(props) {\n//   if (props.posts.length)\n//     return (\n//       <DraggableTodoList\n//         axis=\"y\"\n//         distance={20}\n//         onSortEnd={onSortEnd}\n//         {...props}\n//       ></DraggableTodoList>\n//     );\n//   return null;\n// }\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\n/* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n</List> */","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","useEffect","useState","Component","Paper","List","Divider","DraggableTodoList","arrayMove","TodoList","constructor","props","oldIndex","newIndex","setState","tasks","test","state","posts","onSortEnd","bind","componentDidMount","render","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,uCAQP,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,KAA4B;AACtC,WAAKC,QAAL,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,MAAgB;AAC5BA,QAAAA,KAAK,EAAEP,SAAS,CAACQ,IAAD,EAAOJ,QAAP,EAAiBC,QAAjB;AADY,OAAhB,CAAd;AAGD,KAZkB;;AAEjB,SAAKI,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAEJ,KAAK,CAACO;AADF,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAQDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWO;AAApB,KAAd;AACD,GAjB8B,CAmB/B;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKE,KAAvB;AAEA,QAAIF,KAAK,CAACQ,MAAV,EACE,OACE,MAAC,iBAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,SAAS,EAAE,KAAKJ,SAHlB;AAIE,MAAA,KAAK,EAAEJ;AAJT,MADF;AAQF,WAAO,IAAP;AACD;;AAtC8B;;AAyCjC,eAAeN,QAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA","sourcesContent":["import React, { useContext, useEffect, useState, Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"array-move\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: props.posts\n    };\n    this.onSortEnd = this.onSortEnd.bind(this);\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.setState(({ tasks }) => ({\n      tasks: arrayMove(test, oldIndex, newIndex)\n    }));\n  };\n\n  componentDidMount() {\n    this.setState({ tasks: this.props.posts });\n  }\n\n  // componentWillReceiveProps(nextProps, prevState) {\n  //   this.setState({\n  //     stateValue: nextProps.VALUE,\n  //   })\n  // }\n\n  render() {\n    const { tasks } = this.state;\n\n    if (tasks.length)\n      return (\n        <DraggableTodoList\n          axis=\"y\"\n          distance={20}\n          onSortEnd={this.onSortEnd}\n          tasks={tasks}\n        ></DraggableTodoList>\n      );\n    return null;\n  }\n}\n\nexport default TodoList;\n\n// function TodoList(props) {\n\n//   if (props.posts.length)\n//     return (\n//       <DraggableTodoList\n//         axis=\"y\"\n//         distance={20}\n//         onSortEnd={onSortEnd}\n//         {...props}\n//       ></DraggableTodoList>\n//     );\n//   return null;\n// }\n\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\n/* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n</List> */\n"]},"metadata":{},"sourceType":"module"}