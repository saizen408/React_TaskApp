{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\nconst words = {\n  en: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\",\n    errorMessage: \"Email and/or Password incorrect\",\n    demoMessage: \"Welcome to Task App Demo! Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\",\n    errorMessage: \"E-mail et / ou mot de passe incorrect\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\",\n    errorMessage: \"Correo electrónico y / o contraseña incorrectos\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    signIn: \"anmelden\",\n    email: \"E-Mail-Addresse\",\n    password: \"Passwort\",\n    remember: \"Behalte mich in Erinnerung\",\n    errorMessage: \"E-Mail und / oder Passwort falsch\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n  ja: {\n    signIn: \"サインイン\",\n    email: \"電子メールアドレス\",\n    password: \"パスワード\",\n    remember: \"私を覚えている\",\n    errorMessage: \"メールアドレスまたはパスワードが正しくありません\",\n    demoMessage: \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\n\nfunction Todo({\n  _id,\n  description,\n  completed,\n  updatedAt\n}) {\n  const dispatch = useContext(DispatchContext);\n  const {\n    language\n  } = useContext(LanguageContext);\n  const [isEditing, toggle] = useToggleState(false);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n  const {\n    lastUpdated\n  } = words[language];\n  console.log(words);\n\n  const handleDeleteClick = () => {\n    enqueueSnackbar(`Deleted Task: \"${description}\"`);\n  };\n\n  const handleEditClick = () => {\n    enqueueSnackbar(`Edited Task: \"${description}\"`);\n  };\n\n  const formatedDate = () => {\n    moment.locale(language);\n    return moment(updatedAt).format(\"lll\");\n  };\n\n  return __jsx(ListItem, {\n    style: {\n      height: \"65px\"\n    }\n  }, isEditing ? __jsx(EditTodoForm, {\n    _id: _id,\n    description: description,\n    toggleEditForm: toggle\n  }) : __jsx(React.Fragment, null, __jsx(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => {\n      dispatch({\n        type: \"TOGGLE\",\n        id: _id,\n        completed: completed\n      });\n    }\n  }), __jsx(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    }\n  }, description, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, lastUpdated, \": \", formatedDate())), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: () => {\n      dispatch({\n        type: \"REMOVE\",\n        id: _id\n      });\n      handleDeleteClick();\n    }\n  }, __jsx(DeleteIcon, null)), __jsx(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle\n  }, __jsx(EditIcon, null))), \" \"));\n}\n\nexport default memo(Todo);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Todo.js"],"names":["React","useContext","memo","useToggleState","EditTodoForm","ListItemText","ListItem","Checkbox","IconButton","DeleteIcon","EditIcon","SnackbarProvider","useSnackbar","ListItemSecondaryAction","DispatchContext","LanguageContext","Typography","moment","words","en","signIn","email","password","remember","errorMessage","demoMessage","lastUpdated","fr","es","de","ja","Todo","_id","description","completed","updatedAt","dispatch","language","isEditing","toggle","enqueueSnackbar","closeSnackbar","console","log","handleDeleteClick","handleEditClick","formatedDate","locale","format","height","type","id","textDecoration"],"mappings":"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","sourcesContent":["import React, { useContext, memo } from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nconst words = {\n  en: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\",\n    errorMessage: \"Email and/or Password incorrect\",\n    demoMessage:\n      \"Welcome to Task App Demo! Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\",\n    errorMessage: \"E-mail et / ou mot de passe incorrect\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\",\n    errorMessage: \"Correo electrónico y / o contraseña incorrectos\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    signIn: \"anmelden\",\n    email: \"E-Mail-Addresse\",\n    password: \"Passwort\",\n    remember: \"Behalte mich in Erinnerung\",\n    errorMessage: \"E-Mail und / oder Passwort falsch\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n\n  ja: {\n    signIn: \"サインイン\",\n    email: \"電子メールアドレス\",\n    password: \"パスワード\",\n    remember: \"私を覚えている\",\n    errorMessage: \"メールアドレスまたはパスワードが正しくありません\",\n    demoMessage:\n      \"Welcome to Task App Demo. Email: taskappdemo@demo.com | Password: 1234567\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\n\nfunction Todo({ _id, description, completed, updatedAt }) {\n  const dispatch = useContext(DispatchContext);\n  const { language } = useContext(LanguageContext);\n  const [isEditing, toggle] = useToggleState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { lastUpdated } = words[language];\n  console.log(words);\n\n  const handleDeleteClick = () => {\n    enqueueSnackbar(`Deleted Task: \"${description}\"`);\n  };\n\n  const handleEditClick = () => {\n    enqueueSnackbar(`Edited Task: \"${description}\"`);\n  };\n\n  const formatedDate = () => {\n    moment.locale(language);\n    return moment(updatedAt).format(\"lll\");\n  };\n\n  return (\n    <ListItem style={{ height: \"65px\" }}>\n      {isEditing ? (\n        <EditTodoForm\n          _id={_id}\n          description={description}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => {\n              dispatch({ type: \"TOGGLE\", id: _id, completed: completed });\n            }}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {description}\n            <Typography variant=\"subtitle2\">\n              {lastUpdated}: {formatedDate()}\n            </Typography>\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={() => {\n                dispatch({ type: \"REMOVE\", id: _id });\n                handleDeleteClick();\n              }}\n            >\n              <DeleteIcon></DeleteIcon>\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon></EditIcon>\n            </IconButton>\n          </ListItemSecondaryAction>{\" \"}\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n"]},"metadata":{},"sourceType":"module"}