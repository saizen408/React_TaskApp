{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/SnackBarStyles\";\n\nfunction TodoForm(props) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const {\n    classes\n  } = props;\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message);\n  };\n\n  return __jsx(Paper, {\n    style: {\n      margin: \"1rem 0\",\n      padding: \"0\"\n    }\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleAddClick();\n      dispatch({\n        type: \"ADD\",\n        task: value\n      });\n      reset();\n      Router.push(\"/TodoAppPage\");\n    },\n    style: {\n      height: \"70px\"\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    value: value,\n    onChange: handleChange,\n    margin: \"normal\",\n    label: \"Add New Todo\",\n    fullWidth: true\n  })));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoForm.js"],"names":["React","useContext","Router","TextField","Paper","useInputState","DispatchContext","SnackbarProvider","useSnackbar","withStyles","styles","TodoForm","props","value","handleChange","reset","dispatch","classes","enqueueSnackbar","closeSnackbar","handleAddClick","message","margin","padding","e","preventDefault","type","task","push","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,KAAD,EAAQC,YAAR,EAAsBC,KAAtB,IAA+BV,aAAa,CAAC,EAAD,CAAlD;AACA,QAAMW,QAAQ,GAAGf,UAAU,CAACK,eAAD,CAA3B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAcL,KAApB;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAqCX,WAAW,EAAtD;;AAEA,QAAMY,cAAc,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAI,cAAaR,KAAM,GAApC;AACAK,IAAAA,eAAe,CAACG,OAAD,CAAf;AACD,GAHD;;AAKA,SACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,OAAO,EAAE;AAA7B;AAAd,KACE;AACE,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAL,MAAAA,cAAc;AACdJ,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,IAAI,EAAEd;AAArB,OAAD,CAAR;AACAE,MAAAA,KAAK;AACLb,MAAAA,MAAM,CAAC0B,IAAP,CAAY,cAAZ;AACD,KAPH;AAQE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AART,KAUE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAEhB,KAHT;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,KAAK,EAAC,cANR;AAOE,IAAA,SAAS;AAPX,IAVF,CADF,CADF;AAwBD;;AAED,eAAeH,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/SnackBarStyles\";\n\nfunction TodoForm(props) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const { classes } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message);\n  };\n\n  return (\n    <Paper style={{ margin: \"1rem 0\", padding: \"0\" }}>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          handleAddClick();\n          dispatch({ type: \"ADD\", task: value });\n          reset();\n          Router.push(\"/TodoAppPage\");\n        }}\n        style={{ height: \"70px\" }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          value={value}\n          onChange={handleChange}\n          margin=\"normal\"\n          label=\"Add New Todo\"\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}