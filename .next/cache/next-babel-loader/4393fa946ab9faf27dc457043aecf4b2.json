{"ast":null,"code":"import axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\nexport async function handleAuthSSR(ctx) {\n  let token = null;\n\n  if (ctx.req) {\n    token = ctx.req.headers.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n  } else {\n    token = cookies.get(\"token\");\n  }\n\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n\n  try {\n    const res = await axios.get(proxyUrl + targetUrl, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"Error:\", e);\n\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: \"/\"\n      });\n      ctx.res.end();\n    } else {\n      Router.push(\"/\");\n    }\n  }\n}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/handleAuthSSR.js"],"names":["axios","Router","Cookies","cookies","handleAuthSSR","ctx","token","req","headers","cookie","replace","get","proxyUrl","targetUrl","res","Authorization","e","console","error","writeHead","Location","end","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,OAAO,eAAeE,aAAf,CAA6BC,GAA7B,EAAkC;AACvC,MAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAID,GAAG,CAACE,GAAR,EAAa;AACXD,IAAAA,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CACN,8CADM,EAEN,IAFM,CAAR;AAID,GALD,MAKO;AACLJ,IAAAA,KAAK,GAAGH,OAAO,CAACQ,GAAR,CAAY,OAAZ,CAAR;AACD;;AACD,QAAMC,QAAQ,GAAG,sCAAjB;AACA,QAAMC,SAAS,GAAG,gDAAlB;;AAEA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACW,GAAN,CAAUC,QAAQ,GAAGC,SAArB,EAAgC;AAChDL,MAAAA,OAAO,EAAE;AACPO,QAAAA,aAAa,EAAE,YAAYT;AADpB;AADuC,KAAhC,CAAlB;AAKA,WAAOQ,GAAP;AACD,GAPD,CAOE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBF,CAAxB;;AACA,QAAIX,GAAG,CAACS,GAAR,EAAa;AACXT,MAAAA,GAAG,CAACS,GAAJ,CAAQK,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,QAAAA,QAAQ,EAAE;AADW,OAAvB;AAGAf,MAAAA,GAAG,CAACS,GAAJ,CAAQO,GAAR;AACD,KALD,MAKO;AACLpB,MAAAA,MAAM,CAACqB,IAAP,CAAY,GAAZ;AACD;AACF;AACF","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\n\nexport async function handleAuthSSR(ctx) {\n  let token = null;\n\n  if (ctx.req) {\n    token = ctx.req.headers.cookie.replace(\n      /(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/,\n      \"$1\"\n    );\n  } else {\n    token = cookies.get(\"token\");\n  }\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n\n  try {\n    const res = await axios.get(proxyUrl + targetUrl, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    return res;\n  } catch (e) {\n    console.error(\"Error:\", e);\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: \"/\"\n      });\n      ctx.res.end();\n    } else {\n      Router.push(\"/\");\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}