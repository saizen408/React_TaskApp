{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { DispatchContext } from './contexts/todos.context';\nimport useInputState from './hooks/useInputState';\nimport cubeSpinner from './styles/cubeSpinner';\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    email: 'Adresse Électronique',\n    password: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    email: 'Correo Electrónico',\n    password: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    email: 'E-Mail-Addresse',\n    password: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n  日本語: {\n    signIn: 'サインイン',\n    email: '電子メールアドレス',\n    password: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nfunction Form(props) {\n  const {\n    language,\n    changeLanguage,\n    token\n  } = useContext(LanguageContext);\n  const dispatch = useContext(DispatchContext);\n  const {\n    classes\n  } = props;\n  const {\n    email,\n    signIn,\n    password,\n    remember\n  } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState('');\n  const [passVal, handlePassChange, passReset] = useInputState('');\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault(); //toggle loader\n\n    setLoader(true);\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n      const response = await fetch(proxyUrl + url, {\n        method: 'POST',\n        body: _JSON$stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const userInfo = await response.json();\n      token = userInfo.token;\n      setLoader(false); // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n      console.log(userInfo); // Router.push('/TodoAppPage');\n    } catch (error) {\n      console.error('Error:', error);\n      Router.push('/');\n      setLoader(false);\n      setSnackOpen(true); // this.setState({ email: '', password: '' });\n    }\n  };\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: classes.loader\n    }, cubeSpinner());\n  }\n\n  return __jsx(\"main\", {\n    className: classes.main\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    variant: \"h5\"\n  }, signIn), __jsx(Select, {\n    value: language,\n    onChange: changeLanguage\n  }, __jsx(MenuItem, {\n    value: \"english\"\n  }, \"English\"), __jsx(MenuItem, {\n    value: \"french\"\n  }, \"French\"), __jsx(MenuItem, {\n    value: \"spanish\"\n  }, \"Spanish\"), __jsx(MenuItem, {\n    value: \"german\"\n  }, \"German\"), __jsx(MenuItem, {\n    value: \"\\u65E5\\u672C\\u8A9E\"\n  }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: e => {\n      e.preventDefault();\n      dispatch({\n        type: 'LOGIN',\n        email: emailVal,\n        password: passVal\n      }); //fix this later\n\n      emailReset();\n      passReset();\n    }\n  }, __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, email), __jsx(Input, {\n    id: \"email\",\n    name: \"email\",\n    value: emailVal,\n    onChange: handleEmailChange,\n    autoFocus: true\n  })), __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, password), __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    value: passVal,\n    onChange: handlePassChange,\n    autoFocus: true\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\"\n    }),\n    label: remember\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submit\n  }, signIn))), __jsx(Button, {\n    onClick: handleClick\n  }, \"Open simple snackbar\"), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, \"Email and/or Password is incorrect\"),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: handleClose\n    }, __jsx(CloseIcon, null))]\n  }));\n}\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Form.js"],"names":["React","useContext","Avatar","Button","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","Snackbar","IconButton","CloseIcon","withStyles","styles","LanguageContext","ThemeContext","DispatchContext","useInputState","cubeSpinner","words","english","signIn","email","password","remember","french","spanish","german","日本語","Form","props","language","changeLanguage","token","dispatch","classes","emailVal","handleEmailChange","emailReset","passVal","handlePassChange","passReset","open","setSnackOpen","useState","loading","setLoader","handleClick","handleClose","event","reason","handleSubmit","evt","preventDefault","proxyUrl","url","response","fetch","method","body","state","headers","userInfo","json","console","log","error","Router","push","loader","main","paper","avatar","form","e","type","submit","vertical","horizontal","close"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { DispatchContext } from './contexts/todos.context';\nimport useInputState from './hooks/useInputState';\nimport cubeSpinner from './styles/cubeSpinner';\n\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    email: 'Adresse Électronique',\n    password: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    email: 'Correo Electrónico',\n    password: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    email: 'E-Mail-Addresse',\n    password: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n\n  日本語: {\n    signIn: 'サインイン',\n    email: '電子メールアドレス',\n    password: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nfunction Form(props) {\n  const { language, changeLanguage, token } = useContext(LanguageContext);\n  const dispatch = useContext(DispatchContext);\n  const { classes } = props;\n  const { email, signIn, password, remember } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState('');\n  const [passVal, handlePassChange, passReset] = useInputState('');\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    //toggle loader\n    setLoader(true);\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n      const response = await fetch(proxyUrl + url, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const userInfo = await response.json();\n      token = userInfo.token;\n      setLoader(false);\n      // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n      console.log(userInfo);\n      // Router.push('/TodoAppPage');\n    } catch (error) {\n      console.error('Error:', error);\n      Router.push('/');\n      setLoader(false);\n      setSnackOpen(true);\n\n      // this.setState({ email: '', password: '' });\n    }\n  };\n\n  if (loading) {\n    return <div className={classes.loader}>{cubeSpinner()}</div>;\n  }\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{signIn}</Typography>\n        <Select value={language} onChange={changeLanguage}>\n          <MenuItem value=\"english\">English</MenuItem>\n          <MenuItem value=\"french\">French</MenuItem>\n          <MenuItem value=\"spanish\">Spanish</MenuItem>\n          <MenuItem value=\"german\">German</MenuItem>\n          <MenuItem value=\"日本語\">日本語</MenuItem>\n        </Select>\n        <form\n          className={classes.form}\n          onSubmit={e => {\n            e.preventDefault();\n            dispatch({ type: 'LOGIN', email: emailVal, password: passVal }); //fix this later\n            emailReset();\n            passReset();\n          }}\n        >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">{email}</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              value={emailVal}\n              onChange={handleEmailChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">{password}</InputLabel>\n            <Input\n              id=\"password\"\n              name=\"password\"\n              value={passVal}\n              onChange={handlePassChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox color=\"primary\" />}\n            label={remember}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            fullWidth\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {signIn}\n          </Button>\n        </form>\n      </Paper>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={\n          <span id=\"message-id\">Email and/or Password is incorrect</span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </main>\n  );\n}\n\nexport default withStyles(styles)(Form);\n"]},"metadata":{},"sourceType":"module"}