{"ast":null,"code":"import axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  console.log(\"state before switch/case executes: \", state);\n\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = {\n        description\n      };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"TOGGLE\":\n      console.log(\"toggle clicked!\");\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = {\n          completed: isDone\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        state.toggled = true;\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = {\n          description\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Router","Cookies","cookies","token","get","todoReducer","state","action","console","log","type","description","task","body","proxyUrl","targetUrl","res","url","method","data","headers","Authorization","push","e","id","isDone","completed","updateData","toggled","newTask"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = { description };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    case \"TOGGLE\":\n      console.log(\"toggle clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = { completed: isDone };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        state.toggled = true;\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = { description };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}