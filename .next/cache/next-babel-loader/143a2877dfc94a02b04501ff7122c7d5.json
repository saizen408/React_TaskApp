{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createContext } from 'react';\nexport var ThemeContext = createContext();\nexport var ThemeProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThemeProvider, _Component);\n\n  function ThemeProvider(props) {\n    var _this;\n\n    _classCallCheck(this, ThemeProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemeProvider).call(this, props));\n    _this.state = {\n      isDarkMode: false,\n      tokens: ''\n    };\n    _this.toggleTheme = _this.toggleTheme.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ThemeProvider, [{\n    key: \"toggleTheme\",\n    value: function toggleTheme() {\n      this.setState({\n        isDarkMode: !this.state.isDarkMode\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(ThemeContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          toggleTheme: this.toggleTheme\n        })\n      }, this.props.children);\n    }\n  }]);\n\n  return ThemeProvider;\n}(Component);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/contexts/ThemeContext.js"],"names":["React","Component","createContext","ThemeContext","ThemeProvider","props","state","isDarkMode","tokens","toggleTheme","bind","setState","children"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAO,IAAMC,YAAY,GAAGD,aAAa,EAAlC;AAEP,WAAaE,aAAb;AAAA;AAAA;AAAA;;AACE,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAHiB;AAIlB;;AALH;AAAA;AAAA,kCAOgB;AACZ,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA1B,OAAd;AACD;AATH;AAAA;AAAA,6BAWW;AACP,aACE,MAAC,YAAD,CAAc,QAAd;AACE,QAAA,KAAK,oBAAO,KAAKD,KAAZ;AAAmBG,UAAAA,WAAW,EAAE,KAAKA;AAArC;AADP,SAGG,KAAKJ,KAAL,CAAWO,QAHd,CADF;AAOD;AAnBH;;AAAA;AAAA,EAAmCX,SAAnC","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport class ThemeProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isDarkMode: false, tokens: '' };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme() {\n    this.setState({ isDarkMode: !this.state.isDarkMode });\n  }\n\n  render() {\n    return (\n      <ThemeContext.Provider\n        value={{ ...this.state, toggleTheme: this.toggleTheme }}\n      >\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}