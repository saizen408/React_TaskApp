{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Todo from './Todo';\nimport { TodosContext } from './contexts/todos.context';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n  if (todos.length) return __jsx(Paper, null, __jsx(List, null, todos.map((todo, i) => // To add a key to a fragment, we have to use the long-hand version\n  __jsx(React.Fragment, {\n    key: i\n  }, __jsx(Todo, _extends({}, todo, {\n    key: todo.id\n  })), i < todos.length - 1 && __jsx(Divider, null)))));\n  return null;\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","Paper","List","Divider","Todo","TodosContext","TodoList","todos","length","map","todo","i","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,KAAK,GAAGP,UAAU,CAACK,YAAD,CAAxB;AACA,MAAIE,KAAK,CAACC,MAAV,EACE,OACE,MAAC,KAAD,QACE,MAAC,IAAD,QACGD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT;AACA,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA;AAArB,KACE,MAAC,IAAD,eAAUD,IAAV;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACE;AAA1B,KADF,EAEGD,CAAC,GAAGJ,KAAK,CAACC,MAAN,GAAe,CAAnB,IAAwB,MAAC,OAAD,OAF3B,CAFD,CADH,CADF,CADF;AAaF,SAAO,IAAP;AACD;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Todo from './Todo';\nimport { TodosContext } from './contexts/todos.context';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n  if (todos.length)\n    return (\n      <Paper>\n        <List>\n          {todos.map((todo, i) => (\n            // To add a key to a fragment, we have to use the long-hand version\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo.id} />\n              {i < todos.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}