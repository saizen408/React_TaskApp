{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport Form from '../components/Form';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps() {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios.get(proxyUrl + targetUrl, {\n        headers: {\n          Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n\n        }\n      }).then(response => {\n        console.log(response.data); // val = response.data;\n\n        return {\n          response\n        };\n      }).catch(e => {\n        console.log(e);\n      });\n    } catch (e) {\n      console.error('Error:', e); // val = defaultVal;\n    } //   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n    //   const { data } = res; // const data = res.data\n    //   return { posts: data }; // res.data is now saved to props.posts\n\n  }\n\n  render() {\n    // const { posts } = this.props;\n    return __jsx(\"div\", null, __jsx(Form, null));\n  }\n\n} // const Index = ({ posts }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// Index.getInitialProps = async () => {\n//   // https://jsonplaceholder.typicode.com/posts\n//   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n//   const { data } = res; // const data = res.data\n//   return {\n//     posts: data\n//   };\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/pages/index.js"],"names":["Link","axios","React","Component","Form","Index","constructor","props","getInitialProps","proxyUrl","targetUrl","get","headers","Authorization","token","then","response","console","log","data","catch","e","error","render"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAED,eAAaC,eAAb,GAA+B;AAC7B,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,SAAS,GAAG,gDAAlB;;AAEA,QAAI;AACFT,MAAAA,KAAK,CACFU,GADH,CACOF,QAAQ,GAAGC,SADlB,EAC6B;AACzBE,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYC,KAAK,CAACA,KAD1B,CACgC;;AADhC;AADgB,OAD7B,EAMGC,IANH,CAMQC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADgB,CAEhB;;AACA,eAAO;AAAEH,UAAAA;AAAF,SAAP;AACD,OAVH,EAWGI,KAXH,CAWSC,CAAC,IAAI;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD,OAbH;AAcD,KAfD,CAeE,OAAOA,CAAP,EAAU;AACVJ,MAAAA,OAAO,CAACK,KAAR,CAAc,QAAd,EAAwBD,CAAxB,EADU,CAEV;AACD,KAtB4B,CAuB7B;AACA;AACA;;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP;AACA,WACE,mBACE,MAAC,IAAD,OADF,CADF;AAeD;;AAlD2B,C,CAqD9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,eAAelB,KAAf","sourcesContent":["import Link from 'next/link';\nimport axios from 'axios';\n\nimport React, { Component } from 'react';\nimport Form from '../components/Form';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static async getInitialProps() {\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios\n        .get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n          }\n        })\n        .then(response => {\n          console.log(response.data);\n          // val = response.data;\n          return { response };\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } catch (e) {\n      console.error('Error:', e);\n      // val = defaultVal;\n    }\n    //   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n    //   const { data } = res; // const data = res.data\n    //   return { posts: data }; // res.data is now saved to props.posts\n  }\n\n  render() {\n    // const { posts } = this.props;\n    return (\n      <div>\n        <Form />\n        {/* <h1>Our Index Page!!!</h1>\n        <ul>\n          {posts.map(post => (\n            <li key={post.id}>\n              <Link href={`/post?id=${post.id}`} as={`/p/${post.id}`}>\n                <a>{post.title}</a>\n              </Link>\n            </li>\n          ))}\n        </ul> */}\n      </div>\n    );\n  }\n}\n\n// const Index = ({ posts }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// Index.getInitialProps = async () => {\n//   // https://jsonplaceholder.typicode.com/posts\n//   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n//   const { data } = res; // const data = res.data\n\n//   return {\n//     posts: data\n//   };\n// };\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}