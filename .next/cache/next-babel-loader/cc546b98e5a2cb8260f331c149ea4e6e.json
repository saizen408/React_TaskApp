{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Todo from \"./Todo\";\nimport { TodosContext } from \"./contexts/todos.context\";\nimport { handleAuthSSR } from \"../components/handleAuthSSR\";\n\nfunction TodoList(props) {\n  const todos = useContext(TodosContext);\n  useEffect(async ctx => {\n    const res = await handleAuthSSR(ctx);\n    const {\n      data\n    } = res; // const data = res.data\n\n    return {\n      posts: data\n    };\n  }, [todos, state]);\n  console.log(props);\n  if (props.posts.length) return __jsx(Paper, null, __jsx(List, null, props.posts.map((todo, i) => // To add a key to a fragment, we have to use the long-hand version\n  __jsx(React.Fragment, {\n    key: i\n  }, __jsx(Todo, _extends({}, todo, {\n    key: todo._id\n  })), i < props.posts.length - 1 && __jsx(Divider, null)))));\n  return null;\n} // export default TodoList;\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n// $.ajax({\n//     url: proxyUrl + targetUrl,\n//     type: 'GET',\n//     dataType: 'json',\n//     beforeSend: setHeader\n//   }).then(addTasks);\n//   function setHeader(xhr) {\n//     xhr.setRequestHeader('Authorization', 'Bearer ' + userInfo.token);\n//   }\n// const Index = ({ todos }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","useEffect","Paper","List","Divider","Todo","TodosContext","handleAuthSSR","TodoList","props","todos","ctx","res","data","posts","state","console","log","length","map","todo","i","_id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,KAAK,GAAGV,UAAU,CAACM,YAAD,CAAxB;AAEAL,EAAAA,SAAS,CACP,MAAMU,GAAN,IAAa;AACX,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACI,GAAD,CAA/B;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAWD,GAAjB,CAFW,CAEW;;AAEtB,WAAO;AACLE,MAAAA,KAAK,EAAED;AADF,KAAP;AAGD,GARM,EASP,CAACH,KAAD,EAAQK,KAAR,CATO,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,MAAIA,KAAK,CAACK,KAAN,CAAYI,MAAhB,EACE,OACE,MAAC,KAAD,QACE,MAAC,IAAD,QACGT,KAAK,CAACK,KAAN,CAAYK,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KACf;AACA,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA;AAArB,KACE,MAAC,IAAD,eAAUD,IAAV;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACE;AAA1B,KADF,EAEGD,CAAC,GAAGZ,KAAK,CAACK,KAAN,CAAYI,MAAZ,GAAqB,CAAzB,IAA8B,MAAC,OAAD,OAFjC,CAFD,CADH,CADF,CADF;AAaF,SAAO,IAAP;AACD,C,CAED;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeV,QAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Todo from \"./Todo\";\nimport { TodosContext } from \"./contexts/todos.context\";\nimport { handleAuthSSR } from \"../components/handleAuthSSR\";\n\nfunction TodoList(props) {\n  const todos = useContext(TodosContext);\n\n  useEffect(\n    async ctx => {\n      const res = await handleAuthSSR(ctx);\n      const { data } = res; // const data = res.data\n\n      return {\n        posts: data\n      };\n    },\n    [todos, state]\n  );\n\n  console.log(props);\n  if (props.posts.length)\n    return (\n      <Paper>\n        <List>\n          {props.posts.map((todo, i) => (\n            // To add a key to a fragment, we have to use the long-hand version\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n}\n\n// export default TodoList;\n\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n// $.ajax({\n//     url: proxyUrl + targetUrl,\n//     type: 'GET',\n//     dataType: 'json',\n//     beforeSend: setHeader\n//   }).then(addTasks);\n\n//   function setHeader(xhr) {\n//     xhr.setRequestHeader('Authorization', 'Bearer ' + userInfo.token);\n//   }\n\n// const Index = ({ todos }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}