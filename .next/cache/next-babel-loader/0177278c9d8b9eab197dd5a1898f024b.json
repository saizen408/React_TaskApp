{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport PageContent from '../components/PageContent';\nimport { ThemeProvider } from '../components/contexts/ThemeContext';\nimport { LanguageProvider } from '../components/contexts/LanguageContext';\nimport { DispatchContext } from './contexts/todos.context';\nimport Navbar from '../components/Navbar';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(\"div\", null, __jsx(ThemeProvider, null, __jsx(LanguageProvider, null, __jsx(PageContent, null, __jsx(DispatchContext.Provider, {\n      value: dispatch\n    }, __jsx(Navbar, null), __jsx(Component, pageProps))))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/pages/_app.js"],"names":["React","App","PageContent","ThemeProvider","LanguageProvider","DispatchContext","Navbar","MyApp","render","Component","pageProps","props","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,mBACE,MAAC,aAAD,QACE,MAAC,gBAAD,QACE,MAAC,WAAD,QACE,MAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAEC;AAAjC,OACE,MAAC,MAAD,OADF,EAEE,MAAC,SAAD,EAAeF,SAAf,CAFF,CADF,CADF,CADF,CADF,CADF;AAcD;;AA7BqB;;AAgCxB,eAAeH,KAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport PageContent from '../components/PageContent';\nimport { ThemeProvider } from '../components/contexts/ThemeContext';\nimport { LanguageProvider } from '../components/contexts/LanguageContext';\nimport { DispatchContext } from './contexts/todos.context';\n\nimport Navbar from '../components/Navbar';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    return (\n      <div>\n        <ThemeProvider>\n          <LanguageProvider>\n            <PageContent>\n              <DispatchContext.Provider value={dispatch}>\n                <Navbar />\n                <Component {...pageProps} />\n              </DispatchContext.Provider>\n            </PageContent>\n          </LanguageProvider>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}