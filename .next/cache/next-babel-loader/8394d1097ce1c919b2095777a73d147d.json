{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nvar cookies = new Cookies();\nvar token = cookies.get(\"token\");\n\nvar todoReducer = function todoReducer(state, action) {\n  var addTasks, proxyUrl, targetUrl, res;\n  return _regeneratorRuntime.async(function todoReducer$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"state before switch/case executes: \", state);\n          _context2.t0 = action.type;\n          _context2.next = _context2.t0 === \"ADD\" ? 4 : _context2.t0 === \"REMOVE\" ? 5 : 20;\n          break;\n\n        case 4:\n          addTasks = function addTasks() {\n            var description, body, proxyUrl, targetUrl, res, data;\n            return _regeneratorRuntime.async(function addTasks$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    description = action.task;\n                    body = {\n                      description: description\n                    };\n                    _context.prev = 2;\n                    proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n                    targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n                    _context.next = 7;\n                    return _regeneratorRuntime.awrap(axios({\n                      url: proxyUrl + targetUrl,\n                      method: \"post\",\n                      data: body,\n                      headers: {\n                        Authorization: \"Bearer \" + token\n                      }\n                    }));\n\n                  case 7:\n                    res = _context.sent;\n                    data = res.data;\n                    return _context.abrupt(\"return\", [].concat(_toConsumableArray(state), [{\n                      _id: data._id,\n                      description: data.description,\n                      completed: false,\n                      updatedAt: data.updatedAt\n                    }]));\n\n                  case 12:\n                    _context.prev = 12;\n                    _context.t0 = _context[\"catch\"](2);\n                    console.log(_context.t0);\n\n                  case 15:\n                    addTasks();\n\n                  case 16:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[2, 12]]);\n          };\n\n        case 5:\n          console.log(\"remove clicked!\");\n          _context2.prev = 6;\n          proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          _context2.next = 11;\n          return _regeneratorRuntime.awrap(axios({\n            url: proxyUrl + targetUrl,\n            method: \"delete\",\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 11:\n          res = _context2.sent;\n          Router.push(\"/TodoAppPage\");\n          console.log(\"removing task from state: \", state); // return state.filter(todo => todo._id !== action._id);\n\n          return _context2.abrupt(\"break\", 21);\n\n        case 17:\n          _context2.prev = 17;\n          _context2.t1 = _context2[\"catch\"](6);\n          console.log(_context2.t1);\n\n        case 20:\n          return _context2.abrupt(\"return\", state);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[6, 17]]);\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Router","Cookies","cookies","token","get","todoReducer","state","action","console","log","type","addTasks","description","task","body","proxyUrl","targetUrl","url","method","data","headers","Authorization","res","_id","completed","updatedAt","id","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,IAAME,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,KAAP,EAAcC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,KAAnD;AADkB,yBAEVC,MAAM,CAACG,IAFG;AAAA,4CAGX,KAHW,wBAmCX,QAnCW;AAAA;;AAAA;AAIRC,UAAAA,QAJQ,GAIG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,oBAAAA,WADS,GACKL,MAAM,CAACM,IADZ;AAETC,oBAAAA,IAFS,GAEF;AAAEF,sBAAAA,WAAW,EAAXA;AAAF,qBAFE;AAAA;AAIPG,oBAAAA,QAJO,GAII,sCAJJ;AAKPC,oBAAAA,SALO,GAKK,gDALL;AAAA;AAAA,qDAMKjB,KAAK,CAAC;AACtBkB,sBAAAA,GAAG,EAAEF,QAAQ,GAAGC,SADM;AAEtBE,sBAAAA,MAAM,EAAE,MAFc;AAGtBC,sBAAAA,IAAI,EAAEL,IAHgB;AAItBM,sBAAAA,OAAO,EAAE;AACPC,wBAAAA,aAAa,EAAE,YAAYlB;AADpB;AAJa,qBAAD,CANV;;AAAA;AAMPmB,oBAAAA,GANO;AAcPH,oBAAAA,IAdO,GAcAG,GAAG,CAACH,IAdJ;AAAA,kFAgBRb,KAhBQ,IAiBX;AACEiB,sBAAAA,GAAG,EAAEJ,IAAI,CAACI,GADZ;AAEEX,sBAAAA,WAAW,EAAEO,IAAI,CAACP,WAFpB;AAGEY,sBAAAA,SAAS,EAAE,KAHb;AAIEC,sBAAAA,SAAS,EAAEN,IAAI,CAACM;AAJlB,qBAjBW;;AAAA;AAAA;AAAA;AA0BbjB,oBAAAA,OAAO,CAACC,GAAR;;AA1Ba;AA4BfE,oBAAAA,QAAQ;;AA5BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJH;;AAAA;AAoCdH,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AApCc;AAsCNM,UAAAA,QAtCM,GAsCK,sCAtCL;AAuCNC,UAAAA,SAvCM,4DAuCwDT,MAAM,CAACmB,EAvC/D;AAAA;AAAA,2CAwCM3B,KAAK,CAAC;AACtBkB,YAAAA,GAAG,EAAEF,QAAQ,GAAGC,SADM;AAEtBE,YAAAA,MAAM,EAAE,QAFc;AAGtBE,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE,YAAYlB;AADpB;AAHa,WAAD,CAxCX;;AAAA;AAwCNmB,UAAAA,GAxCM;AA+CZtB,UAAAA,MAAM,CAAC2B,IAAP,CAAY,cAAZ;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,KAA1C,EAhDY,CAiDZ;;AAjDY;;AAAA;AAAA;AAAA;AAqDZE,UAAAA,OAAO,CAACC,GAAR;;AArDY;AAAA,4CAiGPH,KAjGO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAqGA,eAAeD,WAAf","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const addTasks = async () => {\n        const description = action.task;\n        const body = { description };\n        try {\n          const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n          const res = await axios({\n            url: proxyUrl + targetUrl,\n            method: \"post\",\n            data: body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          });\n          const data = res.data;\n          return [\n            ...state,\n            {\n              _id: data._id,\n              description: data.description,\n              completed: false,\n              updatedAt: data.updatedAt\n            }\n          ];\n          // Router.push(\"/TodoAppPage\");\n        } catch (e) {\n          console.log(e);\n        }\n        addTasks();\n      };\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        console.log(\"removing task from state: \", state);\n        // return state.filter(todo => todo._id !== action._id);\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    // case \"TOGGLE\":\n    //   console.log(\"toggle clicked!\");\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const isDone = !action.completed;\n    //     const updateData = { completed: isDone };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: updateData,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    // case \"EDIT\":\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const description = action.newTask;\n    //     const body = { description };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: body,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}