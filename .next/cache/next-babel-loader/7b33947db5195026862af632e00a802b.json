{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { useReducer, useEffect } from \"react\";\n\nfunction useDBReducer(key, defaultVal, todoReducer) {\n  var _useReducer = useReducer(todoReducer, defaultVal, function () {\n    var val;\n\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || \"[]\");\n      console.log(\"successfully stored val: \", val);\n    } catch (e) {\n      val = defaultVal;\n    }\n\n    return val;\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    window.localStorage.setItem(key, _JSON$stringify(state)); //use for post request (i.e update/delete/add tasks)\n\n    console.log(\"state changed! setting local storage: \", state);\n  }, [state]);\n  return [state, dispatch];\n}\n\nexport { useDBReducer };","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","useDBReducer","key","defaultVal","todoReducer","val","JSON","parse","window","localStorage","getItem","console","log","e","state","dispatch","setItem"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,UAA3B,EAAuCC,WAAvC,EAAoD;AAAA,oBACxBL,UAAU,CAACK,WAAD,EAAcD,UAAd,EAA0B,YAAM;AAClE,QAAIE,GAAJ;;AACA,QAAI;AACFA,MAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,GAA5B,KAAoC,IAA/C,CAAN;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCP,GAAzC;AACD,KAHD,CAGE,OAAOQ,CAAP,EAAU;AACVR,MAAAA,GAAG,GAAGF,UAAN;AACD;;AACD,WAAOE,GAAP;AACD,GATmC,CADc;AAAA,MAC3CS,KAD2C;AAAA,MACpCC,QADoC;;AAYlDf,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4Bd,GAA5B,EAAiC,gBAAeY,KAAf,CAAjC,EADc,CAC2C;;AACzDH,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDE,KAAtD;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAASd,YAAT","sourcesContent":["import { useReducer, useEffect } from \"react\";\n\nfunction useDBReducer(key, defaultVal, todoReducer) {\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || \"[]\");\n      console.log(\"successfully stored val: \", val);\n    } catch (e) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n    console.log(\"state changed! setting local storage: \", state);\n  }, [state]);\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n"]},"metadata":{},"sourceType":"module"}