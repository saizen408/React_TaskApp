{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport Router from 'next/router';\nimport useInputState from '../hooks/useInputState';\n\nconst authReducer = async (state, action) => {\n  const [emailVal, handleEmailChange, emailReset] = useInputState('');\n  const [passVal, handlePassChange, passReset] = useInputState('');\n\n  switch (action.type) {\n    case 'LOGIN':\n      // setLoader(true);\n      // getToken();\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n        const response = await fetch(proxyUrl + url, {\n          method: 'POST',\n          body: _JSON$stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const userInfo = await response.json();\n        var token = userInfo.token;\n        state.token = token;\n        Router.push('/TodoAppPage'); //   setLoader(false);\n        // this.setState(() => ({ loading: false, token: userInfo.token }));\n        // Router.push('/TodoAppPage');\n      } catch (error) {\n        console.error('Error:', error);\n        emailReset();\n        passReset();\n        Router.push('/'); //   setLoader(false);\n        // this.setState({ email: '', password: '' });\n      }\n\n      return state;\n    //     return [...state, { id: uuid(), task: action.task, completed: false }];\n    //   case 'LOGOUT':\n    //     return state.filter(todo => todo.id !== action.id);\n    //   case 'TOGGLE':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n    //     );\n    //   case 'EDIT':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, task: action.newTask } : todo\n    //     );\n\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\n\nexport default authReducer; // {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/auth.reducer.js"],"names":["Router","useInputState","authReducer","state","action","emailVal","handleEmailChange","emailReset","passVal","handlePassChange","passReset","type","data","email","password","proxyUrl","url","response","fetch","method","body","headers","userInfo","json","token","push","error","console","log"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC3C,QAAM,CAACC,QAAD,EAAWC,iBAAX,EAA8BC,UAA9B,IAA4CN,aAAa,CAAC,EAAD,CAA/D;AACA,QAAM,CAACO,OAAD,EAAUC,gBAAV,EAA4BC,SAA5B,IAAyCT,aAAa,CAAC,EAAD,CAA5D;;AAEA,UAAQG,MAAM,CAACO,IAAf;AACE,SAAK,OAAL;AACE;AACA;AAEA,UAAIC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAET,MAAM,CAACS,KADL;AAETC,QAAAA,QAAQ,EAAEV,MAAM,CAACU;AAFR,OAAX;;AAIA,UAAI;AACF,cAAMC,QAAQ,GAAG,sCAAjB;AACA,cAAMC,GAAG,GAAG,sDAAZ;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAGC,GAAZ,EAAiB;AAC3CG,UAAAA,MAAM,EAAE,MADmC;AAE3CC,UAAAA,IAAI,EAAE,gBAAeR,IAAf,CAFqC;AAG3CS,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAHkC,SAAjB,CAA5B;AAQA,cAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAvB;AACA,YAAIC,KAAK,GAAGF,QAAQ,CAACE,KAArB;AACArB,QAAAA,KAAK,CAACqB,KAAN,GAAcA,KAAd;AACAxB,QAAAA,MAAM,CAACyB,IAAP,CAAY,cAAZ,EAdE,CAeF;AACA;AAEA;AACD,OAnBD,CAmBE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAnB,QAAAA,UAAU;AACVG,QAAAA,SAAS;AACTV,QAAAA,MAAM,CAACyB,IAAP,CAAY,GAAZ,EAJc,CAKd;AAEA;AACD;;AACD,aAAOtB,KAAP;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACEwB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,aAAOzB,KAAP;AApDJ;AAsDD,CA1DD;;AA2DA,eAAeD,WAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import Router from 'next/router';\nimport useInputState from '../hooks/useInputState';\n\nconst authReducer = async (state, action) => {\n  const [emailVal, handleEmailChange, emailReset] = useInputState('');\n  const [passVal, handlePassChange, passReset] = useInputState('');\n\n  switch (action.type) {\n    case 'LOGIN':\n      // setLoader(true);\n      // getToken();\n\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n        const response = await fetch(proxyUrl + url, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const userInfo = await response.json();\n        var token = userInfo.token;\n        state.token = token;\n        Router.push('/TodoAppPage');\n        //   setLoader(false);\n        // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n        // Router.push('/TodoAppPage');\n      } catch (error) {\n        console.error('Error:', error);\n        emailReset();\n        passReset();\n        Router.push('/');\n        //   setLoader(false);\n\n        // this.setState({ email: '', password: '' });\n      }\n      return state;\n\n    //     return [...state, { id: uuid(), task: action.task, completed: false }];\n    //   case 'LOGOUT':\n    //     return state.filter(todo => todo.id !== action.id);\n    //   case 'TOGGLE':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n    //     );\n    //   case 'EDIT':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, task: action.newTask } : todo\n    //     );\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\nexport default authReducer;\n\n// {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}\n"]},"metadata":{},"sourceType":"module"}