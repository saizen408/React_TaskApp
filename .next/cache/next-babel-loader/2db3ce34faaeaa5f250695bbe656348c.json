{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nconst words = {\n  en: {\n    addTodo: \"Add New Todo\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    addTodo: \"Ajouter un nouveau Todo\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    addTodo: \"Añadir nuevo Todo\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    addTodo: \"Neuen Todo hinzufügen\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n  ja: {\n    addTodo: \"新しいTodoを追加\",\n    lastUpdated: \"最新の更新: \"\n  }\n};\n\nfunction TodoForm(props) {\n  const {\n    classes\n  } = props;\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const {\n    language\n  } = useContext(LanguageContext);\n  const {\n    addTodo\n  } = words[language];\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  return (// <Paper elevation={3} style={{ margin: \"1rem 0\", padding: \"0\" }}>\n    __jsx(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleAddClick();\n        dispatch({\n          type: \"ADD\",\n          task: value\n        });\n        reset();\n        Router.push(\"/TodoAppPage\");\n      },\n      style: {\n        height: \"70px\"\n      }\n    }, __jsx(TextField, {\n      id: \"outlined-basic\",\n      variant: \"outlined\",\n      value: value,\n      onChange: handleChange,\n      margin: \"normal\",\n      label: addTodo,\n      fullWidth: true\n    })) // </Paper>\n\n  );\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoForm.js"],"names":["React","useContext","Router","TextField","Paper","useInputState","DispatchContext","LanguageContext","SnackbarProvider","useSnackbar","words","en","addTodo","lastUpdated","fr","es","de","ja","TodoForm","props","classes","value","handleChange","reset","dispatch","language","enqueueSnackbar","closeSnackbar","handleAddClick","message","variant","e","preventDefault","type","task","push","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFC,IAAAA,OAAO,EAAE,cADP;AAEFC,IAAAA,WAAW,EAAE;AAFX,GADQ;AAKZC,EAAAA,EAAE,EAAE;AACFF,IAAAA,OAAO,EAAE,yBADP;AAEFC,IAAAA,WAAW,EAAE;AAFX,GALQ;AASZE,EAAAA,EAAE,EAAE;AACFH,IAAAA,OAAO,EAAE,mBADP;AAEFC,IAAAA,WAAW,EAAE;AAFX,GATQ;AAaZG,EAAAA,EAAE,EAAE;AACFJ,IAAAA,OAAO,EAAE,uBADP;AAEFC,IAAAA,WAAW,EAAE;AAFX,GAbQ;AAkBZI,EAAAA,EAAE,EAAE;AAAEL,IAAAA,OAAO,EAAE,YAAX;AAAyBC,IAAAA,WAAW,EAAE;AAAtC;AAlBQ,CAAd;;AAqBA,SAASK,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM,CAACE,KAAD,EAAQC,YAAR,EAAsBC,KAAtB,IAA+BlB,aAAa,CAAC,EAAD,CAAlD;AACA,QAAMmB,QAAQ,GAAGvB,UAAU,CAACK,eAAD,CAA3B;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAexB,UAAU,CAACM,eAAD,CAA/B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAcF,KAAK,CAACe,QAAD,CAAzB;AACA,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAqClB,WAAW,EAAtD;;AAEA,QAAMmB,cAAc,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAI,cAAaR,KAAM,GAApC;AACAK,IAAAA,eAAe,CAACG,OAAD,EAAU;AACvBC,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GALD;;AAOA,SACE;AACA;AACE,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAJ,QAAAA,cAAc;AACdJ,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,IAAI,EAAEb;AAArB,SAAD,CAAR;AACAE,QAAAA,KAAK;AACLrB,QAAAA,MAAM,CAACiC,IAAP,CAAY,cAAZ;AACD,OAPH;AAQE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AART,OAUE,MAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAEf,KAHT;AAIE,MAAA,QAAQ,EAAEC,YAJZ;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,KAAK,EAAEV,OANT;AAOE,MAAA,SAAS;AAPX,MAVF,CAFF,CAsBE;;AAtBF;AAwBD;;AAED,eAAeM,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nconst words = {\n  en: {\n    addTodo: \"Add New Todo\",\n    lastUpdated: \"Last Update: \"\n  },\n  fr: {\n    addTodo: \"Ajouter un nouveau Todo\",\n    lastUpdated: \"Dernières mises à jour: \"\n  },\n  es: {\n    addTodo: \"Añadir nuevo Todo\",\n    lastUpdated: \"Últimas actualizaciones: \"\n  },\n  de: {\n    addTodo: \"Neuen Todo hinzufügen\",\n    lastUpdated: \"Letzte Aktualisierung: \"\n  },\n\n  ja: { addTodo: \"新しいTodoを追加\", lastUpdated: \"最新の更新: \" }\n};\n\nfunction TodoForm(props) {\n  const { classes } = props;\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const { language } = useContext(LanguageContext);\n  const { addTodo } = words[language];\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  return (\n    // <Paper elevation={3} style={{ margin: \"1rem 0\", padding: \"0\" }}>\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        handleAddClick();\n        dispatch({ type: \"ADD\", task: value });\n        reset();\n        Router.push(\"/TodoAppPage\");\n      }}\n      style={{ height: \"70px\" }}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        value={value}\n        onChange={handleChange}\n        margin=\"normal\"\n        label={addTodo}\n        fullWidth\n      />\n    </form>\n    // </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}