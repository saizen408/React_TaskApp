{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nvar cookies = new Cookies();\nvar token = cookies.get(\"token\");\n\nvar todoReducer = function todoReducer(state, action) {\n  var description, body, proxyUrl, targetUrl, res, _proxyUrl, _targetUrl, _res, _proxyUrl2, _targetUrl2, isDone, updateData, _res2, _proxyUrl3, _targetUrl3, _description, _body, _res3;\n\n  return _regeneratorRuntime.async(function todoReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"state before switch/case executes: \", state);\n          _context.t0 = action.type;\n          _context.next = _context.t0 === \"ADD\" ? 4 : _context.t0 === \"REMOVE\" ? 19 : _context.t0 === \"TOGGLE\" ? 33 : _context.t0 === \"EDIT\" ? 49 : 64;\n          break;\n\n        case 4:\n          description = action.task;\n          body = {\n            description: description\n          };\n          _context.prev = 6;\n          proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(axios({\n            url: proxyUrl + targetUrl,\n            method: \"post\",\n            data: body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 11:\n          res = _context.sent;\n          Router.push(\"/TodoAppPage\");\n          return _context.abrupt(\"break\", 65);\n\n        case 16:\n          _context.prev = 16;\n          _context.t1 = _context[\"catch\"](6);\n          console.log(_context.t1);\n\n        case 19:\n          console.log(\"remove clicked!\");\n          _context.prev = 20;\n          _proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          _context.next = 25;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl + _targetUrl,\n            method: \"delete\",\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 25:\n          _res = _context.sent;\n          Router.push(\"/TodoAppPage\");\n          return _context.abrupt(\"break\", 65);\n\n        case 30:\n          _context.prev = 30;\n          _context.t2 = _context[\"catch\"](20);\n          console.log(_context.t2);\n\n        case 33:\n          console.log(\"toggle clicked!\");\n          _context.prev = 34;\n          _proxyUrl2 = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl2 = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          isDone = !action.completed;\n          updateData = {\n            completed: isDone\n          };\n          _context.next = 41;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl2 + _targetUrl2,\n            method: \"patch\",\n            data: updateData,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 41:\n          _res2 = _context.sent;\n          Router.push(\"/TodoAppPage\");\n          return _context.abrupt(\"break\", 65);\n\n        case 46:\n          _context.prev = 46;\n          _context.t3 = _context[\"catch\"](34);\n          console.log(_context.t3);\n\n        case 49:\n          _context.prev = 49;\n          _proxyUrl3 = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl3 = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          _description = action.newTask;\n          _body = {\n            description: _description\n          };\n          _context.next = 56;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl3 + _targetUrl3,\n            method: \"patch\",\n            data: _body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 56:\n          _res3 = _context.sent;\n          Router.push(\"/TodoAppPage\");\n          return _context.abrupt(\"break\", 65);\n\n        case 61:\n          _context.prev = 61;\n          _context.t4 = _context[\"catch\"](49);\n          console.log(_context.t4);\n\n        case 64:\n          return _context.abrupt(\"return\", state);\n\n        case 65:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 16], [20, 30], [34, 46], [49, 61]]);\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Router","Cookies","cookies","token","get","todoReducer","state","action","console","log","type","description","task","body","proxyUrl","targetUrl","url","method","data","headers","Authorization","res","push","id","isDone","completed","updateData","newTask"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = { description };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    case \"TOGGLE\":\n      console.log(\"toggle clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = { completed: isDone };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = { description };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}