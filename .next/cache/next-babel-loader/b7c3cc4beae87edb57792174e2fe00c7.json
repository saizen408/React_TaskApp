{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport words from \"./Form\";\n\nfunction TodoForm(props) {\n  const {\n    classes\n  } = props;\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const {\n    language\n  } = useContext(LanguageContext);\n  const {\n    password\n  } = words[language];\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  return __jsx(Paper, {\n    elevation: 3,\n    style: {\n      margin: \"1rem 0\",\n      padding: \"0\"\n    }\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      handleAddClick();\n      dispatch({\n        type: \"ADD\",\n        task: value\n      });\n      reset();\n      Router.push(\"/TodoAppPage\");\n    },\n    style: {\n      height: \"70px\"\n    }\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    value: value,\n    onChange: handleChange,\n    margin: \"normal\",\n    label: password,\n    fullWidth: true\n  })));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoForm.js"],"names":["React","useContext","Router","TextField","Paper","useInputState","DispatchContext","LanguageContext","SnackbarProvider","useSnackbar","words","TodoForm","props","classes","value","handleChange","reset","dispatch","language","password","enqueueSnackbar","closeSnackbar","handleAddClick","message","variant","margin","padding","e","preventDefault","type","task","push","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;AACA,OAAOC,KAAP,MAAkB,QAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM,CAACE,KAAD,EAAQC,YAAR,EAAsBC,KAAtB,IAA+BX,aAAa,CAAC,EAAD,CAAlD;AACA,QAAMY,QAAQ,GAAGhB,UAAU,CAACK,eAAD,CAA3B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAejB,UAAU,CAACM,eAAD,CAA/B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAeT,KAAK,CAACQ,QAAD,CAA1B;AACA,QAAM;AAAEE,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAqCZ,WAAW,EAAtD;;AAEA,QAAMa,cAAc,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAI,cAAaT,KAAM,GAApC;AACAM,IAAAA,eAAe,CAACG,OAAD,EAAU;AACvBC,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GALD;;AAOA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,OAAO,EAAE;AAA7B;AAA5B,KACE;AACE,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAN,MAAAA,cAAc;AACdL,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,IAAI,EAAEhB;AAArB,OAAD,CAAR;AACAE,MAAAA,KAAK;AACLd,MAAAA,MAAM,CAAC6B,IAAP,CAAY,cAAZ;AACD,KAPH;AAQE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AART,KAUE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAElB,KAHT;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,KAAK,EAAEI,QANT;AAOE,IAAA,SAAS;AAPX,IAVF,CADF,CADF;AAwBD;;AAED,eAAeR,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport words from \"./Form\";\n\nfunction TodoForm(props) {\n  const { classes } = props;\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const { language } = useContext(LanguageContext);\n  const { password } = words[language];\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  return (\n    <Paper elevation={3} style={{ margin: \"1rem 0\", padding: \"0\" }}>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          handleAddClick();\n          dispatch({ type: \"ADD\", task: value });\n          reset();\n          Router.push(\"/TodoAppPage\");\n        }}\n        style={{ height: \"70px\" }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          value={value}\n          onChange={handleChange}\n          margin=\"normal\"\n          label={password}\n          fullWidth\n        />\n      </form>\n    </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}