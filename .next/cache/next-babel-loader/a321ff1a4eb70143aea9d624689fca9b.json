{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createContext } from \"react\";\nexport const SortedContext = createContext();\nexport class SortedProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: \"\",\n      todo: \"\",\n      completed: false,\n      type: \"\",\n      updateState: false\n    };\n    this.resetSort = this.resetSort.bind(this);\n  }\n\n  resetSort(type, _id, todo, completed = false) {\n    this.setState({\n      _id: _id,\n      todo: todo,\n      completed: completed,\n      type: type,\n      updateState: true\n    });\n  }\n\n  render() {\n    return __jsx(SortedContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        resetSort: this.resetSort\n      })\n    }, this.props.children);\n  }\n\n}\nexport const withSortedContext = Component => props => __jsx(SortedContext.Consumer, null, value => __jsx(Component, _extends({\n  sortedContext: value\n}, props)));","map":null,"metadata":{},"sourceType":"module"}