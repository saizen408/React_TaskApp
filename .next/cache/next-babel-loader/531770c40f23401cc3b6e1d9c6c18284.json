{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext, TodosContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Container } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { SortedContext } from \"./contexts/SortedContext\";\nimport { words } from \"./words\";\nimport { useSnackbar } from \"notistack\";\nimport theme2 from \"./styles/theme2\";\nimport useStyles from \"./styles/useStyles\";\n\nfunction TodoForm(props) {\n  var _useInputState, _useInputState2, value, handleChange, reset, dispatch, todoId, _useContext, language, _useContext2, resetSort, addTodo, _useSnackbar, enqueueSnackbar, handleAddClick, classes;\n\n  return _regeneratorRuntime.async(function TodoForm$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _useInputState = useInputState(\"\"), _useInputState2 = _slicedToArray(_useInputState, 3), value = _useInputState2[0], handleChange = _useInputState2[1], reset = _useInputState2[2];\n          dispatch = useContext(DispatchContext);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(useContext(TodosContext));\n\n        case 4:\n          todoId = _context.sent;\n          console.log(\"todos context:\", todoId);\n          _useContext = useContext(LanguageContext), language = _useContext.language;\n          _useContext2 = useContext(SortedContext), resetSort = _useContext2.resetSort;\n          addTodo = words[language].addTodo;\n          _useSnackbar = useSnackbar(), enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n          handleAddClick = function handleAddClick() {\n            var message = \"New Task: \\\"\".concat(value, \"\\\"\");\n            enqueueSnackbar(message, {\n              variant: \"success\"\n            });\n          };\n\n          classes = useStyles();\n          return _context.abrupt(\"return\", __jsx(Paper, {\n            elevation: 3,\n            style: {\n              margin: \"1rem 0\",\n              padding: \"0\"\n            }\n          }, __jsx(Container, {\n            disableGutters: true\n          }, __jsx(\"form\", {\n            className: classes.root,\n            onSubmit: function onSubmit(e) {\n              e.preventDefault();\n              handleAddClick();\n              resetSort({\n                type: \"ADD\",\n                todo: value,\n                id: todoId\n              });\n              dispatch({\n                type: \"ADD\",\n                task: value\n              });\n              reset();\n            },\n            style: {\n              height: \"65px\"\n            }\n          }, __jsx(ThemeProvider, {\n            theme: theme2\n          }, __jsx(TextField, {\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            value: value,\n            onChange: handleChange,\n            margin: \"normal\",\n            label: addTodo,\n            fullWidth: true\n          }))))));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoForm.js"],"names":["React","useContext","TextField","Paper","useInputState","DispatchContext","TodosContext","LanguageContext","Container","ThemeProvider","SortedContext","words","useSnackbar","theme2","useStyles","TodoForm","props","value","handleChange","reset","dispatch","todoId","console","log","language","resetSort","addTodo","enqueueSnackbar","handleAddClick","message","variant","classes","margin","padding","root","e","preventDefault","type","todo","id","task","height"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext, TodosContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Container } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { SortedContext } from \"./contexts/SortedContext\";\nimport { words } from \"./words\";\nimport { useSnackbar } from \"notistack\";\nimport theme2 from \"./styles/theme2\";\nimport useStyles from \"./styles/useStyles\";\n\nasync function TodoForm(props) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  const todoId = await useContext(TodosContext);\n  console.log(\"todos context:\", todoId);\n\n  const { language } = useContext(LanguageContext);\n  const { resetSort } = useContext(SortedContext);\n  const { addTodo } = words[language];\n  const { enqueueSnackbar } = useSnackbar();\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} style={{ margin: \"1rem 0\", padding: \"0\" }}>\n      <Container disableGutters>\n        <form\n          className={classes.root}\n          onSubmit={e => {\n            e.preventDefault();\n            handleAddClick();\n            resetSort({ type: \"ADD\", todo: value, id: todoId });\n            dispatch({ type: \"ADD\", task: value });\n            reset();\n          }}\n          style={{\n            height: \"65px\"\n          }}\n        >\n          <ThemeProvider theme={theme2}>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={value}\n              onChange={handleChange}\n              margin=\"normal\"\n              label={addTodo}\n              fullWidth\n            />\n          </ThemeProvider>\n        </form>\n      </Container>\n    </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}