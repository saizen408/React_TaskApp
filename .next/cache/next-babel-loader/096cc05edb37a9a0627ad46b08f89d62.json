{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { useReducer, useEffect } from \"react\";\nimport { handleAuthSSR } from \"../handleAuthSSR\";\n\nfunction useDBReducer(defaultVal, todoReducer) {\n  var _useReducer = useReducer(todoReducer, defaultVal, function _callee(ctx) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(handleAuthSSR(ctx));\n\n          case 3:\n            res = _context.sent;\n\n            if (!res.data) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.data);\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", defaultVal);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; //maybe use effect here??\n\n\n  console.log(\"state after the reducer:\", state);\n  return [state, dispatch];\n}\n\nexport { useDBReducer };","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","handleAuthSSR","useDBReducer","defaultVal","todoReducer","ctx","res","data","console","log","state","dispatch"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,WAAlC,EAA+C;AAAA,oBACnBL,UAAU,CAACK,WAAD,EAAcD,UAAd,EAA0B,iBAAME,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAExCJ,aAAa,CAACI,GAAD,CAF2B;;AAAA;AAEpDC,YAAAA,GAFoD;;AAAA,iBAGtDA,GAAG,CAACC,IAHkD;AAAA;AAAA;AAAA;;AAAA,6CAIjDD,GAAG,CAACC,IAJ6C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAO1DC,YAAAA,OAAO,CAACC,GAAR;AAP0D,6CAQnDN,UARmD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B,CADS;AAAA,MACtCO,KADsC;AAAA,MAC/BC,QAD+B,mBAa7C;;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,KAAxC;AACA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAAST,YAAT","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport { handleAuthSSR } from \"../handleAuthSSR\";\n\nfunction useDBReducer(defaultVal, todoReducer) {\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, async ctx => {\n    try {\n      const res = await handleAuthSSR(ctx);\n      if (res.data) {\n        return res.data;\n      }\n    } catch (e) {\n      console.log(e);\n      return defaultVal;\n    }\n  });\n\n  //maybe use effect here??\n  console.log(\"state after the reducer:\", state);\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n"]},"metadata":{},"sourceType":"module"}