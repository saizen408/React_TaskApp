{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport Router from 'next/router';\n\nvar authReducer = function authReducer(state, action) {\n  var data, proxyUrl, url, response, userInfo, token;\n  return _regeneratorRuntime.async(function authReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = action.type;\n          _context.next = _context.t0 === 'LOGIN' ? 3 : 23;\n          break;\n\n        case 3:\n          // setLoader(true);\n          // getToken();\n          data = {\n            email: action.email,\n            password: action.password\n          };\n          _context.prev = 4;\n          proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n          url = 'https://owusu-task-manager.herokuapp.com/users/login';\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(proxyUrl + url, {\n            method: 'POST',\n            body: _JSON$stringify(data),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }));\n\n        case 9:\n          response = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 12:\n          userInfo = _context.sent;\n          token = userInfo.token;\n          state.token = token;\n          Router.push('/TodoAppPage'); //   setLoader(false);\n          // this.setState(() => ({ loading: false, token: userInfo.token }));\n          // Router.push('/TodoAppPage');\n\n          _context.next = 22;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t1 = _context[\"catch\"](4);\n          console.error('Error:', _context.t1);\n          Router.push('/'); //   setLoader(false);\n          //   setSnackOpen(true);\n          // this.setState({ email: '', password: '' });\n\n        case 22:\n          return _context.abrupt(\"return\", state);\n\n        case 23:\n          console.log('case not found in reducer');\n          return _context.abrupt(\"return\", state);\n\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 18]]);\n};\n\nexport default authReducer; // {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/auth.reducer.js"],"names":["Router","authReducer","state","action","type","data","email","password","proxyUrl","url","fetch","method","body","headers","response","json","userInfo","token","push","console","error","log"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,KAAP,EAAcC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACVA,MAAM,CAACC,IADG;AAAA,0CAEX,OAFW;AAAA;;AAAA;AAGd;AACA;AAEIC,UAAAA,IANU,GAMH;AACTC,YAAAA,KAAK,EAAEH,MAAM,CAACG,KADL;AAETC,YAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAFR,WANG;AAAA;AAWNC,UAAAA,QAXM,GAWK,sCAXL;AAYNC,UAAAA,GAZM,GAYA,sDAZA;AAAA;AAAA,2CAaWC,KAAK,CAACF,QAAQ,GAAGC,GAAZ,EAAiB;AAC3CE,YAAAA,MAAM,EAAE,MADmC;AAE3CC,YAAAA,IAAI,EAAE,gBAAeP,IAAf,CAFqC;AAG3CQ,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT;AAHkC,WAAjB,CAbhB;;AAAA;AAaNC,UAAAA,QAbM;AAAA;AAAA,2CAqBWA,QAAQ,CAACC,IAAT,EArBX;;AAAA;AAqBNC,UAAAA,QArBM;AAsBRC,UAAAA,KAtBQ,GAsBAD,QAAQ,CAACC,KAtBT;AAuBZf,UAAAA,KAAK,CAACe,KAAN,GAAcA,KAAd;AACAjB,UAAAA,MAAM,CAACkB,IAAP,CAAY,cAAZ,EAxBY,CAyBZ;AACA;AAEA;;AA5BY;AAAA;;AAAA;AAAA;AAAA;AA8BZC,UAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACApB,UAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ,EA/BY,CAgCZ;AACA;AAEA;;AAnCY;AAAA,2CAqCPhB,KArCO;;AAAA;AAmDdiB,UAAAA,OAAO,CAACE,GAAR,CAAY,2BAAZ;AAnDc,2CAoDPnB,KApDO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAuDA,eAAeD,WAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import Router from 'next/router';\n\nconst authReducer = async (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      // setLoader(true);\n      // getToken();\n\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n        const response = await fetch(proxyUrl + url, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const userInfo = await response.json();\n        var token = userInfo.token;\n        state.token = token;\n        Router.push('/TodoAppPage');\n        //   setLoader(false);\n        // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n        // Router.push('/TodoAppPage');\n      } catch (error) {\n        console.error('Error:', error);\n        Router.push('/');\n        //   setLoader(false);\n        //   setSnackOpen(true);\n\n        // this.setState({ email: '', password: '' });\n      }\n      return state;\n\n    //     return [...state, { id: uuid(), task: action.task, completed: false }];\n    //   case 'LOGOUT':\n    //     return state.filter(todo => todo.id !== action.id);\n    //   case 'TOGGLE':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n    //     );\n    //   case 'EDIT':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, task: action.newTask } : todo\n    //     );\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\nexport default authReducer;\n\n// {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}\n"]},"metadata":{},"sourceType":"module"}