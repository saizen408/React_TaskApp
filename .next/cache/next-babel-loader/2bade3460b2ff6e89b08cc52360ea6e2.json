{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  var _useReducer, state, dispatch;\n\n  return _regeneratorRuntime.async(function useDBReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _useReducer = useReducer(todoReducer, defaultVal, function () {\n            var val;\n            var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n            var targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n            try {\n              axios.get(proxyUrl + targetUrl, {\n                headers: {\n                  Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n\n                }\n              }).then(function (response) {\n                console.log(response.data);\n                val = response.data;\n              })[\"catch\"](function (e) {\n                console.log(e);\n              });\n            } catch (e) {\n              console.error('Error:', e);\n              val = defaultVal;\n            }\n\n            return val;\n          }), state = _useReducer[0], dispatch = _useReducer[1];\n          return _context.abrupt(\"return\", [state, dispatch]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","axios","useDBReducer","token","defaultVal","todoReducer","val","proxyUrl","targetUrl","get","headers","Authorization","then","response","console","log","data","e","error","state","dispatch"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,WAA/C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAC4BN,UAAU,CAACM,WAAD,EAAcD,UAAd,EAA0B,YAAM;AAClE,gBAAIE,GAAJ;AAEA,gBAAMC,QAAQ,GAAG,sCAAjB;AACA,gBAAMC,SAAS,GAAG,gDAAlB;;AAEA,gBAAI;AACFP,cAAAA,KAAK,CACFQ,GADH,CACOF,QAAQ,GAAGC,SADlB,EAC6B;AACzBE,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,EAAE,YAAYR,KAAK,CAACA,KAD1B,CACgC;;AADhC;AADgB,eAD7B,EAMGS,IANH,CAMQ,UAAAC,QAAQ,EAAI;AAChBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAV,gBAAAA,GAAG,GAAGO,QAAQ,CAACG,IAAf;AACD,eATH,WAUS,UAAAC,CAAC,EAAI;AACVH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD,eAZH;AAaD,aAdD,CAcE,OAAOA,CAAP,EAAU;AACVH,cAAAA,OAAO,CAACI,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAX,cAAAA,GAAG,GAAGF,UAAN;AACD;;AACD,mBAAOE,GAAP;AACD,WAzBmC,CADtC,EACSa,KADT,mBACgBC,QADhB;AAAA,2CA4BS,CAACD,KAAD,EAAQC,QAAR,CA5BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+BA,SAASlB,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nasync function useDBReducer(token, defaultVal, todoReducer) {\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    var val;\n\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios\n        .get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n          }\n        })\n        .then(response => {\n          console.log(response.data);\n          val = response.data;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}