{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext, TodosContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Container } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { SortedContext } from \"./contexts/SortedContext\";\nimport { words } from \"./words\";\nimport { useSnackbar } from \"notistack\";\nimport theme2 from \"./styles/theme2\";\nimport useStyles from \"./styles/useStyles\";\n\nfunction TodoForm(props) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  var todoId;\n\n  const getTodo = async () => {\n    todoId = await useContext(TodosContext);\n    console.log(\"todos context:\", todoId);\n  };\n\n  const {\n    language\n  } = useContext(LanguageContext);\n  const {\n    resetSort\n  } = useContext(SortedContext);\n  const {\n    addTodo\n  } = words[language];\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  const classes = useStyles();\n  return __jsx(Paper, {\n    elevation: 3,\n    style: {\n      margin: \"1rem 0\",\n      padding: \"0\"\n    }\n  }, __jsx(Container, {\n    disableGutters: true\n  }, __jsx(\"form\", {\n    className: classes.root,\n    onSubmit: e => {\n      e.preventDefault();\n      handleAddClick();\n      resetSort({\n        type: \"ADD\",\n        todo: value,\n        id: getTodo()\n      });\n      dispatch({\n        type: \"ADD\",\n        task: value\n      });\n      reset();\n    },\n    style: {\n      height: \"65px\"\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme2\n  }, __jsx(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    value: value,\n    onChange: handleChange,\n    margin: \"normal\",\n    label: addTodo,\n    fullWidth: true\n  })))));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoForm.js"],"names":["React","useContext","TextField","Paper","useInputState","DispatchContext","TodosContext","LanguageContext","Container","ThemeProvider","SortedContext","words","useSnackbar","theme2","useStyles","TodoForm","props","value","handleChange","reset","dispatch","todoId","getTodo","console","log","language","resetSort","addTodo","enqueueSnackbar","handleAddClick","message","variant","classes","margin","padding","root","e","preventDefault","type","todo","id","task","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,0BAA9C;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,KAAD,EAAQC,YAAR,EAAsBC,KAAtB,IAA+Bf,aAAa,CAAC,EAAD,CAAlD;AACA,QAAMgB,QAAQ,GAAGnB,UAAU,CAACI,eAAD,CAA3B;AACA,MAAIgB,MAAJ;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1BD,IAAAA,MAAM,GAAG,MAAMpB,UAAU,CAACK,YAAD,CAAzB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,MAA9B;AACD,GAHD;;AAKA,QAAM;AAAEI,IAAAA;AAAF,MAAexB,UAAU,CAACM,eAAD,CAA/B;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAgBzB,UAAU,CAACS,aAAD,CAAhC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAchB,KAAK,CAACc,QAAD,CAAzB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAsBhB,WAAW,EAAvC;;AACA,QAAMiB,cAAc,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAI,cAAab,KAAM,GAApC;AACAW,IAAAA,eAAe,CAACE,OAAD,EAAU;AACvBC,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GALD;;AAOA,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,OAAO,EAAE;AAA7B;AAA5B,KACE,MAAC,SAAD;AAAW,IAAA,cAAc;AAAzB,KACE;AACE,IAAA,SAAS,EAAEF,OAAO,CAACG,IADrB;AAEE,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,cAAc;AACdH,MAAAA,SAAS,CAAC;AAAEY,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,IAAI,EAAEtB,KAArB;AAA4BuB,QAAAA,EAAE,EAAElB,OAAO;AAAvC,OAAD,CAAT;AACAF,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAE,KAAR;AAAeG,QAAAA,IAAI,EAAExB;AAArB,OAAD,CAAR;AACAE,MAAAA,KAAK;AACN,KARH;AASE,IAAA,KAAK,EAAE;AACLuB,MAAAA,MAAM,EAAE;AADH;AATT,KAaE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE7B;AAAtB,KACE,MAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,KAAK,EAAES,OANT;AAOE,IAAA,SAAS;AAPX,IADF,CAbF,CADF,CADF,CADF;AA+BD;;AAED,eAAeZ,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useInputState from \"./hooks/useInputState\";\nimport { DispatchContext, TodosContext } from \"./contexts/todos.context\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { Container } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { SortedContext } from \"./contexts/SortedContext\";\nimport { words } from \"./words\";\nimport { useSnackbar } from \"notistack\";\nimport theme2 from \"./styles/theme2\";\nimport useStyles from \"./styles/useStyles\";\n\nfunction TodoForm(props) {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  var todoId;\n  const getTodo = async () => {\n    todoId = await useContext(TodosContext);\n    console.log(\"todos context:\", todoId);\n  };\n\n  const { language } = useContext(LanguageContext);\n  const { resetSort } = useContext(SortedContext);\n  const { addTodo } = words[language];\n  const { enqueueSnackbar } = useSnackbar();\n  const handleAddClick = () => {\n    const message = `New Task: \"${value}\"`;\n    enqueueSnackbar(message, {\n      variant: \"success\"\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} style={{ margin: \"1rem 0\", padding: \"0\" }}>\n      <Container disableGutters>\n        <form\n          className={classes.root}\n          onSubmit={e => {\n            e.preventDefault();\n            handleAddClick();\n            resetSort({ type: \"ADD\", todo: value, id: getTodo() });\n            dispatch({ type: \"ADD\", task: value });\n            reset();\n          }}\n          style={{\n            height: \"65px\"\n          }}\n        >\n          <ThemeProvider theme={theme2}>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={value}\n              onChange={handleChange}\n              margin=\"normal\"\n              label={addTodo}\n              fullWidth\n            />\n          </ThemeProvider>\n        </form>\n      </Container>\n    </Paper>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}