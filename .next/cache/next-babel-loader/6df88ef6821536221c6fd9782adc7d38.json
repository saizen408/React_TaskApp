{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\nconst authReducer = async (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      // setLoader(true);\n      // getToken();\n      console.log('state: ', state);\n      console.log('action: ', action);\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n        const response = await fetch(proxyUrl + url, {\n          method: 'POST',\n          body: _JSON$stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const userInfo = await response.json();\n        var token = userInfo.token;\n        state.token = token; //   setLoader(false);\n        // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n        console.log('state.token: ', state.token);\n        console.log('state: ', state); // Router.push('/TodoAppPage');\n      } catch (error) {\n        console.error('Error:', error); //   Router.push('/');\n        //   setLoader(false);\n        //   setSnackOpen(true);\n        // this.setState({ email: '', password: '' });\n      }\n\n      return {};\n    //     return [...state, { id: uuid(), task: action.task, completed: false }];\n    //   case 'LOGOUT':\n    //     return state.filter(todo => todo.id !== action.id);\n    //   case 'TOGGLE':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n    //     );\n    //   case 'EDIT':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, task: action.newTask } : todo\n    //     );\n\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\n\nexport default authReducer; // {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/auth.reducer.js"],"names":["authReducer","state","action","type","console","log","data","email","password","proxyUrl","url","response","fetch","method","body","headers","userInfo","json","token","error"],"mappings":";;AAAA,MAAMA,WAAW,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,MAAxB;AACA,UAAII,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAEL,MAAM,CAACK,KADL;AAETC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AAFR,OAAX;;AAIA,UAAI;AACF,cAAMC,QAAQ,GAAG,sCAAjB;AACA,cAAMC,GAAG,GAAG,sDAAZ;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAGC,GAAZ,EAAiB;AAC3CG,UAAAA,MAAM,EAAE,MADmC;AAE3CC,UAAAA,IAAI,EAAE,gBAAeR,IAAf,CAFqC;AAG3CS,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAHkC,SAAjB,CAA5B;AAQA,cAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAvB;AACA,YAAIC,KAAK,GAAGF,QAAQ,CAACE,KAArB;AACAjB,QAAAA,KAAK,CAACiB,KAAN,GAAcA,KAAd,CAbE,CAcF;AACA;;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,KAAK,CAACiB,KAAnC;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB,EAjBE,CAkBF;AACD,OAnBD,CAmBE,OAAOkB,KAAP,EAAc;AACdf,QAAAA,OAAO,CAACe,KAAR,CAAc,QAAd,EAAwBA,KAAxB,EADc,CAEd;AACA;AACA;AAEA;AACD;;AACD,aAAO,EAAP;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACEf,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,aAAOJ,KAAP;AApDJ;AAsDD,CAvDD;;AAwDA,eAAeD,WAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["const authReducer = async (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      // setLoader(true);\n      // getToken();\n      console.log('state: ', state);\n      console.log('action: ', action);\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n        const response = await fetch(proxyUrl + url, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const userInfo = await response.json();\n        var token = userInfo.token;\n        state.token = token;\n        //   setLoader(false);\n        // this.setState(() => ({ loading: false, token: userInfo.token }));\n        console.log('state.token: ', state.token);\n        console.log('state: ', state);\n        // Router.push('/TodoAppPage');\n      } catch (error) {\n        console.error('Error:', error);\n        //   Router.push('/');\n        //   setLoader(false);\n        //   setSnackOpen(true);\n\n        // this.setState({ email: '', password: '' });\n      }\n      return {};\n\n    //     return [...state, { id: uuid(), task: action.task, completed: false }];\n    //   case 'LOGOUT':\n    //     return state.filter(todo => todo.id !== action.id);\n    //   case 'TOGGLE':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n    //     );\n    //   case 'EDIT':\n    //     return state.map(todo =>\n    //       todo.id === action.id ? { ...todo, task: action.newTask } : todo\n    //     );\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\nexport default authReducer;\n\n// {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}\n"]},"metadata":{},"sourceType":"module"}