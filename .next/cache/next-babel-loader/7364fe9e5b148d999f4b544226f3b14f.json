{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport useInputState from './hooks/useInputState';\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    email: 'Adresse Électronique',\n    password: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    email: 'Correo Electrónico',\n    password: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    email: 'E-Mail-Addresse',\n    password: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n  日本語: {\n    signIn: 'サインイン',\n    email: '電子メールアドレス',\n    password: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nfunction Form(props) {\n  const {\n    language,\n    changeLanguage,\n    token\n  } = useContext(LanguageContext);\n  const {\n    classes\n  } = props;\n  const {\n    email,\n    signIn,\n    password,\n    remember\n  } = words[language];\n  const [value, handleChange, reset] = useInputState('');\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault(); //toggle loader\n\n    setLoader(true);\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n      const response = await fetch(proxyUrl + url, {\n        method: 'POST',\n        body: _JSON$stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const userInfo = await response.json();\n      token = userInfo.token;\n      setLoader(false); // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n      console.log(userInfo); // Router.push('/TodoAppPage');\n    } catch (error) {\n      console.error('Error:', error);\n      Router.push('/');\n      setLoader(false);\n      setSnackOpen(true); // this.setState({ email: '', password: '' });\n    }\n\n    if (loading) {\n      return __jsx(\"div\", {\n        className: classes.loader\n      }, cubeSpinner());\n    }\n\n    return __jsx(\"main\", {\n      className: classes.main\n    }, __jsx(Paper, {\n      className: classes.paper\n    }, __jsx(Avatar, {\n      className: classes.avatar\n    }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n      variant: \"h5\"\n    }, signIn), __jsx(Select, {\n      value: language,\n      onChange: changeLanguage\n    }, __jsx(MenuItem, {\n      value: \"english\"\n    }, \"English\"), __jsx(MenuItem, {\n      value: \"french\"\n    }, \"French\"), __jsx(MenuItem, {\n      value: \"spanish\"\n    }, \"Spanish\"), __jsx(MenuItem, {\n      value: \"german\"\n    }, \"German\"), __jsx(MenuItem, {\n      value: \"\\u65E5\\u672C\\u8A9E\"\n    }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n      className: classes.form,\n      onSubmit: e => {\n        e.preventDefault();\n        dispatch({\n          type: 'LOGIN',\n          task: value\n        });\n        reset();\n      }\n    }, __jsx(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, __jsx(InputLabel, {\n      htmlFor: \"email\",\n      value: value,\n      onChange: handleChange\n    }, email), __jsx(Input, {\n      id: \"email\",\n      name: \"email\",\n      autoFocus: true\n    })), __jsx(FormControl, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true\n    }, __jsx(InputLabel, {\n      htmlFor: \"password\",\n      value: value,\n      onChange: handleChange\n    }, password), __jsx(Input, {\n      id: \"password\",\n      name: \"password\",\n      autoFocus: true\n    })), __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        color: \"primary\"\n      }),\n      label: remember\n    }), __jsx(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      fullWidth: true,\n      color: \"primary\",\n      className: classes.submit\n    }, signIn))), __jsx(Button, {\n      onClick: handleClick\n    }, \"Open simple snackbar\"), __jsx(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: open,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: __jsx(\"span\", {\n        id: \"message-id\"\n      }, \"Email and/or Password is incorrect\"),\n      action: [__jsx(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        className: classes.close,\n        onClick: handleClose\n      }, __jsx(CloseIcon, null))]\n    }));\n  };\n}\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Form.js"],"names":["React","useContext","Avatar","Button","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","Snackbar","IconButton","CloseIcon","withStyles","styles","LanguageContext","ThemeContext","useInputState","words","english","signIn","email","password","remember","french","spanish","german","日本語","Form","props","language","changeLanguage","token","classes","value","handleChange","reset","open","setSnackOpen","useState","loading","setLoader","handleClick","handleClose","event","reason","handleSubmit","evt","preventDefault","proxyUrl","url","response","fetch","method","body","state","headers","userInfo","json","console","log","error","Router","push","loader","cubeSpinner","main","paper","avatar","form","e","dispatch","type","task","submit","vertical","horizontal","close"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport useInputState from './hooks/useInputState';\n\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    email: 'Adresse Électronique',\n    password: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    email: 'Correo Electrónico',\n    password: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    email: 'E-Mail-Addresse',\n    password: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n\n  日本語: {\n    signIn: 'サインイン',\n    email: '電子メールアドレス',\n    password: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nfunction Form(props) {\n  const { language, changeLanguage, token } = useContext(LanguageContext);\n  const { classes } = props;\n  const { email, signIn, password, remember } = words[language];\n  const [value, handleChange, reset] = useInputState('');\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    //toggle loader\n    setLoader(true);\n\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n      const response = await fetch(proxyUrl + url, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const userInfo = await response.json();\n      token = userInfo.token;\n      setLoader(false);\n      // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n      console.log(userInfo);\n      // Router.push('/TodoAppPage');\n    } catch (error) {\n      console.error('Error:', error);\n      Router.push('/');\n      setLoader(false);\n      setSnackOpen(true);\n\n      // this.setState({ email: '', password: '' });\n    }\n\n    if (loading) {\n      return <div className={classes.loader}>{cubeSpinner()}</div>;\n    }\n\n    return (\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography variant=\"h5\">{signIn}</Typography>\n          <Select value={language} onChange={changeLanguage}>\n            <MenuItem value=\"english\">English</MenuItem>\n            <MenuItem value=\"french\">French</MenuItem>\n            <MenuItem value=\"spanish\">Spanish</MenuItem>\n            <MenuItem value=\"german\">German</MenuItem>\n            <MenuItem value=\"日本語\">日本語</MenuItem>\n          </Select>\n          <form\n            className={classes.form}\n            onSubmit={e => {\n              e.preventDefault();\n              dispatch({ type: 'LOGIN', task: value });\n              reset();\n            }}\n          >\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"email\" value={value} onChange={handleChange}>\n                {email}\n              </InputLabel>\n              <Input id=\"email\" name=\"email\" autoFocus></Input>\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel\n                htmlFor=\"password\"\n                value={value}\n                onChange={handleChange}\n              >\n                {password}\n              </InputLabel>\n              <Input id=\"password\" name=\"password\" autoFocus></Input>\n            </FormControl>\n            <FormControlLabel\n              control={<Checkbox color=\"primary\" />}\n              label={remember}\n            />\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {signIn}\n            </Button>\n          </form>\n        </Paper>\n        <Button onClick={handleClick}>Open simple snackbar</Button>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n          open={open}\n          autoHideDuration={3000}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id'\n          }}\n          message={\n            <span id=\"message-id\">Email and/or Password is incorrect</span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </main>\n    );\n  };\n}\n\nexport default withStyles(styles)(Form);\n"]},"metadata":{},"sourceType":"module"}