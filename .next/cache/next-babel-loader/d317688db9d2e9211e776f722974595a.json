{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { TodosContext } from \"../components/contexts/todos.context\";\nimport { SortedContext } from \"./contexts/SortedContext\";\nTodoList.contextType = SortedContext;\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  // static contextType = TodosContext;\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortEnd\", function (_ref) {\n      var oldIndex = _ref.oldIndex,\n          newIndex = _ref.newIndex;\n      console.log(\"before sort: \", _this.props.posts);\n      var arr = _this.props.posts;\n      arr = arr.slice();\n      arr.splice(newIndex < 0 ? arr.length + newIndex : newIndex, 0, arr.splice(oldIndex, 1)[0]);\n      console.log(\"after sort: \", arr);\n\n      _this.setState({\n        tasks: arr,\n        sorted: true\n      });\n\n      console.log(\"this.state.tasks: \", _this.state.tasks);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sorted\", function () {\n      console.log(\"running sorted function!\");\n\n      _this.setState({\n        sorted: false\n      });\n    });\n\n    _this.state = {\n      tasks: props.posts,\n      sorted: false\n    };\n    _this.sorted = _this.sorted.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"this.state.sorted: \", this.state.sorted);\n      var posts = this.props.posts;\n      var tasks = this.state.tasks;\n      var setSort = this.context.setSort;\n      console.log(setSort);\n      if (tasks.length) return __jsx(DraggableTodoList, {\n        axis: \"y\",\n        distance: 20,\n        onSortEnd: this.onSortEnd,\n        posts: tasks,\n        sorted: setSort //instead of sorted\n\n      });\n      return null;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      console.log(\"state.sorted in GDSFP: \", state.sorted);\n      var isSorted = this.context;\n      console.log(\"isSorted: \", isSorted);\n\n      if (!state.sorted) {\n        //check if props length is different from state length [add/delete]\n        if (props.posts.length !== state.tasks.length) {\n          // console.log(\"1st condition met\");\n          //update state to match props\n          return {\n            tasks: props.posts\n          }; //check if state length is equal to posts length\n        }\n        /*else if (props.posts.length === state.tasks.length) {*/\n        // console.log(\"2nd condition met\");\n        //loop through each task in state\n\n\n        for (var i = 0; i < state.tasks.length; i++) {\n          //if props tasks equal state tasks completion, continue to next element\n          if (props.posts[i].completed === !state.tasks[i].completed) {\n            //if there is inequality of props vs. state completion, update state to match props\n            return {\n              tasks: props.posts\n            };\n          }\n\n          if (props.posts[i].description !== state.tasks[i].description) {\n            return {\n              tasks: props.posts\n            };\n          }\n        }\n        /*} else {*/\n\n\n        return null;\n      } else return null;\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","Component","DraggableTodoList","TodosContext","SortedContext","TodoList","contextType","props","oldIndex","newIndex","console","log","posts","arr","slice","splice","length","setState","tasks","sorted","state","bind","setSort","context","onSortEnd","isSorted","i","completed","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { TodosContext } from \"../components/contexts/todos.context\";\nimport { SortedContext } from \"./contexts/SortedContext\";\n\nTodoList.contextType = SortedContext;\n\nclass TodoList extends Component {\n  // static contextType = TodosContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: props.posts,\n      sorted: false\n    };\n    this.sorted = this.sorted.bind(this);\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    console.log(\"before sort: \", this.props.posts);\n    let arr = this.props.posts;\n    arr = arr.slice();\n    arr.splice(\n      newIndex < 0 ? arr.length + newIndex : newIndex,\n      0,\n      arr.splice(oldIndex, 1)[0]\n    );\n    console.log(\"after sort: \", arr);\n    this.setState({\n      tasks: arr,\n      sorted: true\n    });\n    console.log(\"this.state.tasks: \", this.state.tasks);\n  };\n\n  sorted = () => {\n    console.log(\"running sorted function!\");\n    this.setState({\n      sorted: false\n    });\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(\"state.sorted in GDSFP: \", state.sorted);\n    let isSorted = this.context;\n    console.log(\"isSorted: \", isSorted);\n    if (!state.sorted) {\n      //check if props length is different from state length [add/delete]\n      if (props.posts.length !== state.tasks.length) {\n        // console.log(\"1st condition met\");\n        //update state to match props\n        return { tasks: props.posts };\n        //check if state length is equal to posts length\n      } /*else if (props.posts.length === state.tasks.length) {*/\n      // console.log(\"2nd condition met\");\n      //loop through each task in state\n      for (let i = 0; i < state.tasks.length; i++) {\n        //if props tasks equal state tasks completion, continue to next element\n        if (props.posts[i].completed === !state.tasks[i].completed) {\n          //if there is inequality of props vs. state completion, update state to match props\n          return { tasks: props.posts };\n        }\n        if (props.posts[i].description !== state.tasks[i].description) {\n          return { tasks: props.posts };\n        }\n      }\n      /*} else {*/\n      return null;\n    } else return null;\n  }\n\n  render() {\n    console.log(\"this.state.sorted: \", this.state.sorted);\n    const { posts } = this.props;\n    const { tasks } = this.state;\n    const { setSort } = this.context;\n    console.log(setSort);\n    if (tasks.length)\n      return (\n        <DraggableTodoList\n          axis=\"y\"\n          distance={20}\n          onSortEnd={this.onSortEnd}\n          posts={tasks}\n          sorted={setSort} //instead of sorted\n        ></DraggableTodoList>\n      );\n    return null;\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}