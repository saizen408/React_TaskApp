{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, memo } from 'react';\nimport useToggleState from './hooks/useToggleState';\nimport EditTodoForm from './EditTodoForm';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { DispatchContext } from './contexts/todos.context';\n\nfunction Todo(_ref) {\n  var id = _ref.id,\n      task = _ref.task,\n      completed = _ref.completed;\n  var dispatch = useContext(DispatchContext);\n\n  var _useToggleState = useToggleState(false),\n      _useToggleState2 = _slicedToArray(_useToggleState, 2),\n      isEditing = _useToggleState2[0],\n      toggle = _useToggleState2[1];\n\n  return __jsx(ListItem, {\n    style: {\n      height: '64px'\n    }\n  }, isEditing ? __jsx(EditTodoForm, {\n    id: id,\n    task: task,\n    toggleEditForm: toggle\n  }) : __jsx(React.Fragment, null, __jsx(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: function onClick() {\n      return dispatch({\n        type: 'TOGGLE',\n        id: id\n      });\n    }\n  }), __jsx(ListItemText, {\n    style: {\n      textDecoration: completed ? 'line-through' : 'none'\n    }\n  }, task), __jsx(ListItemSecondaryAction, null, __jsx(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: function onClick() {\n      return dispatch({\n        type: 'REMOVE',\n        id: id\n      });\n    }\n  }, __jsx(DeleteIcon, null)), __jsx(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle\n  }, __jsx(EditIcon, null))), ' '));\n}\n\nexport default memo(Todo);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Todo.js"],"names":["React","useContext","memo","useToggleState","EditTodoForm","ListItemText","ListItem","Checkbox","IconButton","DeleteIcon","EditIcon","ListItemSecondaryAction","DispatchContext","Todo","id","task","completed","dispatch","isEditing","toggle","height","type","textDecoration"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,SAASC,IAAT,OAAuC;AAAA,MAAvBC,EAAuB,QAAvBA,EAAuB;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrC,MAAMC,QAAQ,GAAGhB,UAAU,CAACW,eAAD,CAA3B;;AADqC,wBAETT,cAAc,CAAC,KAAD,CAFL;AAAA;AAAA,MAE9Be,SAF8B;AAAA,MAEnBC,MAFmB;;AAGrC,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAjB,KACGF,SAAS,GACR,MAAC,YAAD;AAAc,IAAA,EAAE,EAAEJ,EAAlB;AAAsB,IAAA,IAAI,EAAEC,IAA5B;AAAkC,IAAA,cAAc,EAAEI;AAAlD,IADQ,GAGR,4BACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CADb;AAEE,IAAA,OAAO,EAAEH,SAFX;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,QAAR;AAAkBP,QAAAA,EAAE,EAAEA;AAAtB,OAAD,CAAd;AAAA;AAHX,IADF,EAME,MAAC,YAAD;AACE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,cAAc,EAAEN,SAAS,GAAG,cAAH,GAAoB;AAA/C;AADT,KAGGD,IAHH,CANF,EAWE,MAAC,uBAAD,QACE,MAAC,UAAD;AACE,kBAAW,QADb;AAEE,IAAA,OAAO,EAAE;AAAA,aAAME,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,QAAR;AAAkBP,QAAAA,EAAE,EAAEA;AAAtB,OAAD,CAAd;AAAA;AAFX,KAIE,MAAC,UAAD,OAJF,CADF,EAOE,MAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,OAAO,EAAEK;AAAvC,KACE,MAAC,QAAD,OADF,CAPF,CAXF,EAqB6B,GArB7B,CAJJ,CADF;AA+BD;;AAED,eAAejB,IAAI,CAACW,IAAD,CAAnB","sourcesContent":["import React, { useContext, memo } from 'react';\nimport useToggleState from './hooks/useToggleState';\nimport EditTodoForm from './EditTodoForm';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { DispatchContext } from './contexts/todos.context';\n\nfunction Todo({ id, task, completed }) {\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n  return (\n    <ListItem style={{ height: '64px' }}>\n      {isEditing ? (\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => dispatch({ type: 'TOGGLE', id: id })}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? 'line-through' : 'none' }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={() => dispatch({ type: 'REMOVE', id: id })}\n            >\n              <DeleteIcon></DeleteIcon>\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon></EditIcon>\n            </IconButton>\n          </ListItemSecondaryAction>{' '}\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default memo(Todo);\n"]},"metadata":{},"sourceType":"module"}