{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport PageContent from '../components/PageContent';\nimport { ThemeProvider } from '../components/contexts/ThemeContext';\nimport { LanguageProvider } from '../components/contexts/LanguageContext';\nimport Navbar from '../components/Navbar';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    // Only uncomment this method if you have blocking data requirements for\n    // every single page in your application. This disables the ability to\n    // perform automatic static optimization, causing every page in your app to\n    // be server-side rendered.\n    //\n    // static async getInitialProps(appContext) {\n    //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n    //   const appProps = await App.getInitialProps(appContext);\n    //\n    //   return { ...appProps }\n    // }\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          routeProps = _this$props.routeProps;\n      return __jsx(React.Fragment, null, __jsx(ThemeProvider, null, __jsx(LanguageProvider, null, __jsx(PageContent, null, __jsx(Navbar, null), __jsx(Component, _extends({}, pageProps, routeProps))))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/pages/_app.js"],"names":["React","App","PageContent","ThemeProvider","LanguageProvider","Navbar","MyApp","props","Component","pageProps","routeProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,K;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA,wBACsC,KAAKC,KAD3C;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,UADvB,eACuBA,UADvB;AAEP,aACE,4BACE,MAAC,aAAD,QACE,MAAC,gBAAD,QACE,MAAC,WAAD,QACE,MAAC,MAAD,OADF,EAEE,MAAC,SAAD,eAAeD,SAAf,EAA8BC,UAA9B,EAFF,CADF,CADF,CADF,CADF;AAYD;;;;EA3BiBT,G;;AA8BpB,eAAeK,KAAf","sourcesContent":["import React from 'react';\nimport App from 'next/app';\nimport PageContent from '../components/PageContent';\nimport { ThemeProvider } from '../components/contexts/ThemeContext';\nimport { LanguageProvider } from '../components/contexts/LanguageContext';\nimport Navbar from '../components/Navbar';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  render() {\n    const { Component, pageProps, routeProps } = this.props;\n    return (\n      <>\n        <ThemeProvider>\n          <LanguageProvider>\n            <PageContent>\n              <Navbar />\n              <Component {...pageProps} {...routeProps} />\n            </PageContent>\n          </LanguageProvider>\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}