{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState, Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"react-sortable-hoc\";\nimport { TodosContext } from \"../components/contexts/todos.context\";\nimport { TodosProvider } from \"../components/contexts/todos.context\";\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList(props) {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortEnd\", function (_ref) {\n      var oldIndex = _ref.oldIndex,\n          newIndex = _ref.newIndex;\n      console.log(\"before sort: \", _this.props.posts);\n      var arr = _this.props.posts;\n      arr = arr.slice();\n      arr.splice(newIndex < 0 ? arr.length + newIndex : newIndex, 0, arr.splice(oldIndex, 1)[0]);\n      console.log(\"after sort: \", arr);\n\n      _this.setState({\n        tasks: arr\n      });\n\n      console.log(\"this.state.tasks: \", _this.state.tasks); // return arr;\n    });\n\n    _this.state = {\n      tasks: props.posts\n    };\n    _this.onSortEnd = _this.onSortEnd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"getDerivedStateFromProps\",\n    // console.log(this.state);\n    // this.setState({\n    //   tasks: arrayMove(this.state, oldIndex, newIndex)\n    // });\n    // // this.setState({\n    // //   tasks: arrayMove([4, 5, 6, 7, 8, 0], oldIndex, newIndex)\n    // // });\n    // componentDidUpdate(prevProps) {\n    //   if (this.props.posts !== prevProps.posts)\n    //     this.setState({\n    //       tasks: this.context\n    //     });\n    // }\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.posts.length !== state.tasks.length) {\n        return {\n          tasks: props.posts\n        };\n      }\n    } // componentWillReceiveProps(nextProps) {\n    //   this.setState({\n    //     tasks: nextProps.posts\n    //   });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"todo list rendered!\");\n      var posts = this.props.posts;\n      var tasks = this.state.tasks;\n      if (tasks.length) return __jsx(DraggableTodoList, {\n        axis: \"y\",\n        distance: 20,\n        onSortEnd: this.onSortEnd,\n        posts: tasks\n      });\n      return null;\n    }\n  }]);\n\n  return TodoList;\n}(Component);\n\n_defineProperty(TodoList, \"contextType\", TodosContext);\n\nexport default TodoList; // function TodoList(props) {\n//   if (props.posts.length)\n//     return (\n//       <DraggableTodoList\n//         axis=\"y\"\n//         distance={20}\n//         onSortEnd={onSortEnd}\n//         {...props}\n//       ></DraggableTodoList>\n//     );\n//   return null;\n// }\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\n/* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n</List> */","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","useEffect","useState","Component","Paper","List","Divider","DraggableTodoList","arrayMove","TodosContext","TodosProvider","TodoList","props","oldIndex","newIndex","console","log","posts","arr","slice","splice","length","setState","tasks","state","onSortEnd","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,aAAT,QAA8B,sCAA9B;;IAEMC,Q;;;;;AAGJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,gEAQP,gBAA4B;AAAA,UAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,UAAfC,QAAe,QAAfA,QAAe;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,MAAKJ,KAAL,CAAWK,KAAxC;AACA,UAAIC,GAAG,GAAG,MAAKN,KAAL,CAAWK,KAArB;AACAC,MAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,EAAN;AACAD,MAAAA,GAAG,CAACE,MAAJ,CACEN,QAAQ,GAAG,CAAX,GAAeI,GAAG,CAACG,MAAJ,GAAaP,QAA5B,GAAuCA,QADzC,EAEE,CAFF,EAGEI,GAAG,CAACE,MAAJ,CAAWP,QAAX,EAAqB,CAArB,EAAwB,CAAxB,CAHF;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,GAA5B;;AACA,YAAKI,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEL;AADK,OAAd;;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,MAAKQ,KAAL,CAAWD,KAA7C,EAbsC,CActC;AACD,KAvBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAEX,KAAK,CAACK;AADF,KAAb;AAGA,UAAKQ,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AALiB;AAMlB;;;;AAmBD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;6CACyBd,K,EAAOY,K,EAAO;AACrC,UAAIZ,KAAK,CAACK,KAAN,CAAYI,MAAZ,KAAuBG,KAAK,CAACD,KAAN,CAAYF,MAAvC,EAA+C;AAC7C,eAAO;AACLE,UAAAA,KAAK,EAAEX,KAAK,CAACK;AADR,SAAP;AAGD;AACF,K,CAED;AACA;AACA;AACA;AACA;;;;6BAES;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AADO,UAECC,KAFD,GAEW,KAAKL,KAFhB,CAECK,KAFD;AAAA,UAGCM,KAHD,GAGW,KAAKC,KAHhB,CAGCD,KAHD;AAIP,UAAIA,KAAK,CAACF,MAAV,EACE,OACE,MAAC,iBAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,QAAQ,EAAE,EAFZ;AAGE,QAAA,SAAS,EAAE,KAAKI,SAHlB;AAIE,QAAA,KAAK,EAAEF;AAJT,QADF;AAQF,aAAO,IAAP;AACD;;;;EAtEoBpB,S;;gBAAjBQ,Q,iBACiBF,Y;;AAwEvB,eAAeE,QAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA","sourcesContent":["import React, { useContext, useEffect, useState, Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"react-sortable-hoc\";\nimport { TodosContext } from \"../components/contexts/todos.context\";\nimport { TodosProvider } from \"../components/contexts/todos.context\";\n\nclass TodoList extends Component {\n  static contextType = TodosContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: props.posts\n    };\n    this.onSortEnd = this.onSortEnd.bind(this);\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    console.log(\"before sort: \", this.props.posts);\n    let arr = this.props.posts;\n    arr = arr.slice();\n    arr.splice(\n      newIndex < 0 ? arr.length + newIndex : newIndex,\n      0,\n      arr.splice(oldIndex, 1)[0]\n    );\n    console.log(\"after sort: \", arr);\n    this.setState({\n      tasks: arr\n    });\n    console.log(\"this.state.tasks: \", this.state.tasks);\n    // return arr;\n  };\n\n  // console.log(this.state);\n  // this.setState({\n  //   tasks: arrayMove(this.state, oldIndex, newIndex)\n  // });\n  // // this.setState({\n  // //   tasks: arrayMove([4, 5, 6, 7, 8, 0], oldIndex, newIndex)\n  // // });\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.posts !== prevProps.posts)\n  //     this.setState({\n  //       tasks: this.context\n  //     });\n  // }\n  getDerivedStateFromProps(props, state) {\n    if (props.posts.length !== state.tasks.length) {\n      return {\n        tasks: props.posts\n      };\n    }\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   this.setState({\n  //     tasks: nextProps.posts\n  //   });\n  // }\n\n  render() {\n    console.log(\"todo list rendered!\");\n    const { posts } = this.props;\n    const { tasks } = this.state;\n    if (tasks.length)\n      return (\n        <DraggableTodoList\n          axis=\"y\"\n          distance={20}\n          onSortEnd={this.onSortEnd}\n          posts={tasks}\n        ></DraggableTodoList>\n      );\n    return null;\n  }\n}\n\nexport default TodoList;\n\n// function TodoList(props) {\n\n//   if (props.posts.length)\n//     return (\n//       <DraggableTodoList\n//         axis=\"y\"\n//         distance={20}\n//         onSortEnd={onSortEnd}\n//         {...props}\n//       ></DraggableTodoList>\n//     );\n//   return null;\n// }\n\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\n/* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n</List> */\n"]},"metadata":{},"sourceType":"module"}