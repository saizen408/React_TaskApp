{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport uuid from 'uuid/v4';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\nconst token = cookies.get('token');\n\nconst todoReducer = async (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      const description = action.task;\n      const body = {\n        description\n      };\n\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const targetUrl = 'https://owusu-task-manager.herokuapp.com/users/tasks';\n        const response = await axios({\n          url: proxyUrl + targetUrl,\n          method: 'post',\n          data: body,\n          headers: {\n            Authorization: 'Bearer ' + token\n          }\n        });\n        const newTask = await response.json();\n        console.log(newTask);\n        return [...state, {\n          _id: newTask._id,\n          description: newTask.description,\n          completed: false\n        }];\n      } catch (e) {\n        console.log('token: ', token);\n        console.log('body', body);\n        console.log(e);\n      }\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        completed: !todo.completed\n      }) : todo);\n\n    case 'EDIT':\n      return state.map(todo => todo.id === action.id ? _objectSpread({}, todo, {\n        task: action.newTask\n      }) : todo);\n\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\n\nexport default todoReducer; // {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["uuid","axios","Cookies","cookies","token","get","todoReducer","state","action","type","description","task","body","proxyUrl","targetUrl","response","url","method","data","headers","Authorization","newTask","json","console","log","_id","completed","e","filter","todo","id","map"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,MAAME,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;;AAEA,MAAMC,WAAW,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,YAAMC,WAAW,GAAGF,MAAM,CAACG,IAA3B;AACA,YAAMC,IAAI,GAAG;AAAEF,QAAAA;AAAF,OAAb;;AACA,UAAI;AACF,cAAMG,QAAQ,GAAG,sCAAjB;AACA,cAAMC,SAAS,GACb,sDADF;AAEA,cAAMC,QAAQ,GAAG,MAAMd,KAAK,CAAC;AAC3Be,UAAAA,GAAG,EAAEH,QAAQ,GAAGC,SADW;AAE3BG,UAAAA,MAAM,EAAE,MAFmB;AAG3BC,UAAAA,IAAI,EAAEN,IAHqB;AAI3BO,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE,YAAYhB;AADpB;AAJkB,SAAD,CAA5B;AAQA,cAAMiB,OAAO,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,eAAO,CACL,GAAGd,KADE,EAEL;AACEkB,UAAAA,GAAG,EAAEJ,OAAO,CAACI,GADf;AAEEf,UAAAA,WAAW,EAAEW,OAAO,CAACX,WAFvB;AAGEgB,UAAAA,SAAS,EAAE;AAHb,SAFK,CAAP;AAQD,OAtBD,CAsBE,OAAOC,CAAP,EAAU;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBpB,KAAvB;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBZ,IAApB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;;AAEH,SAAK,QAAL;AACE,aAAOpB,KAAK,CAACqB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYtB,MAAM,CAACsB,EAAxC,CAAP;;AACF,SAAK,QAAL;AACE,aAAOvB,KAAK,CAACwB,GAAN,CAAUF,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYtB,MAAM,CAACsB,EAAnB,qBAA6BD,IAA7B;AAAmCH,QAAAA,SAAS,EAAE,CAACG,IAAI,CAACH;AAApD,WAAkEG,IAD7D,CAAP;;AAGF,SAAK,MAAL;AACE,aAAOtB,KAAK,CAACwB,GAAN,CAAUF,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYtB,MAAM,CAACsB,EAAnB,qBAA6BD,IAA7B;AAAmClB,QAAAA,IAAI,EAAEH,MAAM,CAACa;AAAhD,WAA4DQ,IADvD,CAAP;;AAGF;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,aAAOjB,KAAP;AA5CJ;AA8CD,CA/CD;;AAiDA,eAAeD,WAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import uuid from 'uuid/v4';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\n\nconst cookies = new Cookies();\nconst token = cookies.get('token');\n\nconst todoReducer = async (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      const description = action.task;\n      const body = { description };\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const targetUrl =\n          'https://owusu-task-manager.herokuapp.com/users/tasks';\n        const response = await axios({\n          url: proxyUrl + targetUrl,\n          method: 'post',\n          data: body,\n          headers: {\n            Authorization: 'Bearer ' + token\n          }\n        });\n        const newTask = await response.json();\n        console.log(newTask);\n        return [\n          ...state,\n          {\n            _id: newTask._id,\n            description: newTask.description,\n            completed: false\n          }\n        ];\n      } catch (e) {\n        console.log('token: ', token);\n        console.log('body', body);\n        console.log(e);\n      }\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case 'EDIT':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\n      );\n    default:\n      console.log('case not found in reducer');\n      return state;\n  }\n};\n\nexport default todoReducer;\n\n// {type: 'ADD', task: \"Walk the Dog\"}\n// {type: 'REMOVE', id: 156651}\n// {type: 'EDIT', id: 112839, newTask: 'Walk Cat'}\n// {type: 'LOGIN', email: '112839@fgjd.com', password: '12344568'}\n// {type: 'LOGIN', emaill: action.email, password: action.password}\n"]},"metadata":{},"sourceType":"module"}