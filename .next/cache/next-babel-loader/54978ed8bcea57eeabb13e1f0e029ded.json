{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport $ from 'jquery'; //token , starter tasks?, reducer\n\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  console.log('token:', token); //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n\n  var _useReducer = useReducer(todoReducer, defaultVal, function () {\n    //this function checks database for existing tasks for the user\n    var val;\n\n    try {\n      var setHeader = function setHeader(xhr) {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      };\n\n      var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      var targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n      $.ajax({\n        url: proxyUrl + targetUrl,\n        type: 'GET',\n        dataType: 'json',\n        beforeSend: setHeader,\n        success: function success(res) {\n          console.log(res);\n        }\n      });\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n\n    return val;\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","$","useDBReducer","token","defaultVal","todoReducer","console","log","val","setHeader","xhr","setRequestHeader","proxyUrl","targetUrl","ajax","url","type","dataType","beforeSend","success","res","e","error","state","dispatch"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB,EADoD,CAEpD;AACA;;AAHoD,oBAI1BJ,UAAU,CAACM,WAAD,EAAcD,UAAd,EAA0B,YAAM;AAClE;AACA,QAAII,GAAJ;;AACA,QAAI;AAAA,UAaOC,SAbP,GAaF,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACtBA,QAAAA,GAAG,CAACC,gBAAJ,CAAqB,eAArB,EAAsC,YAAYR,KAAlD;AACD,OAfC;;AACF,UAAMS,QAAQ,GAAG,sCAAjB;AACA,UAAMC,SAAS,GAAG,gDAAlB;AAEAZ,MAAAA,CAAC,CAACa,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAEH,QAAQ,GAAGC,SADX;AAELG,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,UAAU,EAAET,SAJP;AAKLU,QAAAA,OAAO,EAAE,iBAASC,GAAT,EAAc;AACrBd,UAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD;AAPI,OAAP;AAYD,KAhBD,CAgBE,OAAOC,CAAP,EAAU;AACVf,MAAAA,OAAO,CAACgB,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAb,MAAAA,GAAG,GAAGJ,UAAN;AACD;;AACD,WAAOI,GAAP;AACD,GAxBmC,CAJgB;AAAA,MAI7Ce,KAJ6C;AAAA,MAItCC,QAJsC;;AA8BpD,SAAO,CAACD,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAAStB,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport $ from 'jquery';\n\n//token , starter tasks?, reducer\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  console.log('token:', token);\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let val;\n    try {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n      $.ajax({\n        url: proxyUrl + targetUrl,\n        type: 'GET',\n        dataType: 'json',\n        beforeSend: setHeader,\n        success: function(res) {\n          console.log(res);\n        }\n      });\n      function setHeader(xhr) {\n        xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n      }\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}