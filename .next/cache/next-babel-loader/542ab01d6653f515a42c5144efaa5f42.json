{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { UserContext, AuthenticateContext } from \"./contexts/user.context\";\nimport useInputState from \"./hooks/useInputState\";\nimport cubeSpinner from \"./styles/cubeSpinner\";\nimport { useSnackbar } from \"notistack\";\nimport { words } from \"./words\";\n\nfunction Form(props) {\n  var _useContext = useContext(LanguageContext),\n      language = _useContext.language,\n      changeLanguage = _useContext.changeLanguage;\n\n  var token = useContext(UserContext);\n  var authenticate = useContext(AuthenticateContext);\n  var classes = props.classes;\n  var _words$language = words[language],\n      email = _words$language.email,\n      signIn = _words$language.signIn,\n      password = _words$language.password,\n      remember = _words$language.remember,\n      errorMessage = _words$language.errorMessage,\n      demoMessage = _words$language.demoMessage;\n\n  var _useInputState = useInputState(\"\"),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      emailVal = _useInputState2[0],\n      handleEmailChange = _useInputState2[1],\n      emailReset = _useInputState2[2];\n\n  var _useInputState3 = useInputState(\"\"),\n      _useInputState4 = _slicedToArray(_useInputState3, 3),\n      passVal = _useInputState4[0],\n      handlePassChange = _useInputState4[1],\n      passReset = _useInputState4[2];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoader = _React$useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar,\n      closeSnackbar = _useSnackbar.closeSnackbar;\n\n  var handleErrorMessage = function handleErrorMessage() {\n    var message = errorMessage;\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  };\n\n  var handleDemoMessage = function handleDemoMessage() {\n    var message = demoMessage;\n    enqueueSnackbar(message, {\n      onEnter: closeSnackbar(),\n      preventDuplicate: true,\n      variant: \"info\",\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      persist: true\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    closeSnackbar();\n    e.preventDefault();\n    setLoader(true);\n    authenticate({\n      type: \"LOGIN\",\n      email: emailVal,\n      password: passVal\n    });\n    setTimeout(function () {\n      if (token.error == true) {\n        setLoader(false);\n        handleErrorMessage();\n        setTimeout(function () {\n          handleDemoMessage();\n        }, 3000);\n      }\n    }, 2000);\n    emailReset();\n    passReset();\n  };\n\n  useEffect(function () {\n    handleDemoMessage();\n  }, [language]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: classes.loader\n    }, cubeSpinner());\n  }\n\n  return __jsx(\"main\", {\n    className: classes.main\n  }, __jsx(Paper, {\n    elevation: 3,\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    variant: \"h5\"\n  }, signIn), __jsx(Select, {\n    value: language,\n    onChange: changeLanguage\n  }, __jsx(MenuItem, {\n    value: \"en\"\n  }, \"English\"), __jsx(MenuItem, {\n    value: \"fr\"\n  }, \"French\"), __jsx(MenuItem, {\n    value: \"es\"\n  }, \"Spanish\"), __jsx(MenuItem, {\n    value: \"de\"\n  }, \"German\"), __jsx(MenuItem, {\n    value: \"ja\"\n  }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit\n  }, __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, email), __jsx(Input, {\n    id: \"email\",\n    name: \"email\",\n    value: emailVal,\n    onChange: handleEmailChange,\n    autoFocus: true\n  })), __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, password), __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    value: passVal,\n    onChange: handlePassChange,\n    autoFocus: true\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\"\n    }),\n    label: remember\n  }), __jsx(Button, {\n    variant: \"contained\",\n    onClick: closeSnackbar(handleDemoMessage),\n    type: \"submit\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submit\n  }, signIn))));\n}\n\nexport default withStyles(styles)(Form);","map":null,"metadata":{},"sourceType":"module"}