{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport jquery from 'jquery';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Todo from './Todo';\nimport { TodosContext } from './contexts/todos.context';\nimport { LanguageContext } from './contexts/LanguageContext';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n  const token = useContext(LanguageContext);\n  console.log(token);\n  console.log(window.global.token);\n  if (todos.length) return __jsx(Paper, null, __jsx(List, null, todos.map((todo, i) => // To add a key to a fragment, we have to use the long-hand version\n  __jsx(React.Fragment, {\n    key: i\n  }, __jsx(Todo, _extends({}, todo, {\n    key: todo.id\n  })), i < todos.length - 1 && __jsx(Divider, null)))));\n  return null;\n}\n\nexport default TodoList; // const Index = ({ todos }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// TodoList.getInitialProps = async () => {\n//   // https://jsonplaceholder.typicode.com/posts\n//   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n//   const { data } = res; // const data = res.data\n//   return {\n//     posts: data\n//   };\n// };\n// export default TodoList;\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n// $.ajax({\n//     url: proxyUrl + targetUrl,\n//     type: 'GET',\n//     dataType: 'json',\n//     beforeSend: setHeader\n//   }).then(addTasks);\n//   function setHeader(xhr) {\n//     xhr.setRequestHeader('Authorization', 'Bearer ' + userInfo.token);\n//   }","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","jquery","Paper","List","Divider","Todo","TodosContext","LanguageContext","TodoList","todos","token","console","log","window","global","length","map","todo","i","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,eAAT,QAAgC,4BAAhC;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,KAAK,GAAGT,UAAU,CAACM,YAAD,CAAxB;AACA,QAAMI,KAAK,GAAGV,UAAU,CAACO,eAAD,CAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcJ,KAA1B;AAEA,MAAID,KAAK,CAACM,MAAV,EACE,OACE,MAAC,KAAD,QACE,MAAC,IAAD,QACGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KACT;AACA,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA;AAArB,KACE,MAAC,IAAD,eAAUD,IAAV;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACE;AAA1B,KADF,EAEGD,CAAC,GAAGT,KAAK,CAACM,MAAN,GAAe,CAAnB,IAAwB,MAAC,OAAD,OAF3B,CAFD,CADH,CADF,CADF;AAaF,SAAO,IAAP;AACD;;AAED,eAAeP,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useContext } from 'react';\nimport jquery from 'jquery';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Todo from './Todo';\nimport { TodosContext } from './contexts/todos.context';\nimport { LanguageContext } from './contexts/LanguageContext';\n\nfunction TodoList() {\n  const todos = useContext(TodosContext);\n  const token = useContext(LanguageContext);\n  console.log(token);\n  console.log(window.global.token);\n\n  if (todos.length)\n    return (\n      <Paper>\n        <List>\n          {todos.map((todo, i) => (\n            // To add a key to a fragment, we have to use the long-hand version\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo.id} />\n              {i < todos.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n}\n\nexport default TodoList;\n\n// const Index = ({ todos }) => {\n//   return (\n//     <div>\n//       <h1>Our Index Page!!!</h1>\n//       <ul>\n//         {posts.map(post => (\n//           <li key={post.id}>{post.title}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// TodoList.getInitialProps = async () => {\n//   // https://jsonplaceholder.typicode.com/posts\n//   const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n//   const { data } = res; // const data = res.data\n\n//   return {\n//     posts: data\n//   };\n// };\n// export default TodoList;\n\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n// $.ajax({\n//     url: proxyUrl + targetUrl,\n//     type: 'GET',\n//     dataType: 'json',\n//     beforeSend: setHeader\n//   }).then(addTasks);\n\n//   function setHeader(xhr) {\n//     xhr.setRequestHeader('Authorization', 'Bearer ' + userInfo.token);\n//   }\n"]},"metadata":{},"sourceType":"module"}