{"ast":null,"code":"import axios from \"axios\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = {\n        description\n      };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        const taskId = res.data._id; //set taskId to a cookie to TodoList.js can add it to its state\n\n        cookies.get(\"taskId\", taskId);\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"TOGGLE\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = {\n          completed: isDone\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = {\n          description\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Cookies","cookies","token","get","todoReducer","state","action","type","description","task","body","proxyUrl","targetUrl","res","url","method","data","headers","Authorization","taskId","_id","e","console","log","id","isDone","completed","updateData","newTask"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = { description };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        const taskId = res.data._id;\n        //set taskId to a cookie to TodoList.js can add it to its state\n        cookies.get(\"taskId\", taskId);\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    case \"TOGGLE\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = { completed: isDone };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = { description };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}