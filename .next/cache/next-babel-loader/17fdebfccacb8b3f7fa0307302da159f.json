{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nvar cookies = new Cookies();\nexport function handleAuthSSR(ctx) {\n  var token, proxyUrl, targetUrl, res;\n  return _regeneratorRuntime.async(function handleAuthSSR$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token = null;\n\n          if (ctx.req) {\n            token = ctx.req.headers.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n          } else {\n            token = cookies.get(\"token\");\n          }\n\n          proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n          _context.prev = 4;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(axios.get(proxyUrl + targetUrl, {\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 7:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](4);\n          console.error(\"Error:\", _context.t0);\n\n          if (ctx.res) {\n            ctx.res.writeHead(302, {\n              Location: \"/\"\n            });\n            ctx.res.end();\n          } else {\n            Router.push(\"/\");\n          }\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[4, 11]]);\n}","map":null,"metadata":{},"sourceType":"module"}