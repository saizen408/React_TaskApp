{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { UserContext, AuthenticateContext } from \"./contexts/user.context\";\nimport { TodosContext } from \"./contexts/todos.context\";\nimport useInputState from \"./hooks/useInputState\";\nimport { Cookies } from \"react-cookie\";\nimport cubeSpinner from \"./styles/cubeSpinner\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nconst words = {\n  english: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\"\n  },\n  french: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\"\n  },\n  spanish: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\"\n  },\n  german: {\n    signIn: \"anmelden\",\n    email: \"E-Mail-Addresse\",\n    password: \"Passwort\",\n    remember: \"Behalte mich in Erinnerung\"\n  },\n  日本語: {\n    signIn: \"サインイン\",\n    email: \"電子メールアドレス\",\n    password: \"パスワード\",\n    remember: \"私を覚えている\"\n  }\n};\nconst cookies = new Cookies();\n\nfunction Form(props) {\n  const {\n    language,\n    changeLanguage\n  } = useContext(LanguageContext);\n  const token = useContext(UserContext);\n  const authenticate = useContext(AuthenticateContext);\n  const {\n    classes\n  } = props;\n  const {\n    email,\n    signIn,\n    password,\n    remember\n  } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState(\"\");\n  const [passVal, handlePassChange, passReset] = useInputState(\"\");\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n  const {\n    enqueueSnackbar,\n    closeSnackbar\n  } = useSnackbar();\n\n  const handleError = () => {\n    const message = \"Email and/or Password is incorrect\";\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  };\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoader(true);\n    authenticate({\n      type: \"LOGIN\",\n      email: emailVal,\n      password: passVal\n    });\n    console.log(\"submitted!\");\n    setTimeout(() => {\n      if (token.error == true) {\n        console.log(\"setting loading to true\");\n        setLoader(false);\n        setSnackOpen(true);\n      }\n    }, 2000);\n    emailReset();\n    passReset();\n  };\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: classes.loader\n    }, cubeSpinner());\n  }\n\n  return __jsx(\"main\", {\n    className: classes.main\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    variant: \"h5\"\n  }, signIn), __jsx(Select, {\n    value: language,\n    onChange: changeLanguage\n  }, __jsx(MenuItem, {\n    value: \"english\"\n  }, \"English\"), __jsx(MenuItem, {\n    value: \"french\"\n  }, \"French\"), __jsx(MenuItem, {\n    value: \"spanish\"\n  }, \"Spanish\"), __jsx(MenuItem, {\n    value: \"german\"\n  }, \"German\"), __jsx(MenuItem, {\n    value: \"\\u65E5\\u672C\\u8A9E\"\n  }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: () => {\n      handleSubmit();\n      handleError();\n    }\n  }, __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, email), __jsx(Input, {\n    id: \"email\",\n    name: \"email\",\n    value: emailVal,\n    onChange: handleEmailChange,\n    autoFocus: true\n  })), __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, password), __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    value: passVal,\n    onChange: handlePassChange,\n    autoFocus: true\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\"\n    }),\n    label: remember\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submit\n  }, signIn))), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    ContentProps: {\n      \"aria-describedby\": \"message-id\"\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, \"Email and/or Password is incorrect\"),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: handleClose\n    }, __jsx(CloseIcon, null))]\n  }));\n}\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Form.js"],"names":["React","useContext","Router","Avatar","Button","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","Snackbar","IconButton","CloseIcon","withStyles","styles","LanguageContext","ThemeContext","UserContext","AuthenticateContext","TodosContext","useInputState","Cookies","cubeSpinner","SnackbarProvider","useSnackbar","words","english","signIn","email","password","remember","french","spanish","german","日本語","cookies","Form","props","language","changeLanguage","token","authenticate","classes","emailVal","handleEmailChange","emailReset","passVal","handlePassChange","passReset","open","setSnackOpen","useState","loading","setLoader","enqueueSnackbar","closeSnackbar","handleError","message","variant","handleClick","handleClose","event","reason","handleSubmit","e","preventDefault","type","console","log","setTimeout","error","loader","main","paper","avatar","form","submit","vertical","horizontal","close"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport Router from \"next/router\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles/FormStyles\";\nimport { LanguageContext } from \"./contexts/LanguageContext\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { UserContext, AuthenticateContext } from \"./contexts/user.context\";\nimport { TodosContext } from \"./contexts/todos.context\";\nimport useInputState from \"./hooks/useInputState\";\nimport { Cookies } from \"react-cookie\";\nimport cubeSpinner from \"./styles/cubeSpinner\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nconst words = {\n  english: {\n    signIn: \"Sign In\",\n    email: \"Email Address\",\n    password: \"Password\",\n    remember: \"Remember Me\"\n  },\n  french: {\n    signIn: \"Se Connecter\",\n    email: \"Adresse Électronique\",\n    password: \"Mot de Passe\",\n    remember: \"Souviens-toi De Moi\"\n  },\n  spanish: {\n    signIn: \"Registrarse\",\n    email: \"Correo Electrónico\",\n    password: \"Contraseña\",\n    remember: \"Recuérdame\"\n  },\n  german: {\n    signIn: \"anmelden\",\n    email: \"E-Mail-Addresse\",\n    password: \"Passwort\",\n    remember: \"Behalte mich in Erinnerung\"\n  },\n\n  日本語: {\n    signIn: \"サインイン\",\n    email: \"電子メールアドレス\",\n    password: \"パスワード\",\n    remember: \"私を覚えている\"\n  }\n};\n\nconst cookies = new Cookies();\nfunction Form(props) {\n  const { language, changeLanguage } = useContext(LanguageContext);\n  const token = useContext(UserContext);\n  const authenticate = useContext(AuthenticateContext);\n  const { classes } = props;\n  const { email, signIn, password, remember } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState(\"\");\n  const [passVal, handlePassChange, passReset] = useInputState(\"\");\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const handleError = () => {\n    const message = \"Email and/or Password is incorrect\";\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  };\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoader(true);\n    authenticate({ type: \"LOGIN\", email: emailVal, password: passVal });\n    console.log(\"submitted!\");\n    setTimeout(() => {\n      if (token.error == true) {\n        console.log(\"setting loading to true\");\n        setLoader(false);\n        setSnackOpen(true);\n      }\n    }, 2000);\n    emailReset();\n    passReset();\n  };\n\n  if (loading) {\n    return <div className={classes.loader}>{cubeSpinner()}</div>;\n  }\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{signIn}</Typography>\n        <Select value={language} onChange={changeLanguage}>\n          <MenuItem value=\"english\">English</MenuItem>\n          <MenuItem value=\"french\">French</MenuItem>\n          <MenuItem value=\"spanish\">Spanish</MenuItem>\n          <MenuItem value=\"german\">German</MenuItem>\n          <MenuItem value=\"日本語\">日本語</MenuItem>\n        </Select>\n        {/* /*add the snackbar init here*/}\n        <form\n          className={classes.form}\n          onSubmit={() => {\n            handleSubmit();\n            handleError();\n          }}\n        >\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">{email}</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              value={emailVal}\n              onChange={handleEmailChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">{password}</InputLabel>\n            <Input\n              id=\"password\"\n              name=\"password\"\n              value={passVal}\n              onChange={handlePassChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox color=\"primary\" />}\n            label={remember}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            fullWidth\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {signIn}\n          </Button>\n        </form>\n      </Paper>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={\n          <span id=\"message-id\">Email and/or Password is incorrect</span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </main>\n  );\n}\n\nexport default withStyles(styles)(Form);\n"]},"metadata":{},"sourceType":"module"}