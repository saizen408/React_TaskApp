{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nvar cookies = new Cookies();\nvar token = cookies.get(\"token\");\n\nvar todoReducer = function todoReducer(state, action) {\n  var newTasks, description, body, proxyUrl, targetUrl, res, data, _proxyUrl, _targetUrl, _res;\n\n  return _regeneratorRuntime.async(function todoReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"state before switch/case executes: \", state);\n          _context.t0 = action.type;\n          _context.next = _context.t0 === \"ADD\" ? 4 : _context.t0 === \"REMOVE\" ? 22 : 37;\n          break;\n\n        case 4:\n          description = action.task;\n          body = {\n            description: description\n          };\n          _context.prev = 6;\n          proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(axios({\n            url: proxyUrl + targetUrl,\n            method: \"post\",\n            data: body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 11:\n          res = _context.sent;\n          data = res.data;\n          newTasks = [].concat(_toConsumableArray(state), [{\n            _id: data._id,\n            description: data.description,\n            completed: false,\n            updatedAt: data.updatedAt\n          }]);\n          Router.push(\"/TodoAppPage\");\n          return _context.abrupt(\"return\", newTasks);\n\n        case 19:\n          _context.prev = 19;\n          _context.t1 = _context[\"catch\"](6);\n          console.log(_context.t1);\n\n        case 22:\n          console.log(\"remove clicked!\");\n          _context.prev = 23;\n          _proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          _context.next = 28;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl + _targetUrl,\n            method: \"delete\",\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 28:\n          _res = _context.sent;\n          Router.push(\"/TodoAppPage\");\n          return _context.abrupt(\"return\", state.filter(function (todo) {\n            return todo._id !== action._id;\n          }));\n\n        case 34:\n          _context.prev = 34;\n          _context.t2 = _context[\"catch\"](23);\n          console.log(_context.t2);\n\n        case 37:\n          return _context.abrupt(\"return\", state);\n\n        case 38:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[6, 19], [23, 34]]);\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Router","Cookies","cookies","token","get","todoReducer","state","action","console","log","type","description","task","body","proxyUrl","targetUrl","url","method","data","headers","Authorization","res","newTasks","_id","completed","updatedAt","push","id","filter","todo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,IAAME,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,KAAP,EAAcC,MAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,KAAnD;AADkB,wBAEVC,MAAM,CAACG,IAFG;AAAA,0CAGX,KAHW,uBAqCX,QArCW;AAAA;;AAAA;AAMRC,UAAAA,WANQ,GAMMJ,MAAM,CAACK,IANb;AAORC,UAAAA,IAPQ,GAOD;AAAEF,YAAAA,WAAW,EAAXA;AAAF,WAPC;AAAA;AAUNG,UAAAA,QAVM,GAUK,sCAVL;AAWNC,UAAAA,SAXM,GAWM,gDAXN;AAAA;AAAA,2CAYMhB,KAAK,CAAC;AACtBiB,YAAAA,GAAG,EAAEF,QAAQ,GAAGC,SADM;AAEtBE,YAAAA,MAAM,EAAE,MAFc;AAGtBC,YAAAA,IAAI,EAAEL,IAHgB;AAItBM,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE,YAAYjB;AADpB;AAJa,WAAD,CAZX;;AAAA;AAYNkB,UAAAA,GAZM;AAoBNH,UAAAA,IApBM,GAoBCG,GAAG,CAACH,IApBL;AAqBZI,UAAAA,QAAQ,gCACHhB,KADG,IAEN;AACEiB,YAAAA,GAAG,EAAEL,IAAI,CAACK,GADZ;AAEEZ,YAAAA,WAAW,EAAEO,IAAI,CAACP,WAFpB;AAGEa,YAAAA,SAAS,EAAE,KAHb;AAIEC,YAAAA,SAAS,EAAEP,IAAI,CAACO;AAJlB,WAFM,EAAR;AASAzB,UAAAA,MAAM,CAAC0B,IAAP,CAAY,cAAZ;AA9BY,2CA+BLJ,QA/BK;;AAAA;AAAA;AAAA;AAkCZd,UAAAA,OAAO,CAACC,GAAR;;AAlCY;AAsCdD,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAtCc;AAwCNK,UAAAA,SAxCM,GAwCK,sCAxCL;AAyCNC,UAAAA,UAzCM,4DAyCwDR,MAAM,CAACoB,EAzC/D;AAAA;AAAA,2CA0CM5B,KAAK,CAAC;AACtBiB,YAAAA,GAAG,EAAEF,SAAQ,GAAGC,UADM;AAEtBE,YAAAA,MAAM,EAAE,QAFc;AAGtBE,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE,YAAYjB;AADpB;AAHa,WAAD,CA1CX;;AAAA;AA0CNkB,UAAAA,IA1CM;AAiDZrB,UAAAA,MAAM,CAAC0B,IAAP,CAAY,cAAZ;AAjDY,2CAkDLpB,KAAK,CAACsB,MAAN,CAAa,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACN,GAAL,KAAahB,MAAM,CAACgB,GAAxB;AAAA,WAAjB,CAlDK;;AAAA;AAAA;AAAA;AAqDZf,UAAAA,OAAO,CAACC,GAAR;;AArDY;AAAA,2CAiGPH,KAjGO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAqGA,eAAeD,WAAf","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      let newTasks;\n\n      const description = action.task;\n      const body = { description };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        const data = res.data;\n        newTasks = [\n          ...state,\n          {\n            _id: data._id,\n            description: data.description,\n            completed: false,\n            updatedAt: data.updatedAt\n          }\n        ];\n        Router.push(\"/TodoAppPage\");\n        return newTasks;\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        Router.push(\"/TodoAppPage\");\n        return state.filter(todo => todo._id !== action._id);\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    // case \"TOGGLE\":\n    //   console.log(\"toggle clicked!\");\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const isDone = !action.completed;\n    //     const updateData = { completed: isDone };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: updateData,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    // case \"EDIT\":\n    //   try {\n    //     const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    //     const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n    //     const description = action.newTask;\n    //     const body = { description };\n    //     const res = await axios({\n    //       url: proxyUrl + targetUrl,\n    //       method: \"patch\",\n    //       data: body,\n    //       headers: {\n    //         Authorization: \"Bearer \" + token\n    //       }\n    //     });\n    //     Router.push(\"/TodoAppPage\");\n    //     break;\n    //   } catch (e) {\n    //     console.log(e);\n    //   }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}