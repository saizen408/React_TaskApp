{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState, Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"array-move\";\nimport { TodosContext } from \"../components/contexts/todos.context\";\nimport { TodosProvider } from \"../components/contexts/todos.context\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSortEnd\", ({\n      oldIndex,\n      newIndex\n    }) => {\n      console.log(\"inside onSortEnd:\", this.props.post);\n      console.log(this.state);\n      this.setState(console.log(\"test\")); // this.setState({\n      //   tasks: arrayMove([4, 5, 6, 7, 8, 0], oldIndex, newIndex)\n      // });\n    });\n\n    this.state = {\n      tasks: props.posts\n    };\n    this.onSortEnd = this.onSortEnd.bind(this);\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.posts !== prevProps.posts)\n  //     this.setState({\n  //       tasks: this.context\n  //     });\n  // }\n  // componentWillReceiveProps(nextProps) {\n  //   this.setState({\n  //     tasks: nextProps.posts\n  //   });\n  // }\n  render() {\n    const {\n      posts\n    } = this.props;\n    if (posts.length) return __jsx(DraggableTodoList, {\n      axis: \"y\",\n      distance: 20,\n      onSortEnd: this.onSortEnd,\n      posts: posts\n    });\n    return null;\n  }\n\n}\n\n_defineProperty(TodoList, \"contextType\", TodosContext);\n\nexport default TodoList; // function TodoList(props) {\n//   if (props.posts.length)\n//     return (\n//       <DraggableTodoList\n//         axis=\"y\"\n//         distance={20}\n//         onSortEnd={onSortEnd}\n//         {...props}\n//       ></DraggableTodoList>\n//     );\n//   return null;\n// }\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\n/* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n</List> */","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/TodoList.js"],"names":["React","useContext","useEffect","useState","Component","Paper","List","Divider","DraggableTodoList","arrayMove","TodosContext","TodosProvider","TodoList","constructor","props","oldIndex","newIndex","console","log","post","state","setState","tasks","posts","onSortEnd","bind","render","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA,SAASC,aAAT,QAA8B,sCAA9B;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAG/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,uCAQP,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,KAA4B;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKJ,KAAL,CAAWK,IAA5C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACA,WAAKC,QAAL,CAAcJ,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAd,EAHsC,CAItC;AACA;AACA;AACD,KAfkB;;AAEjB,SAAKE,KAAL,GAAa;AACXE,MAAAA,KAAK,EAAER,KAAK,CAACS;AADF,KAAb;AAGA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAWD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,QAAIS,KAAK,CAACI,MAAV,EACE,OACE,MAAC,iBAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,SAAS,EAAE,KAAKH,SAHlB;AAIE,MAAA,KAAK,EAAED;AAJT,MADF;AAQF,WAAO,IAAP;AACD;;AA7C8B;;gBAA3BX,Q,iBACiBF,Y;;AA+CvB,eAAeE,QAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA","sourcesContent":["import React, { useContext, useEffect, useState, Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport DraggableTodoList from \"./DraggableTodoList\";\nimport { arrayMove } from \"array-move\";\nimport { TodosContext } from \"../components/contexts/todos.context\";\nimport { TodosProvider } from \"../components/contexts/todos.context\";\n\nclass TodoList extends Component {\n  static contextType = TodosContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: props.posts\n    };\n    this.onSortEnd = this.onSortEnd.bind(this);\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    console.log(\"inside onSortEnd:\", this.props.post);\n    console.log(this.state);\n    this.setState(console.log(\"test\"));\n    // this.setState({\n    //   tasks: arrayMove([4, 5, 6, 7, 8, 0], oldIndex, newIndex)\n    // });\n  };\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.posts !== prevProps.posts)\n  //     this.setState({\n  //       tasks: this.context\n  //     });\n  // }\n\n  // componentWillReceiveProps(nextProps) {\n  //   this.setState({\n  //     tasks: nextProps.posts\n  //   });\n  // }\n\n  render() {\n    const { posts } = this.props;\n    if (posts.length)\n      return (\n        <DraggableTodoList\n          axis=\"y\"\n          distance={20}\n          onSortEnd={this.onSortEnd}\n          posts={posts}\n        ></DraggableTodoList>\n      );\n    return null;\n  }\n}\n\nexport default TodoList;\n\n// function TodoList(props) {\n\n//   if (props.posts.length)\n//     return (\n//       <DraggableTodoList\n//         axis=\"y\"\n//         distance={20}\n//         onSortEnd={onSortEnd}\n//         {...props}\n//       ></DraggableTodoList>\n//     );\n//   return null;\n// }\n\n// const [state, setState] = useState(initialVal);\n//   const toggle = () => {\n//     setState(!state);\n//   };\n\n/* <List>\n          {props.posts.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo._id} />\n              {i < props.posts.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n</List> */\n"]},"metadata":{},"sourceType":"module"}