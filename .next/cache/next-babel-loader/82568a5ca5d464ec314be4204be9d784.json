{"ast":null,"code":"import axios from 'axios';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie'; // set up cookies\n\nconst cookies = new Cookies();\nexport async function handleAuthSSR(ctx) {\n  let token = null; // if context has request info aka Server Side\n\n  if (ctx.req) {\n    // ugly way to get cookie value from a string of values\n    // good enough for demostration\n    token = ctx.req.headers.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, '$1');\n  } else {\n    // we dont have request info aka Client Side\n    token = cookies.get('token');\n    console.log('got the token from authssr:', token);\n  }\n\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n  try {\n    const res = await axios.get(proxyUrl + targetUrl, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    console.log(res);\n    return res;\n  } catch (e) {\n    console.error('Error:', e);\n\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: '/'\n      });\n      ctx.res.end();\n    } else {\n      Router.push('/');\n    }\n  }\n}","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/handleAuthSSR.js"],"names":["axios","Router","Cookies","cookies","handleAuthSSR","ctx","token","req","headers","cookie","replace","get","console","log","proxyUrl","targetUrl","res","Authorization","e","error","writeHead","Location","end","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CACA;;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,OAAO,eAAeE,aAAf,CAA6BC,GAA7B,EAAkC;AACvC,MAAIC,KAAK,GAAG,IAAZ,CADuC,CAGvC;;AACA,MAAID,GAAG,CAACE,GAAR,EAAa;AACX;AACA;AACAD,IAAAA,KAAK,GAAGD,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CACN,8CADM,EAEN,IAFM,CAAR;AAID,GAPD,MAOO;AACL;AACAJ,IAAAA,KAAK,GAAGH,OAAO,CAACQ,GAAR,CAAY,OAAZ,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CP,KAA3C;AACD;;AACD,QAAMQ,QAAQ,GAAG,sCAAjB;AACA,QAAMC,SAAS,GAAG,gDAAlB;;AAEA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACW,GAAN,CAAUG,QAAQ,GAAGC,SAArB,EAAgC;AAChDP,MAAAA,OAAO,EAAE;AACPS,QAAAA,aAAa,EAAE,YAAYX;AADpB;AADuC,KAAhC,CAAlB;AAMAM,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WAAOA,GAAP;AACD,GATD,CASE,OAAOE,CAAP,EAAU;AACVN,IAAAA,OAAO,CAACO,KAAR,CAAc,QAAd,EAAwBD,CAAxB;;AACA,QAAIb,GAAG,CAACW,GAAR,EAAa;AACXX,MAAAA,GAAG,CAACW,GAAJ,CAAQI,SAAR,CAAkB,GAAlB,EAAuB;AACrBC,QAAAA,QAAQ,EAAE;AADW,OAAvB;AAGAhB,MAAAA,GAAG,CAACW,GAAJ,CAAQM,GAAR;AACD,KALD,MAKO;AACLrB,MAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACD;AACF;AACF","sourcesContent":["import axios from 'axios';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\n// set up cookies\nconst cookies = new Cookies();\n\nexport async function handleAuthSSR(ctx) {\n  let token = null;\n\n  // if context has request info aka Server Side\n  if (ctx.req) {\n    // ugly way to get cookie value from a string of values\n    // good enough for demostration\n    token = ctx.req.headers.cookie.replace(\n      /(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/,\n      '$1'\n    );\n  } else {\n    // we dont have request info aka Client Side\n    token = cookies.get('token');\n    console.log('got the token from authssr:', token);\n  }\n  const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n  const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n  try {\n    const res = await axios.get(proxyUrl + targetUrl, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n\n    console.log(res);\n    return res;\n  } catch (e) {\n    console.error('Error:', e);\n    if (ctx.res) {\n      ctx.res.writeHead(302, {\n        Location: '/'\n      });\n      ctx.res.end();\n    } else {\n      Router.push('/');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}