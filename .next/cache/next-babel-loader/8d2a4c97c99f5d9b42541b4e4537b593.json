{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\n\nconst authReducer = async (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const url = \"https://owusu-task-manager.herokuapp.com/users/login\";\n        const response = await fetch(proxyUrl + url, {\n          method: \"POST\",\n          body: _JSON$stringify(data),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const userInfo = await response.json(); // console.log(\"setting userInfo: \", userInfo);\n\n        var token = userInfo.token;\n        cookies.set(\"token\", token);\n        state.token = token;\n        Router.push(\"/TodoAppPage\"); // console.log(\"pushing to todoapppage!\");\n      } catch (e) {\n        // console.log(\"setting state.error to false!\", state.error);\n        state.error = true;\n        console.error(\"Error:\", e);\n        Router.push(\"/\");\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/auth.reducer.js"],"names":["Router","Cookies","cookies","authReducer","state","action","type","data","email","password","proxyUrl","url","response","fetch","method","body","headers","userInfo","json","token","set","push","e","error","console"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AACA,MAAME,WAAW,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,UAAIC,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KADL;AAETC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI;AAFR,OAAX;;AAIA,UAAI;AACF,cAAMC,QAAQ,GAAG,sCAAjB;AACA,cAAMC,GAAG,GAAG,sDAAZ;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,GAAGC,GAAZ,EAAiB;AAC3CG,UAAAA,MAAM,EAAE,MADmC;AAE3CC,UAAAA,IAAI,EAAE,gBAAeR,IAAf,CAFqC;AAG3CS,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAHkC,SAAjB,CAA5B;AAQA,cAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAvB,CAXE,CAYF;;AACA,YAAIC,KAAK,GAAGF,QAAQ,CAACE,KAArB;AACAjB,QAAAA,OAAO,CAACkB,GAAR,CAAY,OAAZ,EAAqBD,KAArB;AACAf,QAAAA,KAAK,CAACe,KAAN,GAAcA,KAAd;AAEAnB,QAAAA,MAAM,CAACqB,IAAP,CAAY,cAAZ,EAjBE,CAkBF;AACD,OAnBD,CAmBE,OAAOC,CAAP,EAAU;AACV;AACAlB,QAAAA,KAAK,CAACmB,KAAN,GAAc,IAAd;AAEAC,QAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAtB,QAAAA,MAAM,CAACqB,IAAP,CAAY,GAAZ;AACD;;AACD,aAAOjB,KAAP;;AAEF;AACE,aAAOA,KAAP;AAnCJ;AAqCD,CAtCD;;AAuCA,eAAeD,WAAf","sourcesContent":["import Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst authReducer = async (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      var data = {\n        email: action.email,\n        password: action.password\n      };\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const url = \"https://owusu-task-manager.herokuapp.com/users/login\";\n        const response = await fetch(proxyUrl + url, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        const userInfo = await response.json();\n        // console.log(\"setting userInfo: \", userInfo);\n        var token = userInfo.token;\n        cookies.set(\"token\", token);\n        state.token = token;\n\n        Router.push(\"/TodoAppPage\");\n        // console.log(\"pushing to todoapppage!\");\n      } catch (e) {\n        // console.log(\"setting state.error to false!\", state.error);\n        state.error = true;\n\n        console.error(\"Error:\", e);\n        Router.push(\"/\");\n      }\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}