{"ast":null,"code":"import axios from \"axios\"; // import Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  // console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = {\n        description\n      };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        console.log(res); // Router.push(\"/TodoAppPage\");\n        //gonna be needing that id the server returns...\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      // console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        }); // Router.push(\"/TodoAppPage\");\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"TOGGLE\":\n      // console.log(\"toggle clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = {\n          completed: isDone\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        }); // Router.push(\"/TodoAppPage\");\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = {\n          description\n        };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        }); // Router.push(\"/TodoAppPage\");\n\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Cookies","cookies","token","get","todoReducer","state","action","type","description","task","body","proxyUrl","targetUrl","res","url","method","data","headers","Authorization","console","log","e","id","isDone","completed","updateData","newTask"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// import Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  // console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = { description };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        console.log(res);\n        // Router.push(\"/TodoAppPage\");\n        //gonna be needing that id the server returns...\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      // console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    case \"TOGGLE\":\n      // console.log(\"toggle clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = { completed: isDone };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = { description };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}