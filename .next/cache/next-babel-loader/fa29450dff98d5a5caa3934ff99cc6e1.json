{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from \"axios\"; // import Router from \"next/router\";\n\nimport { Cookies } from \"react-cookie\";\nvar cookies = new Cookies();\nvar token = cookies.get(\"token\");\n\nvar todoReducer = function todoReducer(state, action) {\n  var description, body, proxyUrl, targetUrl, res, _proxyUrl, _targetUrl, _res, _proxyUrl2, _targetUrl2, isDone, updateData, _res2, _proxyUrl3, _targetUrl3, _description, _body, _res3;\n\n  return _regeneratorRuntime.async(function todoReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = action.type;\n          _context.next = _context.t0 === \"ADD\" ? 3 : _context.t0 === \"REMOVE\" ? 17 : _context.t0 === \"TOGGLE\" ? 29 : _context.t0 === \"EDIT\" ? 43 : 57;\n          break;\n\n        case 3:\n          description = action.task;\n          body = {\n            description: description\n          };\n          _context.prev = 5;\n          proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(axios({\n            url: proxyUrl + targetUrl,\n            method: \"post\",\n            data: body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 10:\n          res = _context.sent;\n          return _context.abrupt(\"break\", 58);\n\n        case 14:\n          _context.prev = 14;\n          _context.t1 = _context[\"catch\"](5);\n          console.log(_context.t1);\n\n        case 17:\n          _context.prev = 17;\n          _proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          _context.next = 22;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl + _targetUrl,\n            method: \"delete\",\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 22:\n          _res = _context.sent;\n          return _context.abrupt(\"break\", 58);\n\n        case 26:\n          _context.prev = 26;\n          _context.t2 = _context[\"catch\"](17);\n          console.log(_context.t2);\n\n        case 29:\n          _context.prev = 29;\n          _proxyUrl2 = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl2 = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          isDone = !action.completed;\n          updateData = {\n            completed: isDone\n          };\n          _context.next = 36;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl2 + _targetUrl2,\n            method: \"patch\",\n            data: updateData,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 36:\n          _res2 = _context.sent;\n          return _context.abrupt(\"break\", 58);\n\n        case 40:\n          _context.prev = 40;\n          _context.t3 = _context[\"catch\"](29);\n          console.log(_context.t3);\n\n        case 43:\n          _context.prev = 43;\n          _proxyUrl3 = \"https://cors-anywhere.herokuapp.com/\";\n          _targetUrl3 = \"https://owusu-task-manager.herokuapp.com/tasks/\".concat(action.id);\n          _description = action.newTask;\n          _body = {\n            description: _description\n          };\n          _context.next = 50;\n          return _regeneratorRuntime.awrap(axios({\n            url: _proxyUrl3 + _targetUrl3,\n            method: \"patch\",\n            data: _body,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 50:\n          _res3 = _context.sent;\n          return _context.abrupt(\"break\", 58);\n\n        case 54:\n          _context.prev = 54;\n          _context.t4 = _context[\"catch\"](43);\n          console.log(_context.t4);\n\n        case 57:\n          return _context.abrupt(\"return\", state);\n\n        case 58:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 14], [17, 26], [29, 40], [43, 54]]);\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/reducers/todo.reducer.js"],"names":["axios","Cookies","cookies","token","get","todoReducer","state","action","type","description","task","body","proxyUrl","targetUrl","url","method","data","headers","Authorization","res","console","log","id","isDone","completed","updateData","newTask"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// import Router from \"next/router\";\nimport { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\nconst token = cookies.get(\"token\");\n\nconst todoReducer = async (state, action) => {\n  // console.log(\"state before switch/case executes: \", state);\n  switch (action.type) {\n    case \"ADD\":\n      const description = action.task;\n      const body = { description };\n\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = \"https://owusu-task-manager.herokuapp.com/tasks\";\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"post\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        //gonna be needing that id the server returns...\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"REMOVE\":\n      // console.log(\"remove clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"delete\",\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n    case \"TOGGLE\":\n      // console.log(\"toggle clicked!\");\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const isDone = !action.completed;\n        const updateData = { completed: isDone };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: updateData,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    case \"EDIT\":\n      try {\n        const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n        const targetUrl = `https://owusu-task-manager.herokuapp.com/tasks/${action.id}`;\n        const description = action.newTask;\n        const body = { description };\n        const res = await axios({\n          url: proxyUrl + targetUrl,\n          method: \"patch\",\n          data: body,\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        // Router.push(\"/TodoAppPage\");\n        break;\n      } catch (e) {\n        console.log(e);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}