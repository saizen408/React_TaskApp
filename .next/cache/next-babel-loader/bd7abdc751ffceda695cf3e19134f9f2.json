{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router from 'next/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { UserContext } from './contexts/todos.context';\nimport useInputState from './hooks/useInputState';\nimport cubeSpinner from './styles/cubeSpinner';\nvar words = {\n  english: {\n    signIn: 'Sign In',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    email: 'Adresse Électronique',\n    password: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    email: 'Correo Electrónico',\n    password: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    email: 'E-Mail-Addresse',\n    password: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n  日本語: {\n    signIn: 'サインイン',\n    email: '電子メールアドレス',\n    password: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nfunction Form(props) {\n  var _useContext = useContext(LanguageContext),\n      language = _useContext.language,\n      changeLanguage = _useContext.changeLanguage;\n\n  var _useContext2 = useContext(UserContext),\n      token = _useContext2.token,\n      authenticate = _useContext2.authenticate; // const token = useContext(UserContext);\n\n\n  var classes = props.classes;\n  var _words$language = words[language],\n      email = _words$language.email,\n      signIn = _words$language.signIn,\n      password = _words$language.password,\n      remember = _words$language.remember;\n\n  var _useInputState = useInputState(''),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      emailVal = _useInputState2[0],\n      handleEmailChange = _useInputState2[1],\n      emailReset = _useInputState2[2];\n\n  var _useInputState3 = useInputState(''),\n      _useInputState4 = _slicedToArray(_useInputState3, 3),\n      passVal = _useInputState4[0],\n      handlePassChange = _useInputState4[1],\n      passReset = _useInputState4[2];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setSnackOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoader = _React$useState4[1];\n\n  var handleClick = function handleClick() {\n    setSnackOpen(true);\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setLoader(true);\n    authenticate({\n      type: 'LOGIN',\n      email: emailVal,\n      password: passVal\n    });\n    console.log('testing', token.token);\n    emailReset();\n    passReset();\n    setTimeout(function () {\n      if (token.token == '') {\n        setLoader(false);\n        setSnackOpen(true);\n      }\n    }, 500); //toggle loader\n    // getToken();\n    // try {\n    //   const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    //   const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n    //   const response = await fetch(proxyUrl + url, {\n    //     method: 'POST',\n    //     body: JSON.stringify(this.state),\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     }\n    //   });\n    //   const userInfo = await response.json();\n    //   token = userInfo.token;\n    //   setLoader(false);\n    //   // this.setState(() => ({ loading: false, token: userInfo.token }));\n    //   console.log(userInfo);\n    //   // Router.push('/TodoAppPage');\n    // } catch (error) {\n    //   console.error('Error:', error);\n    //   Router.push('/');\n    //   setLoader(false);\n    //   setSnackOpen(true);\n    //   // this.setState({ email: '', password: '' });\n    // }\n  };\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: classes.loader\n    }, cubeSpinner());\n  }\n\n  return __jsx(\"main\", {\n    className: classes.main\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    variant: \"h5\"\n  }, signIn), __jsx(Select, {\n    value: language,\n    onChange: changeLanguage\n  }, __jsx(MenuItem, {\n    value: \"english\"\n  }, \"English\"), __jsx(MenuItem, {\n    value: \"french\"\n  }, \"French\"), __jsx(MenuItem, {\n    value: \"spanish\"\n  }, \"Spanish\"), __jsx(MenuItem, {\n    value: \"german\"\n  }, \"German\"), __jsx(MenuItem, {\n    value: \"\\u65E5\\u672C\\u8A9E\"\n  }, \"\\u65E5\\u672C\\u8A9E\")), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit\n  }, __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, email), __jsx(Input, {\n    id: \"email\",\n    name: \"email\",\n    value: emailVal,\n    onChange: handleEmailChange,\n    autoFocus: true\n  })), __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, password), __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    value: passVal,\n    onChange: handlePassChange,\n    autoFocus: true\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\"\n    }),\n    label: remember\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submit\n  }, signIn))), __jsx(Button, {\n    onClick: handleClick\n  }, \"Open simple snackbar\"), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: open,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, \"Email and/or Password is incorrect\"),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: handleClose\n    }, __jsx(CloseIcon, null))]\n  }));\n}\n\nexport default withStyles(styles)(Form);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/Form.js"],"names":["React","useContext","Router","Avatar","Button","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","Snackbar","IconButton","CloseIcon","withStyles","styles","LanguageContext","ThemeContext","UserContext","useInputState","cubeSpinner","words","english","signIn","email","password","remember","french","spanish","german","日本語","Form","props","language","changeLanguage","token","authenticate","classes","emailVal","handleEmailChange","emailReset","passVal","handlePassChange","passReset","useState","open","setSnackOpen","loading","setLoader","handleClick","handleClose","event","reason","handleSubmit","e","preventDefault","type","console","log","setTimeout","loader","main","paper","avatar","form","submit","vertical","horizontal","close"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Router from 'next/router';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { UserContext } from './contexts/todos.context';\nimport useInputState from './hooks/useInputState';\nimport cubeSpinner from './styles/cubeSpinner';\n\nconst words = {\n  english: {\n    signIn: 'Sign In',\n    email: 'Email Address',\n    password: 'Password',\n    remember: 'Remember Me'\n  },\n  french: {\n    signIn: 'Se Connecter',\n    email: 'Adresse Électronique',\n    password: 'Mot de Passe',\n    remember: 'Souviens-toi De Moi'\n  },\n  spanish: {\n    signIn: 'Registrarse',\n    email: 'Correo Electrónico',\n    password: 'Contraseña',\n    remember: 'Recuérdame'\n  },\n  german: {\n    signIn: 'anmelden',\n    email: 'E-Mail-Addresse',\n    password: 'Passwort',\n    remember: 'Behalte mich in Erinnerung'\n  },\n\n  日本語: {\n    signIn: 'サインイン',\n    email: '電子メールアドレス',\n    password: 'パスワード',\n    remember: '私を覚えている'\n  }\n};\n\nfunction Form(props) {\n  const { language, changeLanguage } = useContext(LanguageContext);\n  const { token, authenticate } = useContext(UserContext);\n  // const token = useContext(UserContext);\n  const { classes } = props;\n  const { email, signIn, password, remember } = words[language];\n  const [emailVal, handleEmailChange, emailReset] = useInputState('');\n  const [passVal, handlePassChange, passReset] = useInputState('');\n  const [open, setSnackOpen] = React.useState(false);\n  const [loading, setLoader] = React.useState(false);\n\n  const handleClick = () => {\n    setSnackOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackOpen(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoader(true);\n    authenticate({ type: 'LOGIN', email: emailVal, password: passVal });\n    console.log('testing', token.token);\n    emailReset();\n    passReset();\n    setTimeout(\n      () => {\n        if (token.token == '') {\n          setLoader(false);\n          setSnackOpen(true);\n        }\n      },\n\n      500\n    );\n\n    //toggle loader\n\n    // getToken();\n\n    // try {\n    //   const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    //   const url = 'https://owusu-task-manager.herokuapp.com/users/login';\n    //   const response = await fetch(proxyUrl + url, {\n    //     method: 'POST',\n    //     body: JSON.stringify(this.state),\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     }\n    //   });\n\n    //   const userInfo = await response.json();\n    //   token = userInfo.token;\n    //   setLoader(false);\n    //   // this.setState(() => ({ loading: false, token: userInfo.token }));\n\n    //   console.log(userInfo);\n    //   // Router.push('/TodoAppPage');\n    // } catch (error) {\n    //   console.error('Error:', error);\n    //   Router.push('/');\n    //   setLoader(false);\n    //   setSnackOpen(true);\n\n    //   // this.setState({ email: '', password: '' });\n    // }\n  };\n\n  if (loading) {\n    return <div className={classes.loader}>{cubeSpinner()}</div>;\n  }\n\n  return (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{signIn}</Typography>\n        <Select value={language} onChange={changeLanguage}>\n          <MenuItem value=\"english\">English</MenuItem>\n          <MenuItem value=\"french\">French</MenuItem>\n          <MenuItem value=\"spanish\">Spanish</MenuItem>\n          <MenuItem value=\"german\">German</MenuItem>\n          <MenuItem value=\"日本語\">日本語</MenuItem>\n        </Select>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">{email}</InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              value={emailVal}\n              onChange={handleEmailChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">{password}</InputLabel>\n            <Input\n              id=\"password\"\n              name=\"password\"\n              value={passVal}\n              onChange={handlePassChange}\n              autoFocus\n            ></Input>\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox color=\"primary\" />}\n            label={remember}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            fullWidth\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {signIn}\n          </Button>\n        </form>\n      </Paper>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={\n          <span id=\"message-id\">Email and/or Password is incorrect</span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </main>\n  );\n}\n\nexport default withStyles(styles)(Form);\n"]},"metadata":{},"sourceType":"module"}