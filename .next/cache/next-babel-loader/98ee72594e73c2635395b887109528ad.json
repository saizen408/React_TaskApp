{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport axios from 'axios'; //token , starter tasks?, reducer\n\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  console.log('token:', token); //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let val;\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios.get(proxyUrl + targetUrl, {\n        headers: {\n          Authorization: 'Bearer ' + token //the token is a variable which holds the token\n\n        }\n      }).then(response => {\n        console.log(response);\n        val = response.data;\n      });\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n\n    return val;\n  }); //   useEffect(() => {\n  //   })\n\n  console.log('state inside dbreducer:', state);\n  return [state, dispatch];\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","axios","useDBReducer","token","defaultVal","todoReducer","console","log","state","dispatch","val","proxyUrl","targetUrl","get","headers","Authorization","then","response","data","e","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,KAAtB,EADoD,CAEpD;AACA;;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBV,UAAU,CAACM,WAAD,EAAcD,UAAd,EAA0B,MAAM;AAClE;AACA,QAAIM,GAAJ;AAEA,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,SAAS,GAAG,gDAAlB;;AACA,QAAI;AACFX,MAAAA,KAAK,CACFY,GADH,CACOF,QAAQ,GAAGC,SADlB,EAC6B;AACzBE,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYZ,KADpB,CAC0B;;AAD1B;AADgB,OAD7B,EAMGa,IANH,CAMQC,QAAQ,IAAI;AAChBX,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACAP,QAAAA,GAAG,GAAGO,QAAQ,CAACC,IAAf;AACD,OATH;AAUD,KAXD,CAWE,OAAOC,CAAP,EAAU;AACVb,MAAAA,OAAO,CAACc,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAT,MAAAA,GAAG,GAAGN,UAAN;AACD;;AACD,WAAOM,GAAP;AACD,GAtBmC,CAApC,CAJoD,CA2BpD;AAEA;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,KAAvC;AACA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAASP,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n//token , starter tasks?, reducer\nfunction useDBReducer(token, defaultVal, todoReducer) {\n  console.log('token:', token);\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    let val;\n\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n    try {\n      axios\n        .get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token //the token is a variable which holds the token\n          }\n        })\n        .then(response => {\n          console.log(response);\n          val = response.data;\n        });\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n    return val;\n  });\n  //   useEffect(() => {\n\n  //   })\n  console.log('state inside dbreducer:', state);\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}