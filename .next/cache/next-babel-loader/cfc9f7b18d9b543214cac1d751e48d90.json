{"ast":null,"code":"import { useReducer, useEffect } from 'react';\nimport axios from 'axios'; //token , starter tasks?, reducer\n\nfunction useDBReducer(todoReducer, defaultVal, token) {\n  console.log(defaultVal);\n  console.log(todoReducer); //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n\n  var _useReducer = useReducer(todoReducer, defaultVal, function () {\n    //this function checks database for existing tasks for the user\n    var val;\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    var targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios.get(proxyUrl + targetUrl, {\n        headers: {\n          Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        val = response.data;\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n\n    return val;\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer }; // let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);","map":{"version":3,"sources":["/Users/ericowusu/Documents/React _Course_Projects/Next/first-next/components/hooks/useDBReducer.js"],"names":["useReducer","useEffect","axios","useDBReducer","todoReducer","defaultVal","token","console","log","val","proxyUrl","targetUrl","get","headers","Authorization","then","response","data","e","error","state","dispatch"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,KAA/C,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAFoD,CAGpD;AACA;;AAJoD,oBAK1BJ,UAAU,CAACI,WAAD,EAAcC,UAAd,EAA0B,YAAM;AAClE;AACA,QAAII,GAAJ;AAEA,QAAMC,QAAQ,GAAG,sCAAjB;AACA,QAAMC,SAAS,GAAG,gDAAlB;;AAEA,QAAI;AACFT,MAAAA,KAAK,CACFU,GADH,CACOF,QAAQ,GAAGC,SADlB,EAC6B;AACzBE,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYR,KAAK,CAACA,KAD1B,CACgC;;AADhC;AADgB,OAD7B,EAMGS,IANH,CAMQ,UAAAC,QAAQ,EAAI;AAChBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,IAArB;AACAR,QAAAA,GAAG,GAAGO,QAAQ,CAACC,IAAf;AACD,OATH,WAUS,UAAAC,CAAC,EAAI;AACVX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACD,OAZH;AAaD,KAdD,CAcE,OAAOA,CAAP,EAAU;AACVX,MAAAA,OAAO,CAACY,KAAR,CAAc,QAAd,EAAwBD,CAAxB;AACAT,MAAAA,GAAG,GAAGJ,UAAN;AACD;;AACD,WAAOI,GAAP;AACD,GA1BmC,CALgB;AAAA,MAK7CW,KAL6C;AAAA,MAKtCC,QALsC;;AAiCpD,SAAO,CAACD,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,SAASlB,YAAT,G,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n//token , starter tasks?, reducer\nfunction useDBReducer(todoReducer, defaultVal, token) {\n  console.log(defaultVal);\n  console.log(todoReducer);\n  //make piece of state, based off of value in localstorage (or default)\n  //in case of a DB the key will equal the collection name\n  const [state, dispatch] = useReducer(todoReducer, defaultVal, () => {\n    //this function checks database for existing tasks for the user\n    var val;\n\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = 'https://owusu-task-manager.herokuapp.com/tasks';\n\n    try {\n      axios\n        .get(proxyUrl + targetUrl, {\n          headers: {\n            Authorization: 'Bearer ' + token.token //the token is a variable which holds the token\n          }\n        })\n        .then(response => {\n          console.log(response.data);\n          val = response.data;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } catch (e) {\n      console.error('Error:', e);\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  return [state, dispatch];\n}\n\nexport { useDBReducer };\n\n// let val;\n// try {\n//   val = JSON.parse(\n//     window.localStorage.getItem(token) || String(defaultVal)\n//   );\n// } catch (e) {\n//   val = defaultVal;\n// }\n// return val;\n\n//   useEffect(() => {\n//     window.localStorage.setItem(token, JSON.stringify(state)); //use for post request (i.e update/delete/add tasks)\n//   }, [state, token]);\n"]},"metadata":{},"sourceType":"module"}